package com.yskj.service;import com.yskj.dao.IndemnityDao;import com.yskj.dao.PositionDao;import com.yskj.models.*;import com.yskj.service.base.AbstractService;import com.yskj.utils.IJobSecurityUtils;import com.yskj.utils.UUIDGenerator;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.List;@Servicepublic class IndemnityService extends AbstractService {	@Autowired    private IndemnityDao indemnityDao;	@Autowired	private WxorderService wxorderService;	@Autowired	private PositionDao positionDao;	@Autowired	private AccountService accountService;	public IndemnityService() {		super();	}	@Override	public IndemnityDao getDao() {		return this.indemnityDao;	}	@Transactional	public void indemnityCallback(Wxorder wxorder)throws Exception{		//修改微信状态为已经回调		wxorder.setStatus(4);		wxorderService.update(wxorder);		//需要吧这个钱给企业，给他们一个惊喜		Indemnity indemnity = this.get(wxorder.getRefID());		Position position = positionDao.get(indemnity.getPositionID());		Bondtransaction bondtransaction = new Bondtransaction();		bondtransaction.setOrderNumber(wxorder.getCode());		bondtransaction.setPositionID(indemnity.getPositionID());		bondtransaction.setPayerType(1);		bondtransaction.setPremiumMoney(indemnity.getMoney());		bondtransaction.setWxorderID(wxorder.getId());		bondtransaction.setCreateTime(wxorder.getCreateTime());		accountService.compensateZpBond(wxorder,bondtransaction,IJobSecurityUtils.getLoginUserId(),position.getUserID());		//设置状态为已经支付		indemnity.setStatus(2);		indemnity.setOrderNumber(wxorder.getCode());		this.update(indemnity);	}	public Boolean hasLiquidatedDamages(String userID)throws Exception{		return getIndemnityByUserID(userID)!=null;	}	public Indemnity getIndemnityByUserID(String userID)throws Exception{		QueryParam queryParam = new QueryParam("userID",userID);		queryParam.put("status",1);		Indemnity indemnity = this.one(queryParam);		return indemnity;	}}