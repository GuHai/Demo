package com.yskj.service;import com.yskj.dao.VoucherDao;import com.yskj.models.QueryParam;import com.yskj.models.Recharge;import com.yskj.models.Voucher;import com.yskj.models.WorkList;import com.yskj.service.base.AbstractService;import com.yskj.utils.DateUtils;import com.yskj.utils.Result;import com.yskj.utils.SignUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.List;import java.util.Map;@Servicepublic class VoucherService extends AbstractService {	@Autowired    private VoucherDao voucherDao;	@Autowired	private RechargeService rechargeService ;	@Autowired	private AccountService accountService ;	public VoucherService() {		super();	}	@Override	public VoucherDao getDao() {		return this.voucherDao;	}	public List<Map> getVoucherList(String userID){		rechargeService.updateCallbackRecharge(userID);		return voucherDao.getVoucherList(userID);	}	@Transactional	public synchronized Result voucherCallback(WorkList workList) throws Exception{		Result result = new Result();		Voucher voucher = this.get(workList.getRefID());		if (workList.getStatus() == 2){			//修改状态。			voucher.setStatus(1);			this.update(voucher);			Recharge recharge = rechargeService.one(new QueryParam("voucherID",voucher.getId()));			if(recharge == null){				//生成充值记录数据。				recharge = new Recharge();				recharge.setMoney(voucher.getMoney());				recharge.setVoucherID(voucher.getId());				recharge.setRechargeDate(voucher.getCreateTime());				recharge.setOrderNumber("C"+DateUtils.getCurrTime()+ SignUtils.getRandomStringByLength(17));				recharge.setUserID(voucher.getUserID());				rechargeService.add(recharge);				//生成入账信息。				accountService.rechargeBack(recharge);			}else{				throw new Exception("该订单已经审核过了。");			}		}		return result ;	}	public Voucher upload_voucher_check(String id){		return voucherDao.upload_voucher_check(id);	}	public List<Voucher> getVoucherInfo(QueryParam queryParam){		return voucherDao.getVoucherInfo(queryParam);	}	public List<Voucher> getHistoryVoucherInfo(String userID){		return this.getDao().getHistoryVoucherInfo(userID);	}}