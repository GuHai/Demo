package com.yskj.service;import com.google.gson.Gson;import com.yskj.dao.FollowDao;import com.yskj.dao.TemplateTaskDao;import com.yskj.exception.IJobException;import com.yskj.models.Follow;import com.yskj.models.QueryParam;import com.yskj.models.TemplateTask;import com.yskj.service.base.AbstractService;import com.yskj.service.base.DictCacheService;import com.yskj.utils.HttpUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.HashMap;import java.util.Map;@Servicepublic class TemplateTaskService extends AbstractService {	private    String TaskTemplate = "{\n" +			"           \"touser\":\"${openID}\",\n" +			"           \"template_id\":\"${templateID}\",\n" +			"           \"url\":\"${url}\",  \n" +			"           \"miniprogram\":{\n" +			"             \"appid\":\"\",\n" +			"             \"pagepath\":\"\"\n" +			"           },          \n" +			"           \"data\":${data}\n" +			"       }";	@Autowired    private TemplateTaskDao templateTaskDao;	@Autowired	private FollowDao followDao;	public TemplateTaskService() {		super();	}	@Override	public TemplateTaskDao getDao() {		return this.templateTaskDao;	}	private Map  sendMessage(String param)throws IJobException {		String url = "https://api.weixin.qq.com/cgi-bin/message/template/send?access_token="+ DictCacheService.getAccessToken();		return new Gson().fromJson(HttpUtils.post(url,param),HashMap.class);	}	public  void process(TemplateTask templateTask){		try{			String template =   TaskTemplate.replace("${openID}",templateTask.getOpenID())					.replace("${templateID}",templateTask.getTemplateID())					.replace("${url}",templateTask.getUrl())					.replace("${data}",templateTask.getData());			//先改变状态，然后发送消息			templateTask.setStatus(1);			this.update(templateTask);			Map result = sendMessage(template);			if(result.get("errcode")!=null){				if("ok".equals(result.get("errmsg").toString())){  //如果成功了怎么样					templateTask.setErrmsg(result.get("errmsg").toString());					this.update(templateTask);				}else{ //如果不成功怎么样					//require subscribe hint  如果是未关注的，直接删除掉算了					if(result.get("errmsg").toString().startsWith("require subscribe hint")){						this.physicalDelete(templateTask);						/*Follow follow = followDao.one(new QueryParam("openID",templateTask.getOpenID()));						if(follow!=null){							followDao.del(follow);						}*/					}else{						DictCacheService.refreshAccessToken();						if(templateTask.getVersion()<5){  //版本小于7次的时候，重新调用该方法							this.process(templateTask);						}else{							templateTask.setErrmsg(result.get("errmsg").toString());							this.update(templateTask);						}					}				}			}		}catch (Exception e){			e.printStackTrace();		}	}}