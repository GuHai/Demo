package com.yskj.service;import com.yskj.dao.InvoiceDao;import com.yskj.models.*;import com.yskj.models.auth.User;import com.yskj.models.enums.Examine;import com.yskj.service.auth.UserService;import com.yskj.service.base.AbstractService;import com.yskj.utils.Result;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.List;@Servicepublic class InvoiceService extends AbstractService {	@Autowired    private InvoiceDao invoiceDao;	@Autowired	private TxAdminService txAdminService ;	@Autowired	private UserService userService ;	@Autowired	private MessageTemplateService messageTemplateService ;	@Autowired	private WxorderService wxorderService ;	public InvoiceService() {		super();	}	@Override	public InvoiceDao getDao() {		return this.invoiceDao;	}	@Transactional	public Result invoiceCallback (WorkList workList)throws Exception{		Result result = new Result();		Invoice invoice = this.get(workList.getRefID());		invoice.setStatus(true);		this.update(invoice);		return result ;	}	public List<Invoice> getInvoiceHistoryInfoList(QueryParam queryParam){		return invoiceDao.getInvoiceHistoryInfoList(queryParam);	}	public Invoice submInvoice_check(String id){		return invoiceDao.submInvoice_check(id);	}	@Transactional	public void postageCallback(Wxorder wxorder) throws Exception{		//将用户提供开发票的数据和请求推送给管理员		//推送给管理员		TxAdmin txAdmin = txAdminService.one(new QueryParam("id","3"));		User userAdmin  = userService.get(txAdmin.getUserID());		WorkList workList = new WorkList();		workList.updateType(Examine.Invoice);		workList.setStatus(1);		workList.setAuditor(txAdmin.getUserID());		workList.setCallback("/api/RechargeController/invoiceCallback");		workList.setRefID(wxorder.getRefID());		workList.setUrl("/h5/submInvoice_check?data.invoice.id="+wxorder.getRefID());		messageTemplateService.ptGdxx(userAdmin.getWeChatNo(),workList);		wxorder.setStatus(4);		wxorderService.update(wxorder);	}}