package com.yskj.service;import com.yskj.dao.EvaluateDao;import com.yskj.models.Beenrecruited;import com.yskj.models.Evaluate;import com.yskj.models.QueryParam;import com.yskj.service.base.AbstractService;import com.yskj.utils.IJobSecurityUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.Date;import java.util.List;@Servicepublic class EvaluateService extends AbstractService {	@Autowired    private EvaluateDao evaluateDao;	@Autowired	private BeenrecruitedService beenrecruitedService;	@Autowired	private ResumeService resumeService;	public EvaluateService() {		super();	}	@Override	public EvaluateDao getDao() {		return this.evaluateDao;	}	public List<Evaluate> getNowUserWithEvaluate(QueryParam queryParam){		return evaluateDao.getNowUserWithEvaluate(queryParam);	}	public Evaluate replymapOne(QueryParam queryParam)throws Exception{		return evaluateDao.replymapOne(queryParam);	}	public Evaluate getOneEvaluate(QueryParam queryParam)throws Exception {		return evaluateDao.getOneEvaluate(queryParam);	}	@Transactional	public void addQzContent(Evaluate evaluate)throws Exception{		QueryParam queryParam = new QueryParam();		queryParam.put("createBy",IJobSecurityUtils.getLoginUserId());		/*List<String> resumeIds =   resumeService.findIds(queryParam,"id");		queryParam.clear();*/		queryParam.put("positionID",evaluate.getPositionID());//		queryParam.in("resumeID",resumeIds);		Beenrecruited beenrecruited = beenrecruitedService.one(queryParam);		if(beenrecruited!=null){			beenrecruited.setState(6);			beenrecruited.setDismiss(Boolean.FALSE);			beenrecruited.setWork(new Date());			beenrecruitedService.update(beenrecruited);			evaluate.setEvaluateTime(new Date());			evaluate.setUserID(IJobSecurityUtils.getLoginUserId());			evaluate.setState(true);			this.persistenceAndChild(evaluate);		}	}}