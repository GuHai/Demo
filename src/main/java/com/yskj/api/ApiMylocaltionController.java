package com.yskj.api;import com.google.gson.Gson;import com.yskj.controller.base.BaseController;import com.yskj.models.PageParam;import com.yskj.models.QueryParam;import com.yskj.models.Mylocaltion;import com.yskj.service.MylocaltionService;import com.yskj.utils.HttpUtils;import com.yskj.utils.Result;import org.apache.shiro.authz.annotation.RequiresPermissions;import org.apache.shiro.util.CollectionUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.*;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.util.HashMap;import java.util.List;import java.util.Map;@Controller@RequestMapping(value = "/api/MylocaltionController")public class ApiMylocaltionController extends BaseController{	@Autowired	private MylocaltionService mylocaltionService;	private final static Logger logger = LoggerFactory.getLogger(ApiMylocaltionController.class);	 public MylocaltionService getService() {         return this.mylocaltionService;     }	 /**     * 页面     * @return String     */    @RequiresPermissions("Mylocaltion")    @RequestMapping(value = "",method = RequestMethod.GET, produces = {"text/html; charset=utf-8"})    public String index(Model model){        return "mylocaltion";    }     /**     *新增     * @param mylocaltion     * @return Result     */    @RequestMapping(value = "/add", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result add(Mylocaltion mylocaltion ){         return super.add(mylocaltion);    }    /**     * 删除     * @param mylocaltion     * @return Result     */    @RequestMapping(value = "/delete", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result delete(Mylocaltion mylocaltion ){        return super.delete(mylocaltion);    }     /**     * 修改     * @param mylocaltion     * @return Result     */    @RequestMapping(value = "/update", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result update(Mylocaltion mylocaltion ){        return super.update(mylocaltion);    }    /**     * 查询页面     * @param pageParam     * @return Result     */    @RequestMapping(value = "/findPage", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result findPage(@RequestBody PageParam pageParam ){       return super.findPage(pageParam);    }     /**     * 查询集合     * @param queryParam     * @return Result     */    @RequestMapping(value = "/findList", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result findList(@RequestBody QueryParam queryParam ){        return super.findList(queryParam);    }    /**    * 模糊查询页面    * @param pageParam    * @return Result    */    @RequestMapping(value = "/findLikePage", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result findLikePage(@RequestBody PageParam pageParam ){         return super.findLikePage(pageParam);    }    /**     * 查询集合，模糊查询     * @param queryParam     * @return Result     */    @RequestMapping(value = "/findLikeList", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result findLikeList(@RequestBody QueryParam queryParam ){        return super.findLikeList(queryParam);    }     /**     * 唯一查询     * @param queryParam     * @return Result     */    @RequestMapping(value = "/one", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result one(@RequestBody QueryParam queryParam ){        return super.one(queryParam);    }    /**     * 唯一查询通过ID     * @param id     * @return Result     */    @RequestMapping(value = "/get", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result get(String id ){        return super.get(id);    }    @RequestMapping(value = "/translate/{lat}/{lng}/{type}", method = RequestMethod.GET, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result translate(@PathVariable String lat,@PathVariable String lng,@PathVariable String type){        Result result = new Result();        String jsonstr = HttpUtils.get( "https://apis.map.qq.com/ws/coord/v1/translate?locations="+lat+","+lng+"&type="+type+"&key=3U3BZ-5PDWX-HFP4N-Z7GPP-T3LSH-LABHS");        Map json = new Gson().fromJson(jsonstr,Map.class);        List<Map> localtions = (List<Map>)json.get("locations");        if(!CollectionUtils.isEmpty(localtions)){            Map localtion = localtions.get(0);            String newlat = localtion.get("lat").toString();            String newlng = localtion.get("lng").toString();            String addrstr  =HttpUtils.get("https://apis.map.qq.com/ws/geocoder/v1/?location="+newlat+","+newlng+"&get_poi=0&key=3U3BZ-5PDWX-HFP4N-Z7GPP-T3LSH-LABHS");            Map addrJson = new Gson().fromJson(addrstr,Map.class);            result.setData(addrJson);        }        return result;    }}