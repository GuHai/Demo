package com.yskj.api;import com.yskj.controller.base.BaseController;import com.yskj.models.Enterpriseauthen;import com.yskj.models.PageParam;import com.yskj.models.QueryParam;import com.yskj.models.auth.User;import com.yskj.service.EnterpriseauthenService;import com.yskj.service.auth.UserService;import com.yskj.utils.IJobSecurityUtils;import com.yskj.utils.Result;import org.apache.shiro.authz.annotation.RequiresPermissions;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;@Controller@RequestMapping(value = "/api/EnterpriseauthenController")public class ApiEnterpriseauthenController extends BaseController{	@Autowired	private EnterpriseauthenService enterpriseauthenService;	@Autowired    private UserService userService;	private final static Logger logger = LoggerFactory.getLogger(ApiEnterpriseauthenController.class);	 public EnterpriseauthenService getService() {         return this.enterpriseauthenService;     }	 /**     * 页面     * @return String     */    @RequiresPermissions("Enterpriseauthen")    @RequestMapping(value = "",method = RequestMethod.GET, produces = {"text/html; charset=utf-8"})    public String index(Model model){        return "enterpriseauthen";    }     /**     *新增     * @param enterpriseauthen     * @return Result     */    @RequestMapping(value = "/add", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    public String add(Enterpriseauthen enterpriseauthen ){        try {            enterpriseauthen.setUserID(IJobSecurityUtils.getLoginUserId());            enterpriseauthen.setLicenseTreatment(enterpriseauthen.getLicenseOriginal());            enterpriseauthen.setLegalIDCardBackTreatment(enterpriseauthen.getLegalIDCardBackOriginal());            enterpriseauthen.setLegalIDCardJustTreatment(enterpriseauthen.getLegalIDCardJustOriginal());            enterpriseauthen.setAdminIDCardBackTreatment(enterpriseauthen.getAdminIDCardBackOriginal());            enterpriseauthen.setAdminIDCardJustTreatment(enterpriseauthen.getAdminIDCardJustOriginal());            super.add(enterpriseauthen);        }catch(Exception e){            logger.error(e.getMessage());        }        return "/h5/mine/mine";    }    /**     * 删除     * @param enterpriseauthen     * @return Result     */    @RequestMapping(value = "/delete", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result delete(Enterpriseauthen enterpriseauthen ){        return super.delete(enterpriseauthen);    }     /**     * 修改     * @param enterpriseauthen     * @return Result     */    @RequestMapping(value = "/update", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result update(Enterpriseauthen enterpriseauthen ){        return super.update(enterpriseauthen);    }    /**     * 查询页面     * @param pageParam     * @return Result     */    @RequestMapping(value = "/findPage", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result findPage(@RequestBody PageParam pageParam ){       return super.findPage(pageParam);    }     /**     * 查询集合     * @param queryParam     * @return Result     */    @RequestMapping(value = "/findList", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result findList(@RequestBody QueryParam queryParam ){        return super.findList(queryParam);    }    /**    * 模糊查询页面    * @param pageParam    * @return Result    */    @RequestMapping(value = "/findLikePage", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result findLikePage(@RequestBody PageParam pageParam ){         return super.findLikePage(pageParam);    }    /**     * 查询集合，模糊查询     * @param queryParam     * @return Result     */    @RequestMapping(value = "/findLikeList", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result findLikeList(@RequestBody QueryParam queryParam ){        return super.findLikeList(queryParam);    }     /**     * 唯一查询     * @param queryParam     * @return Result     */    @RequestMapping(value = "/one", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result one(@RequestBody QueryParam queryParam ){        return super.one(queryParam);    }    /**     * 唯一查询通过ID     * @param id     * @return Result     */    @RequestMapping(value = "/get", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result get(String id ){        return super.get(id);    }    /**     * 修改     * @param enterpriseauthen     * @return Result     */    @RequestMapping(value = "/updateEnterpriseAndCert", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result updateEnterpriseAndCert(@RequestBody Enterpriseauthen enterpriseauthen ){        try {            enterpriseauthen.setUserID(IJobSecurityUtils.getLoginUserId());            String sessionCode = (String)IJobSecurityUtils.getSession().getAttribute("code");            if(!sessionCode.equals(enterpriseauthen.getCode()) || enterpriseauthen.getCode() == null ){                throw new Exception();            }            //把user表的电话号码也修改 了            User user = IJobSecurityUtils.getLoginUser();            user.setPhoneNumber(enterpriseauthen.getAdminPhoneNumber());            userService.update(user);            IJobSecurityUtils.getLoginUser().setPhoneNumber(user.getPhoneNumber());            IJobSecurityUtils.getLoginUser().setVersion(user.getVersion());            enterpriseauthen.setStatus(1);//待审核 审核通过            return super.persistenceAndChild(enterpriseauthen);        }catch (Exception e){            logger.error(e.getMessage());            Result result = new Result();            result.put("408","验证码错误");            return result;        }    }}