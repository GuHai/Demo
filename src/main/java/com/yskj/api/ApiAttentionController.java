package com.yskj.api;import com.yskj.controller.base.BaseController;import com.yskj.models.Attention;import com.yskj.models.PageParam;import com.yskj.models.QueryParam;import com.yskj.models.WorkNumber;import com.yskj.service.AttentionService;import com.yskj.service.WorkNumberService;import com.yskj.service.auth.UserService;import com.yskj.utils.IJobSecurityUtils;import com.yskj.utils.Result;import org.apache.shiro.authz.annotation.RequiresPermissions;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;@Controller@RequestMapping(value = "/api/AttentionController")public class ApiAttentionController extends BaseController {    @Autowired    private AttentionService attentionService;    @Autowired    private UserService userService;    @Autowired    private WorkNumberService workNumberService ;    private final static Logger logger = LoggerFactory.getLogger(ApiAttentionController.class);    public AttentionService getService() {        return this.attentionService;    }    /**     * 页面     *     * @return String     */    @RequiresPermissions("Attention")    @RequestMapping(value = "", method = RequestMethod.GET, produces = {"text/html; charset=utf-8"})    public String index(Model model) {        return "attention";    }    /**     * 新增     *     * @param attention     * @return Result     */    @RequestMapping(value = "/add", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result add(@RequestBody Attention attention) {        attention.setConcernID(IJobSecurityUtils.getLoginUserId());        return super.add(attention);    }    /**     * 删除     *     * @param attention     * @return Result     *//*    @RequestMapping(value = "delete", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result delete(@RequestBody Attention attention) {        QueryParam queryParam = new QueryParam();        queryParam.put("userID", attention.getUserID());        queryParam.put("concernID", IJobSecurityUtils.getLoginUserId());        try {            attention = attentionService.one(queryParam);        } catch (Exception e) {            logger.error(e.getMessage());        }        Result result = super.delete(attention);        return result;    }*/    /**     * 修改     *     * @param attention     * @return Result     */    @RequestMapping(value = "update", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result update(@RequestBody Attention attention) {        QueryParam queryParam = new QueryParam();        queryParam.put("userID", attention.getUserID());        queryParam.put("concernID", IJobSecurityUtils.getLoginUserId());        queryParam.put("isDeleted", null);        Attention attention1 = null;        try {            attention1 = attentionService.one(queryParam);            if (attention1 == null) {                attention.setConcernID(IJobSecurityUtils.getLoginUserId());                return super.add(attention);            }        } catch (Exception e) {            logger.error(e.getMessage());        }        attention1.setDeleted(!attention1.isDeleted());        Result result = super.update(attention1);        return result;    }    /**     * 查询页面     *     * @param pageParam     * @return Result     */    @RequestMapping(value = "/findPage", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result findPage(@RequestBody PageParam pageParam) {        return super.findPage(pageParam);    }    /**     * 查询集合     *     * @param queryParam     * @return Result     */    @RequestMapping(value = "/findList", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result findList(@RequestBody QueryParam queryParam) {        return super.findList(queryParam);    }    /**     * 模糊查询页面     *     * @param pageParam     * @return Result     */    @RequestMapping(value = "/findLikePage", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result findLikePage(@RequestBody PageParam pageParam) {        return super.findLikePage(pageParam);    }    /**     * 查询集合，模糊查询     *     * @param queryParam     * @return Result     */    @RequestMapping(value = "/findLikeList", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result findLikeList(@RequestBody QueryParam queryParam) {        return super.findLikeList(queryParam);    }    /**     * 唯一查询     *     * @param queryParam     * @return Result     */    @RequestMapping(value = "/one", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result one(@RequestBody QueryParam queryParam) {        return super.one(queryParam);    }    /**     * 唯一查询通过ID     *     * @param id     * @return Result     */    @RequestMapping(value = "/get", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result get(String id) {        return super.get(id);    }    /**     * 获得关注者集合     *     * @return Result 查询结果集     */    @RequestMapping(value = "/h5/mine/getFocusList", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result getFocusList() {        Result result = new Result();        try {            QueryParam queryParam = new QueryParam();            queryParam.put("concernID", IJobSecurityUtils.getLoginUserId());            result.listData(attentionService.getFocusList(queryParam));        } catch (Exception e) {            logger.error(e.getMessage());        }        return result;    }    /**     * 获得粉丝集合     *     * @return Result 查询结果集     */    @RequestMapping(value = "/h5/mine/getFansList",method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result getFansList(@RequestBody QueryParam queryParam) {        Result result = new Result();        try {            if(queryParam.getCondition().get("userID")==null){                queryParam.put("userID", IJobSecurityUtils.getLoginUserId());            }else {                WorkNumber workNumber = workNumberService.get(queryParam.getCondition().get("userID").toString());                if(workNumber!=null){                    queryParam.put("userID",null);                    queryParam.put("workID",workNumber.getId());                }            }            result.listData(attentionService.getFansList(queryParam));        } catch (Exception e) {            logger.error(e.getMessage());        }        return result;    }}