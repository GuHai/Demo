package com.yskj.api;import com.yskj.controller.base.BaseController;import com.yskj.models.QueryParam;import com.yskj.models.WorkList;import com.yskj.service.WorkListService;import com.yskj.utils.IJobSecurityUtils;import com.yskj.utils.Result;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.*;import java.util.List;@Controller@RequestMapping(value = "/api/WorklistController")public class ApiWorklistController extends BaseController {    @Autowired    private WorkListService worklistService;    private final static Logger logger = LoggerFactory.getLogger(ApiWorklistController.class);    public WorkListService getService() {        return this.worklistService;    }    @RequestMapping(value = "/approval", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result approval(@RequestBody WorkList workList) {        Result result = new Result();        try {            worklistService.update(workList);            result.setMsg("审核通过");        } catch (Exception e) {            e.printStackTrace();            result.error("审批失败");        }        return result;    }    @RequestMapping(value = "/waitExamine", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result waitExamine() {        Result result = new Result();        try {            QueryParam queryParam = new QueryParam("status", 1);            queryParam.put("auditor", IJobSecurityUtils.getLoginUserId());            queryParam.setOrderByClause(" order by w.createTime desc ");            List<WorkList> list = worklistService.findList(queryParam);            result.listData(list);        } catch (Exception e) {            e.printStackTrace();            result.error(e.getMessage());        }        return result;    }    @RequestMapping(value = "/exmaine/{id}", method = RequestMethod.POST, produces = {"application/json; charset=utf-8"})    @ResponseBody    public Result exmaine(@PathVariable String id) {        Result result = new Result();        WorkList workList = null;        try {            workList = worklistService.get(id);            if (workList.getAuditor().equals(IJobSecurityUtils.getLoginUserId())) {                if (workList != null) {                    result.setData(workList);                } else {                    result.error("找不到工单");                }            } else {                result.error("你没有权限");            }        } catch (Exception e) {            e.printStackTrace();        }        return result;    }    @RequestMapping(value = "/exmaineSH/{id}", method = RequestMethod.GET, produces = {"text/html; charset=utf-8"})    public String exmaineSH(Model model, @PathVariable String id) {        try {            WorkList workList = worklistService.get(id);            if (workList.getAuditor().equals(IJobSecurityUtils.getLoginUserId())) {                if (workList != null) {                    model.addAttribute("req", "path");                    model.addAttribute("workList", workList);                    model.addAttribute("url", workList.getUrl());                    return "/h5/examine";                }            }else {                return "/h5/error";            }        } catch (Exception e) {            e.printStackTrace();        }        return "/h5/error";    }}