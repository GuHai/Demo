package com.yskj.models;import com.yskj.aop.StorageChild;import jdk.nashorn.internal.ir.annotations.Ignore;import lombok.Data;import java.util.*;//表名称 beenrecruited@Datapublic class Beenrecruited extends BaseEntity {	private static final long serialVersionUID = 1L;	public Beenrecruited() {		super();	}	    //发布职位模版编号（关联Position表主键）    private String positionID;    //简历编号（关联Resume表主键）    private String resumeID;    // '0':申请了，还没有交钱， '1':'交钱了，报名待确认','2':'待面试','3':'待培训','4':'工作中','5':'待评价','6':'结束'  9：删除    private Integer state;    //报名时间    private Date signUp;    //支付时间    private Date payBond;    //面试事件    private Date interview;    //培训时间    private Date train;    //录取时间    private Date admission;    //工作时间    private Date work;    //结算时间    private Date settlement;    //结束时间    private Date endWork;    //工作日期（数据格式：年[月[日、日]]）    private String workDate;    //求职者是否被辞退 false 不是 true 是    private Boolean dismiss ;    private Boolean initDismiss;    private String reason;    private Boolean vip;    @StorageChild(refColumn = "positionID", revColumn = "positionID")    private Evaluate evaluate;    @Ignore    @StorageChild(service = "",refColumn = "resumeID")    private Resume resume ;    @Ignore    @StorageChild(refColumn = "userID",revColumn = "userID")    private List<Signin> signinList ;    @Ignore    private Position position;    @Ignore    private List statusList;    public void generalStatusList(){        statusList = new ArrayList();        if(this.payBond!=null){            Map<String,Object> map5 = new HashMap<String, Object>();            map5.put("name","支付时间");map5.put("date",this.payBond);statusList.add(map5);        }        if(this.signUp!=null){            Map<String,Object> map  = new HashMap<String, Object>();            map.put("name","报名时间"); map.put("date",this.signUp);statusList.add(map);        }        /*if(this.interview!=null){            Map<String,Object> map1  = new HashMap<String, Object>();            map1.put("name","面试时间"); map1.put("date",this.interview);statusList.add(map1);        }        if(this.train!=null){            Map<String,Object> map2  = new HashMap<String, Object>();            map2.put("name","培训时间"); map2.put("date",this.train);statusList.add(map2);        }*/        if(this.work!=null){            Map<String,Object> map3  = new HashMap<String, Object>();            map3.put("name","工作时间"); map3.put("date",this.work);statusList.add(map3);        }        if(this.settlement!=null){            Map<String,Object> map4  = new HashMap<String, Object>();            map4.put("name","结算时间"); map4.put("date",this.settlement);statusList.add(map4);        }        if(this.endWork!=null){            Map<String,Object> map6  = new HashMap<String, Object>();            map6.put("name","结束时间"); map6.put("date",this.endWork);statusList.add(map6);        }    }    private Integer signnum;    private String signState;}