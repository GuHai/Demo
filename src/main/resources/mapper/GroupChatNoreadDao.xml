<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yskj.dao.GroupChatNoreadDao" >

<!-- 查询字段 -->
<sql id="columnList" >
	g.id,
	 g.groupID, g.userID, g.noreadcount, g.createTime, g.updateTime, g.createBy, g.updateBy, g.isDeleted, g.version
</sql>


<!--通过id集合in查询-->
<sql id="inClause">
    <if test="column!=null">
        <if test="ids==null">
            and 1=0
        </if>
        <if test="ids!=null">
            <if test="ids.size>0">
                and  g.${column} in
                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">
                    #{items}
                </foreach>
            </if>
            <if test="ids.size==0">
                and 1=0
            </if>
        </if>
    </if>
</sql>

<!-- 查询条件 -->
<sql id="whereClause">
where 1=1
<trim  suffixOverrides="," >
	<if test="condition.id != null" >
	    and g.id = #{condition.id}
	</if>
	<if test="condition.groupID != null" >and  g.groupID = #{condition.groupID}</if>
<if test="condition.userID != null" >and  g.userID = #{condition.userID}</if>
<if test="condition.noreadcount != null" >and  g.noreadcount = #{condition.noreadcount}</if>
<if test="condition.createTime != null" >and  g.createTime = #{condition.createTime}</if>
<if test="condition.updateTime != null" >and  g.updateTime = #{condition.updateTime}</if>
<if test="condition.createBy != null" >and  g.createBy = #{condition.createBy}</if>
<if test="condition.updateBy != null" >and  g.updateBy = #{condition.updateBy}</if>
<if test="condition.isDeleted != null" >and  g.isDeleted = #{condition.isDeleted}</if>
<if test="condition.version != null" >and  g.version = #{condition.version}</if>

</trim>
<include refid="inClause"/>
</sql>

<!-- 模糊查询条件 -->
<sql id="whereLikeClause">
where 1=1
<trim  suffixOverrides="," >
	<if test="condition.id != null" >
	    and g.id = #{condition.id}
	</if>													 		
	<if test="condition.groupID != null" >and  UPPER(g.groupID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.groupID}),'%'))</if>
<if test="condition.userID != null" >and  UPPER(g.userID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.userID}),'%'))</if>
<if test="condition.noreadcount != null" >and  UPPER(g.noreadcount) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.noreadcount}),'%'))</if>
<if test="condition.createTime != null" >and  UPPER(g.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if>
<if test="condition.updateTime != null" >and  UPPER(g.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if>
<if test="condition.createBy != null" >and  UPPER(g.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if>
<if test="condition.updateBy != null" >and  UPPER(g.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if>
<if test="condition.isDeleted != null" >and  UPPER(g.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if>
<if test="condition.version != null" >and  UPPER(g.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if>

</trim>
<include refid="inClause"/>
</sql>





<!-- 插入记录 -->
<insert id="add"  >
  insert into groupchatnoread (id,groupID,userID,noreadcount,createTime,updateTime,createBy,updateBy,isDeleted,version)
  values(#{id,jdbcType=VARCHAR},#{groupID},#{userID},#{noreadcount},#{createTime},#{updateTime},#{createBy},#{updateBy},#{isDeleted},#{version})
</insert>



<!-- 修改记录，只修改只不为空的字段 -->
<update id="update" >
	update groupchatnoread set
	<trim  suffixOverrides="," >
	<if test="groupID != null ">groupID=#{groupID},</if>
<if test="userID != null ">userID=#{userID},</if>
<if test="noreadcount != null ">noreadcount=#{noreadcount},</if>
<if test="createTime != null ">createTime=#{createTime},</if>
<if test="updateTime != null ">updateTime=#{updateTime},</if>
<if test="createBy != null ">createBy=#{createBy},</if>
<if test="updateBy != null ">updateBy=#{updateBy},</if>
<if test="isDeleted != null ">isDeleted=#{isDeleted},</if>
<if test="version != null ">version=#{version},</if>

	</trim> where id=#{id} and version = #{version}-1
</update>

<!-- 删除记录 -->
<delete id="del" >
	delete from groupchatnoread where id = #{id}
</delete>

<!-- 根据id查询  -->
<select id="get"   resultType="GroupChatNoread"  parameterType="String">
	select <include refid="columnList" /> 
	from groupchatnoread  g
	where  g.id = #{id}  and g.isDeleted = false
</select>

<!-- 列表总数-->
<select id="count" resultType="java.lang.Long" >
	select count(1) 
	from groupchatnoread  g
	<include refid="whereClause"/>
</select>

<!-- 查询page -->
<select id="findPage" resultType="GroupChatNoread" >
	select 
	<include refid="columnList"/>
	from groupchatnoread g
	<include refid="whereClause"/>
	<if test="orderByClause!=null">${orderByClause}</if>
</select>

<!-- 模糊查询page -->
<select id="findLikePage" resultType="GroupChatNoread" >
	select 
	<include refid="columnList"/>
	from groupchatnoread g
	<include refid="whereLikeClause"/>
	<if test="orderByClause!=null">${orderByClause}</if>
</select>

<!-- 查询列表list -->
<select id="findList" resultType="GroupChatNoread" >
	select
	<include refid="columnList"/>
	from groupchatnoread g
	<include refid="whereClause"/>
	<if test="orderByClause!=null">${orderByClause}</if>
</select>

<!--模糊查询list-->
<select id="findLikeList" resultType="GroupChatNoread" >
	select
	<include refid="columnList"/>
	from groupchatnoread g
	<include refid="whereLikeClause"/>
	<if test="orderByClause!=null">${orderByClause}</if>
</select>

<!-- 查询符合条件的数据的id集合 -->
<select id="findIds" resultType="String">
	select g.${idsColumn}
	from groupchatnoread g
    <include refid="whereClause"/>
    <if test="orderByClause!=null">${orderByClause}</if>
</select>

<!-- 查询符合模糊条件的数据的id集合 -->
<select id="findLikeIds" resultType="String">
	select g.${idsColumn}
	from groupchatnoread g
    <include refid="whereLikeClause"/>
    <if test="orderByClause!=null">${orderByClause}</if>
</select>

<!-- 获取一个对象通过非id -->
<select id="one" resultType="GroupChatNoread" >
     select
    <include refid="columnList"/>
     from groupchatnoread g
    <include refid="whereClause"/>
    <if test="orderByClause!=null">${orderByClause}</if>
    limit 0,1
</select>

<!--如果你想返回一个HashMap 就实现这个select标签-->
<select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object">
</select>

	<select id="getNoReadCount" resultType="GroupChatNoread" parameterType="QueryParam">
		SELECT * FROM groupchatnoread WHERE groupID = #{condition.groupID} and userID = #{condition.userID}
	</select>

	<update id="updateMsgRead" parameterType="java.util.Map">
		update groupchatnoread set
		noreadcount=0
		where groupID = #{groupID} and userID = #{userID}
	</update>
</mapper>
