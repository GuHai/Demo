<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.AttentionDao" ><!-- 查询字段 --><sql id="columnList" >	a.id,a.workID,	 a.userID, a.concernID, a.createTime, a.updateTime, a.version, a.isDeleted, a.createBy, a.updateBy</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  a.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and a.id = #{condition.id}	</if>	<if test="condition.userID != null" >and  a.userID = #{condition.userID}</if><if test="condition.concernID != null" >and  a.concernID = #{condition.concernID}</if><if test="condition.createTime != null" >and  a.createTime = #{condition.createTime}</if><if test="condition.updateTime != null" >and  a.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  a.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  a.isDeleted = #{condition.isDeleted}</if><if test="condition.createBy != null" >and  a.createBy = #{condition.createBy}</if><if test="condition.updateBy != null" >and  a.updateBy = #{condition.updateBy}</if>	<if test="condition.workID != null" >and  a.workID = #{condition.workID}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and a.id = #{condition.id}	</if>													 			<if test="condition.userID != null" >and  UPPER(a.userID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.userID}),'%'))</if><if test="condition.concernID != null" >and  UPPER(a.concernID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.concernID}),'%'))</if><if test="condition.createTime != null" >and  UPPER(a.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(a.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(a.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(a.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if><if test="condition.createBy != null" >and  UPPER(a.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(a.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into attention (id,workID,userID,concernID,createTime,updateTime,version,isDeleted,createBy,updateBy)  values(#{id,jdbcType=VARCHAR},#{workID},#{userID},#{concernID},#{createTime},#{updateTime},#{version},#{isDeleted},#{createBy},#{updateBy})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update attention set	<trim  suffixOverrides="," >	<if test="userID != null ">userID=#{userID},</if><if test="concernID != null ">concernID=#{concernID},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="updateBy != null ">updateBy=#{updateBy},</if><if test="workID != null ">workID=#{workID},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from attention where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="Attention"  parameterType="String">	select <include refid="columnList" /> 	from attention  a	where  a.id = #{id}  and a.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select ifnull(count(1),0)	from attention  a	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="Attention" >	select 	<include refid="columnList"/>	from attention a	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="Attention" >	select 	<include refid="columnList"/>	from attention a	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="Attention" >	select	<include refid="columnList"/>	from attention a	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="Attention" >	select	<include refid="columnList"/>	from attention a	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select a.${idsColumn}	from attention a    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select a.${idsColumn}	from attention a    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="Attention" >     select    <include refid="columnList"/>     from attention a    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select>	<select id="getFocusList" resultType="java.util.Map" parameterType="QueryParam">		SELECT			*		FROM			(SELECT				a.userID AS 'userID',				s.nickName AS 'nickName',				s.`infoHeadImg` AS 'infoHeadImg',				IFNULL(CONCAT('/',attachment.`path`,'/',attachment.`datestr`,'/',attachment.`name`),weixin.`headimgurl`) as 'headimgurl',				(SELECT					COUNT(1)				FROM					POSITION				WHERE position.`userID` = a.userID					AND position.`open` = 2					AND position.isDeleted = FALSE					OR position.id IN					(SELECT						forward.positionId					FROM						forward forward						LEFT JOIN POSITION p							ON p.id = forward.`positionId`					WHERE forward.userId = a.userID						AND p.open = 2						AND p.isDeleted = FALSE)) AS 'positionSize',				personalauthen.`realName` AS 'realName',				enterpriseauthen.`adminName` AS 'adminName',				information.`workNumber` as 'workNumber'			FROM				`attention` a				LEFT JOIN `shiro_user` s					ON s.id = a.userID				LEFT JOIN weixin weixin					ON a.userID = weixin.userID				LEFT JOIN personalauthen personalauthen					ON personalauthen.`userID` = a.userID				LEFT JOIN enterpriseauthen enterpriseauthen					ON enterpriseauthen.`userID` = a.userID				LEFT JOIN attachment attachment					ON s.infoHeadImg = attachment.id				LEFT JOIN information information					ON s.id = information.userID			WHERE a.concernID = #{condition.concernID}				AND a.`isDeleted` = 0			UNION			ALL			SELECT				a.`workID` AS 'userID',				worknumber.`name` AS 'nickName',				null AS 'infoHeadImg',				CONCAT_WS(					'/',					'/upload',					attachment.`path`,					attachment.`datestr`,					attachment.`name`				) AS 'headimgurl',				(SELECT					COUNT(0)				FROM					POSITION				WHERE position.`ID` IN					(SELECT						workposition.`positionID`					FROM						workposition					WHERE workposition.`status` = 2						AND workposition.`workID` = a.`workID`)) AS 'positionSize',				null AS 'realName',				null AS 'adminName',				CONCAT_WS('',worknumber.`name`,'的工作号') as 'workNumber'			FROM				`attention` a				LEFT JOIN worknumber worknumber					ON worknumber.`id` = a.`workID`				LEFT JOIN attachment attachment					ON attachment.`id` = workNumber.`headImage`			WHERE a.concernID = #{condition.concernID}				AND a.`isDeleted` = 0) temp		WHERE temp.userID IS NOT NULL	</select>	<select id="getFansList" resultType="java.util.Map" parameterType="QueryParam">		SELECT			a.concernID,			s.nickName,			s.`infoHeadImg`,			IFNULL(CONCAT('/',attachment.`path`,'/',attachment.`datestr`,'/',attachment.`name`),weixin.`headimgurl`) as 'headimgurl',weixin.`headimgurl` as 'weiXinHead',			(SELECT				COUNT(1)			FROM				POSITION			WHERE position.`userID` = a.concernID				AND position.`open` = 2 AND position.isDeleted = FALSE				OR position.id IN				(SELECT					forward.positionId				FROM					forward forward					LEFT JOIN POSITION p						ON p.id = forward.`positionId`				WHERE forward.userId = a.concernID AND p.open = 2 AND p.isDeleted = FALSE )			) positionSize,		personalauthen.`realName`,		enterpriseauthen.`adminName`,		information.workNumber		FROM		`attention` a		LEFT JOIN `shiro_user` s		ON s.id = a.concernID		left join weixin weixin		on a.concernID = weixin.userID		LEFT JOIN personalauthen personalauthen			ON personalauthen.`userID` = a.concernID		LEFT JOIN enterpriseauthen enterpriseauthen			ON enterpriseauthen.`userID` = a.concernID		LEFT JOIN attachment attachment			ON s.infoHeadImg = attachment.id		LEFT JOIN information information			ON s.id = information.userID		WHERE		<if test="condition.userID!=null">			a.userID = #{condition.userID}		</if>		<if test="condition.userID==null">			a.workID = #{condition.workID}		</if>		AND a.`isDeleted` = 0		ORDER BY s.nickName	</select></mapper>