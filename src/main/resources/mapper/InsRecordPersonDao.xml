<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.InsRecordPersonDao" ><!-- 查询字段 --><sql id="columnList" >	i.id,	 i.recordID, i.professionID, i.personID, i.createBy, i.createTime, i.updateBy, i.updateTime, i.version, i.isDeleted</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  i.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and i.id = #{condition.id}	</if>	<if test="condition.recordID != null" >and  i.recordID = #{condition.recordID}</if><if test="condition.professionID != null" >and  i.professionID = #{condition.professionID}</if><if test="condition.personID != null" >and  i.personID = #{condition.personID}</if><if test="condition.createBy != null" >and  i.createBy = #{condition.createBy}</if><if test="condition.createTime != null" >and  i.createTime = #{condition.createTime}</if><if test="condition.updateBy != null" >and  i.updateBy = #{condition.updateBy}</if><if test="condition.updateTime != null" >and  i.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  i.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  i.isDeleted = #{condition.isDeleted}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and i.id = #{condition.id}	</if>													 			<if test="condition.recordID != null" >and  UPPER(i.recordID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.recordID}),'%'))</if><if test="condition.professionID != null" >and  UPPER(i.professionID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.professionID}),'%'))</if><if test="condition.personID != null" >and  UPPER(i.personID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.personID}),'%'))</if><if test="condition.createBy != null" >and  UPPER(i.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.createTime != null" >and  UPPER(i.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(i.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(i.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(i.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(i.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into insrecordperson (id,recordID,professionID,personID,createBy,createTime,updateBy,updateTime,version,isDeleted)  values(#{id,jdbcType=VARCHAR},#{recordID},#{professionID},#{personID},#{createBy},#{createTime},#{updateBy},#{updateTime},#{version},#{isDeleted})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update insrecordperson set	<trim  suffixOverrides="," >	<if test="recordID != null ">recordID=#{recordID},</if><if test="professionID != null ">professionID=#{professionID},</if><if test="personID != null ">personID=#{personID},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateBy != null ">updateBy=#{updateBy},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from insrecordperson where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="InsRecordPerson"  parameterType="String">	select <include refid="columnList" /> 	from insrecordperson  i	where  i.id = #{id}  and i.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from insrecordperson  i	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="InsRecordPerson" >	select 	<include refid="columnList"/>	from insrecordperson i	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="InsRecordPerson" >	select 	<include refid="columnList"/>	from insrecordperson i	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="InsRecordPerson" >	select	<include refid="columnList"/>	from insrecordperson i	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="InsRecordPerson" >	select	<include refid="columnList"/>	from insrecordperson i	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select i.${idsColumn}	from insrecordperson i    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select i.${idsColumn}	from insrecordperson i    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="InsRecordPerson" >     select    <include refid="columnList"/>     from insrecordperson i    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select>	<!--级联查询-->	<sql id="getProfessionTypeDetailList">		i.id as 'id',		i.version as 'version',i.recordID as 'recordID',i.professionID as 'professionID',i.personID as 'personID',		insProfessionType.id as 'insProfessionType.id',		insProfessionType.version as 'insProfessionType.version',insProfessionType.code as 'insProfessionType.code',insProfessionType.name as 'insProfessionType.name',insProfessionType.risk as 'insProfessionType.risk',insProfessionType.professionID as 'insProfessionType.professionID'	</sql>	<!--getProfessionTypeInsProfessionType映射-->	<resultMap id="getProfessionTypeInsProfessionTypeMap" type="InsProfessionType">		<id property="id" column="insProfessionType.id" />		<result property="version" column="insProfessionType.version" />		<result property="code" column="insProfessionType.code" />		<result property="name" column="insProfessionType.name" />		<result property="risk" column="insProfessionType.risk" />		<result property="professionID" column="insProfessionType.professionID" />	</resultMap>	<!--getProfessionTypeInsRecordPerson映射-->	<resultMap id="getProfessionTypeInsRecordPersonMap" type="InsRecordPerson">		<id property="id" column="id" />		<result property="version" column="version" />		<result property="recordID" column="recordID" />		<result property="professionID" column="professionID" />		<result property="personID" column="personID" />		<association property="insProfessionType"  javaType="InsProfessionType" resultMap="getProfessionTypeInsProfessionTypeMap"/>	</resultMap>	<!--对象的多级映射 mapList mapPage mapOne-->	<select id="getProfessionTypeMap" resultMap="getProfessionTypeInsRecordPersonMap" >		select		<include refid="getProfessionTypeDetailList"/>		from  insrecordperson i		left join insprofessiontype insProfessionType on i.professionID = insProfessionType.id		<include refid="whereClause"/>		<if test="orderByClause!=null">${orderByClause}</if>		limit 0,1	</select>	<!--级联查询-->	<sql id="getInsDetailDetailList">		i.id as 'id',		i.version as 'version',i.recordID as 'recordID',i.professionID as 'professionID',i.personID as 'personID',		insProfessionType.id as 'insProfessionType.id',		insProfessionType.version as 'insProfessionType.version',insProfessionType.code as 'insProfessionType.code',insProfessionType.name as 'insProfessionType.name',insProfessionType.risk as 'insProfessionType.risk',insProfessionType.professionID as 'insProfessionType.professionID',		insPerson.id as 'insPerson.id',		insPerson.version as 'insPerson.version',insPerson.name as 'insPerson.name',insPerson.sex as 'insPerson.sex',insPerson.cardID as 'insPerson.cardID'	</sql>	<!--getInsDetailInsProfessionType映射-->	<resultMap id="getInsDetailInsProfessionTypeMap" type="InsProfessionType">		<id property="id" column="insProfessionType.id" />		<result property="version" column="insProfessionType.version" />		<result property="code" column="insProfessionType.code" />		<result property="name" column="insProfessionType.name" />		<result property="risk" column="insProfessionType.risk" />		<result property="professionID" column="insProfessionType.professionID" />	</resultMap>	<!--getInsDetailInsPerson映射-->	<resultMap id="getInsDetailInsPersonMap" type="InsPerson">		<id property="id" column="insPerson.id" />		<result property="version" column="insPerson.version" />		<result property="name" column="insPerson.name" />		<result property="sex" column="insPerson.sex" />		<result property="cardID" column="insPerson.cardID" />	</resultMap>	<!--getInsDetailInsRecordPerson映射-->	<resultMap id="getInsDetailInsRecordPersonMap" type="InsRecordPerson">		<id property="id" column="id" />		<result property="version" column="version" />		<result property="recordID" column="recordID" />		<result property="professionID" column="professionID" />		<result property="personID" column="personID" />		<association property="insProfessionType"  javaType="InsProfessionType" resultMap="getInsDetailInsProfessionTypeMap"/>		<association property="insPerson"  javaType="InsPerson" resultMap="getInsDetailInsPersonMap"/>	</resultMap>	<!--对象的多级映射 mapList mapPage mapOne-->	<select id="getInsDetailMap" resultMap="getInsDetailInsRecordPersonMap" >		select		<include refid="getInsDetailDetailList"/>		from  insrecordperson i		left join insprofessiontype insProfessionType on i.professionID = insProfessionType.id		left join insperson insPerson on i.personID = insPerson.id		<include refid="whereClause"/>		<if test="orderByClause!=null">${orderByClause}</if>	</select>		<delete id="deleteForInsert" parameterType="java.lang.String">		delete from insrecordperson where recordID = #{recordID}	</delete></mapper>