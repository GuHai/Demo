<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.BeenrecruitedDao">    <!-- 查询字段 -->    <sql id="columnList">	b.id,b.reason,	 b.dismiss,b.workDate,b.positionID, b.resumeID, b.state, b.signUp, b.interview, b.train, b.admission, b.work, b.settlement, b.endWork, b.createTime, b.updateTime, b.version, b.isDeleted, b.createBy, b.updateBy,b.payBond</sql>    <!--通过id集合in查询-->    <sql id="inClause">        <if test="column!=null">            <if test="ids==null">                and 1=0            </if>            <if test="ids!=null">                <if test="ids.size>0">                    and b.${column} in                    <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                        #{items}                    </foreach>                </if>                <if test="ids.size==0">                    and 1=0                </if>            </if>        </if>    </sql>    <!-- 查询条件 -->    <sql id="whereClause">        where 1=1        <trim suffixOverrides=",">            <if test="condition.id != null">                and b.id = #{condition.id}            </if>            <if test="condition.positionID != null">and b.positionID = #{condition.positionID}</if>            <!--<if test="condition.dismiss != null" >and  b.dismiss = #{condition.dismiss}</if>-->            <if test="condition.dismiss == null">and b.dismiss is null</if>            <if test="condition.dismiss == 'all' "></if>            <if test="condition.resumeID != null">and b.resumeID = #{condition.resumeID}</if>            <if test="condition.state != null">and b.state = #{condition.state}</if>            <if test="condition.signUp != null">and b.signUp = #{condition.signUp}</if>            <if test="condition.interview != null">and b.interview = #{condition.interview}</if>            <if test="condition.train != null">and b.train = #{condition.train}</if>            <if test="condition.admission != null">and b.admission = #{condition.admission}</if>            <if test="condition.work != null">and b.work = #{condition.work}</if>            <if test="condition.settlement != null">and b.settlement = #{condition.settlement}</if>            <if test="condition.endWork != null">and b.endWork = #{condition.endWork}</if>            <if test="condition.createTime != null">and b.createTime = #{condition.createTime}</if>            <if test="condition.updateTime != null">and b.updateTime = #{condition.updateTime}</if>            <if test="condition.version != null">and b.version = #{condition.version}</if>            <if test="condition.isDeleted != null">and b.isDeleted = #{condition.isDeleted}</if>            <if test="condition.createBy != null">and b.createBy = #{condition.createBy}</if>            <if test="condition.updateBy != null">and b.updateBy = #{condition.updateBy}</if>            <if test="condition.workDate != null">and b.workDate = #{condition.workDate}</if>        </trim>        <include refid="inClause"/>    </sql>    <!-- 模糊查询条件 -->    <sql id="whereLikeClause">        where 1=1        <trim suffixOverrides=",">            <if test="condition.id != null">                and b.id = #{condition.id}            </if>            <if test="condition.positionID != null">and UPPER(b.positionID) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.positionID}),'%'))            </if>            <if test="condition.dismiss != null">and UPPER(b.dismiss) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.dismiss}),'%'))            </if>            <if test="condition.resumeID != null">and UPPER(b.resumeID) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.resumeID}),'%'))            </if>            <if test="condition.state != null">and UPPER(b.state) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.state}),'%'))            </if>            <if test="condition.signUp != null">and UPPER(b.signUp) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.signUp}),'%'))            </if>            <if test="condition.interview != null">and UPPER(b.interview) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.interview}),'%'))            </if>            <if test="condition.train != null">and UPPER(b.train) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.train}),'%'))            </if>            <if test="condition.admission != null">and UPPER(b.admission) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.admission}),'%'))            </if>            <if test="condition.work != null">and UPPER(b.work) LIKE UPPER(CONCAT(CONCAT('%',#{condition.work}),'%'))            </if>            <if test="condition.settlement != null">and UPPER(b.settlement) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.settlement}),'%'))            </if>            <if test="condition.endWork != null">and UPPER(b.endWork) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.endWork}),'%'))            </if>            <if test="condition.createTime != null">and UPPER(b.createTime) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))            </if>            <if test="condition.updateTime != null">and UPPER(b.updateTime) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))            </if>            <if test="condition.version != null">and UPPER(b.version) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))            </if>            <if test="condition.isDeleted != null">and UPPER(b.isDeleted) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))            </if>            <if test="condition.createBy != null">and UPPER(b.createBy) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))            </if>            <if test="condition.updateBy != null">and UPPER(b.updateBy) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))            </if>        </trim>        <include refid="inClause"/>    </sql>    <!-- 插入记录 -->    <insert id="add">  insert into beenrecruited (id,payBond,dismiss,workDate,positionID,resumeID,state,signUp,interview,train,admission,work,settlement,endWork,createTime,updateTime,version,isDeleted,createBy,updateBy)  values(#{id,jdbcType=VARCHAR},#{payBond},#{dismiss},#{workDate},#{positionID},#{resumeID},#{state},#{signUp},#{interview},#{train},#{admission},#{work},#{settlement},#{endWork},#{createTime},#{updateTime},#{version},#{isDeleted},#{createBy},#{updateBy})</insert>    <!-- 修改记录，只修改只不为空的字段 -->    <update id="update">        update beenrecruited set        <trim suffixOverrides=",">            <if test="positionID != null ">positionID=#{positionID},</if>            <if test="dismiss != null ">dismiss=#{dismiss},</if>            <if test="resumeID != null ">resumeID=#{resumeID},</if>            <if test="state != null ">state=#{state},</if>            <if test="signUp != null ">signUp=#{signUp},</if>            <if test="interview != null ">interview=#{interview},</if>            <if test="train != null ">train=#{train},</if>            <if test="admission != null ">admission=#{admission},</if>            <if test="work != null ">work=#{work},</if>            <if test="settlement != null ">settlement=#{settlement},</if>            <if test="endWork != null ">endWork=#{endWork},</if>            <if test="createTime != null ">createTime=#{createTime},</if>            <if test="updateTime != null ">updateTime=#{updateTime},</if>            <if test="version != null ">version=#{version},</if>            <if test="isDeleted != null ">isDeleted=#{isDeleted},</if>            <if test="createBy != null ">createBy=#{createBy},</if>            <if test="updateBy != null ">updateBy=#{updateBy},</if>            <if test="workDate != null ">workDate=#{workDate},</if>            <if test="reason != null ">reason=#{reason},</if>            <if test="payBond != null ">payBond=#{payBond},</if>            <if test="initDismiss != null ">dismiss=null,</if>        </trim>        where id=#{id} and version = #{version}-1    </update>    <!-- 删除记录 -->    <delete id="del">	delete from beenrecruited where id = #{id}</delete>    <!-- 根据id查询  -->    <select id="get" resultType="Beenrecruited" parameterType="String">        select        <include refid="columnList"/>        from beenrecruited b        where b.id = #{id} and b.isDeleted = false    </select>    <!-- 列表总数-->    <select id="count" resultType="java.lang.Long">        select count(1)        from beenrecruited b        <include refid="whereClause"/>    </select>    <!-- 查询page -->    <select id="findPage" resultMap="BeenrecruitedMap">        select        <include refid="detailList"/>        from beenrecruited b        left join position position on b.positionID = position.id        left join localtioninfo workPlace on position.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        <include refid="whereClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!-- 模糊查询page -->    <select id="findLikePage" resultType="Beenrecruited">        select        <include refid="columnList"/>        from beenrecruited b        <include refid="whereLikeClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!-- 查询列表list -->    <select id="findList" resultType="Beenrecruited">        select        <include refid="columnList"/>        from beenrecruited b        <include refid="whereClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!--模糊查询list-->    <select id="findLikeList" resultType="Beenrecruited">        select        <include refid="columnList"/>        from beenrecruited b        <include refid="whereLikeClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!-- 查询符合条件的数据的id集合 -->    <select id="findIds" resultType="String">        select b.${idsColumn}        from beenrecruited b        <include refid="whereClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!-- 查询符合模糊条件的数据的id集合 -->    <select id="findLikeIds" resultType="String">        select b.${idsColumn}        from beenrecruited b        <include refid="whereLikeClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!-- 获取一个对象通过非id -->    <select id="one" resultType="Beenrecruited">        select        <include refid="columnList"/>        from beenrecruited b        <include refid="whereClause"/>        <if test="orderByClause!=null">${orderByClause}</if>        limit 0,1    </select>    <!--如果你想返回一个HashMap 就实现这个select标签-->    <select id="queryHashMap" resultType="java.util.HashMap" parameterType="Object">    </select>    <!--级联查询-->    <sql id="detailList">        b.id as 'id',b.version as 'version', b.workDate as 'workDate',b.positionID as 'positionID',b.resumeID as 'resumeID',b.state as 'state',b.signUp as 'signUp',b.interview as 'interview',b.train as 'train',b.admission as 'admission',b.work as 'work',b.settlement as 'settlement',b.endWork as 'endWork', b.payBond as 'payBond',b.dismiss as 'dismiss',        position.id as 'position.id',position.personNumDay as 'position.personNumDay',position.title as 'position.title',position.salaryType as 'position.salaryType',position.recruitStartTime as 'position.recruitStartTime',position.recruitEndTime as 'position.recruitEndTime',position.salary as 'position.salary',position.dailySalary as 'position.dailySalary',position.liquidatedDamages as 'position.liquidatedDamages',position.recruitsSum as 'position.recruitsSum',position.sexRequirements as 'position.sexRequirements',position.workPalce as 'position.workPalce',position.workDate as 'position.workDate',position.aggregate as 'position.aggregate',position.setDate as 'position.setDate',position.contacts as 'position.contacts',position.contactNumber as 'position.contactNumber',position.settlement as 'position.settlement',position.matters as 'position.matters',position.jobRequirements as 'position.jobRequirements',position.jobContent as 'position.jobContent',position.includeBoard as 'position.includeBoard',position.controlSleep as 'position.controlSleep',position.interview as 'position.interview',position.baseTask as 'position.baseTask',position.commission as 'position.commission',position.train as 'position.train',position.beenRecruitedSum as 'position.beenRecruitedSum',position.workTypeID as 'position.workTypeID',position.userID as 'position.userID',position.open as 'position.open',position.type as 'position.type',position.startTime as 'position.startTime',position.endTime as 'position.endTime',        workPlace.id as 'position.workPlace.id',workPlace.cityID as 'position.workPlace.cityID',workPlace.detailedAddress as 'position.workPlace.detailedAddress',workPlace.longitude as 'position.workPlace.longitude',workPlace.latitude as 'position.workPlace.latitude',        city.id as 'position.workPlace.city.id',city.pinyin as 'position.workPlace.city.pinyin',city.cityName as 'position.workPlace.city.cityName',city.zipCode as 'position.workPlace.city.zipCode',city.openState as 'position.workPlace.city.openState',city.cityType as 'position.workPlace.city.cityType',city.isHot as 'position.workPlace.city.isHot',        huntingtype.id as 'position.huntingtype.id',huntingtype.name as 'position.huntingtype.name',huntingtype.HTFatCode as 'position.huntingtype.HTFatCode',huntingtype.state as 'position.huntingtype.state',huntingtype.codeGrade as 'position.huntingtype.codeGrade'    </sql>    <!--City映射-->    <resultMap id="CityMap" type="City">        <id property="id" column="position.workPlace.city.id"/>        <result property="pinyin" column="position.workPlace.city.pinyin"/>        <result property="cityName" column="position.workPlace.city.cityName"/>        <result property="zipCode" column="position.workPlace.city.zipCode"/>        <result property="openState" column="position.workPlace.city.openState"/>        <result property="cityType" column="position.workPlace.city.cityType"/>        <result property="isHot" column="position.workPlace.city.isHot"/>    </resultMap>    <!--Localtioninfo映射-->    <resultMap id="LocaltioninfoMap" type="Localtioninfo">        <id property="id" column="position.workPlace.id"/>        <result property="cityID" column="position.workPlace.cityID"/>        <result property="detailedAddress" column="position.workPlace.detailedAddress"/>        <result property="longitude" column="position.workPlace.longitude"/>        <result property="latitude" column="position.workPlace.latitude"/>        <association property="city" javaType="City" resultMap="CityMap"/>    </resultMap>    <!--Huntingtype映射-->    <resultMap id="HuntingtypeMap" type="Huntingtype">        <id property="id" column="position.huntingtype.id"/>        <result property="name" column="position.huntingtype.name"/>        <result property="HTFatCode" column="position.huntingtype.HTFatCode"/>        <result property="state" column="position.huntingtype.state"/>        <result property="codeGrade" column="position.huntingtype.codeGrade"/>    </resultMap>    <!--Position映射-->    <resultMap id="PositionMap" type="Position">        <id property="id" column="position.id"/>        <result property="title" column="position.title"/>        <result property="salaryType" column="position.salaryType"/>        <result property="recruitStartTime" column="position.recruitStartTime"/>        <result property="recruitEndTime" column="position.recruitEndTime"/>        <result property="salary" column="position.salary"/>        <result property="dailySalary" column="position.dailySalary"/>        <result property="liquidatedDamages" column="position.liquidatedDamages"/>        <result property="recruitsSum" column="position.recruitsSum"/>        <result property="sexRequirements" column="position.sexRequirements"/>        <result property="workPalce" column="position.workPalce"/>        <result property="workDate" column="position.workDate"/>        <result property="aggregate" column="position.aggregate"/>        <result property="setDate" column="position.setDate"/>        <result property="contacts" column="position.contacts"/>        <result property="contactNumber" column="position.contactNumber"/>        <result property="settlement" column="position.settlement"/>        <result property="matters" column="position.matters"/>        <result property="jobRequirements" column="position.jobRequirements"/>        <result property="jobContent" column="position.jobContent"/>        <result property="includeBoard" column="position.includeBoard"/>        <result property="controlSleep" column="position.controlSleep"/>        <result property="interview" column="position.interview"/>        <result property="baseTask" column="position.baseTask"/>        <result property="commission" column="position.commission"/>        <result property="train" column="position.train"/>        <result property="beenRecruitedSum" column="position.beenRecruitedSum"/>        <result property="workTypeID" column="position.workTypeID"/>        <result property="userID" column="position.userID"/>        <result property="open" column="position.open"/>        <result property="type" column="position.type"/>        <result property="startTime" column="position.startTime"/>        <result property="endTime" column="position.endTime"/>        <result property="personNumDay" column="position.personNumDay"/>        <association property="workPlace" javaType="Localtioninfo" resultMap="LocaltioninfoMap"/>        <association property="huntingtype" javaType="Huntingtype" resultMap="HuntingtypeMap"/>    </resultMap>    <!--Beenrecruited映射-->    <resultMap id="BeenrecruitedMap" type="Beenrecruited">        <id property="id" column="id"/>        <result property="positionID" column="positionID"/>        <result property="resumeID" column="resumeID"/>        <result property="state" column="state"/>        <result property="signUp" column="signUp"/>        <result property="interview" column="interview"/>        <result property="train" column="train"/>        <result property="admission" column="admission"/>        <result property="work" column="work"/>        <result property="settlement" column="settlement"/>        <result property="endWork" column="endWork"/>        <result property="workDate" column="workDate"/>        <result property="payBond" column="payBond"/>        <result property="dismiss" column="dismiss"/>        <result property="signnum" column="signnum"/>        <result property="version" column="version"/>        <association property="position" javaType="Position" resultMap="PositionMap"/>    </resultMap>    <!--对象的多级映射-->    <select id="mapPage" resultMap="BeenrecruitedMap">        <!--select        <include refid="detailList"/>        ,COUNT( DISTINCT  signins.id) as 'signnum'        from beenrecruited b        <if test="condition.date=='today'">            INNER join todayJob tj on tj.beenID = b.id        </if>        left join position position on b.positionID = position.id        left join localtioninfo workPlace on position.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join huntingtype huntingtype on position.workTypeID = huntingtype.id        left join signin signins on signins.userID = b.createBy and signins.positionID =  b.positionID        <if test="condition.date=='today'">            AND  DATE(signins.signTime) = DATE(now())        </if>        <include refid="whereClause"/>        <if test="condition.signState!=null and condition.signState!=-1">            <if test="condition.signState==4 or condition.signState==1">                and signins.state = #{condition.signState}            </if>            <if test="condition.signState==2">                and signins.state  in (1,2,3)            </if>        </if>        <if test="orderByClause!=null">${orderByClause}</if>        group by  b.id        <if test="condition.signState==-1">            HAVING  signnum = 0        </if>        <if test="condition.signState==0">            HAVING  signnum > 0        </if>-->        select        <include refid="detailList"/>        ,COUNT( DISTINCT  signins.id) as 'signnum'        from beenrecruited b        left join position position on b.positionID = position.id        left join localtioninfo workPlace on position.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join huntingtype huntingtype on position.workTypeID = huntingtype.id        left join signin signins on signins.userID = b.createBy and signins.positionID =  b.positionID        <if test="condition.date=='today'">            AND  DATE(signins.signTime) = DATE(now())        </if>        where 1=1        and b.isDeleted = false        <if test="condition.state==1">            and b.state in (1,2)        </if>        <if test="condition.state!=1">            and b.state = #{condition.state}        </if>        <if test="condition.signState!=null">            <if test="condition.signState==4 or condition.signState==0">                and signins.state = #{condition.signState}            </if>            <if test="condition.signState==2">                and signins.state  in (1,2,3)            </if>        </if>        <if test="condition.date=='today'">            and b.id in (select tj.beenID from todayjob tj where tj.userID = #{condition.createBy} )        </if>        <if test="condition.signState==-1">            and now() &lt;   position.recruitEndTime        </if>        <if test="condition.date==null">            and b.createBy  = #{condition.createBy}        </if>        group by b.id        <if test="condition.signState==0">            HAVING  signnum > 0        </if>        order by b.updateTime desc    </select>    <!--对象的多级映射-->    <select id="mapOne" resultMap="BeenrecruitedMap">        select        <include refid="detailList"/>        from beenrecruited b        left join position position on b.positionID = position.id        left join localtioninfo workPlace on position.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join huntingtype huntingtype on position.workTypeID = huntingtype.id        <include refid="whereClause"/>        <if test="orderByClause!=null">${orderByClause}</if>        limit 0,1    </select>    <!--级联查询-->    <sql id="getPositionList">        p.id as 'id',p.personNumDay as 'personNumDay',        p.version as 'version',p.title as 'title',p.salaryType as 'salaryType',p.recruitStartTime as 'recruitStartTime',p.recruitEndTime as 'recruitEndTime',p.salary as 'salary',p.dailySalary as 'dailySalary',p.liquidatedDamages as 'liquidatedDamages',p.recruitsSum as 'recruitsSum',p.sexRequirements as 'sexRequirements',p.workPalce as 'workPalce',p.workDate as 'workDate',p.aggregate as 'aggregate',p.setDate as 'setDate',p.contacts as 'contacts',p.contactNumber as 'contactNumber',p.settlement as 'settlement',p.matters as 'matters',p.jobRequirements as 'jobRequirements',p.jobContent as 'jobContent',p.includeBoard as 'includeBoard',p.controlSleep as 'controlSleep',p.interview as 'interview',p.baseTask as 'baseTask',p.commission as 'commission',p.train as 'train',p.beenRecruitedSum as 'beenRecruitedSum',p.workTypeID as 'workTypeID',p.userID as 'userID',p.open as 'open',p.type as 'type',p.startTime as 'startTime',p.endTime as 'endTime',        workPlace.id as 'workPlace.id',        workPlace.version as 'workPlace.version',workPlace.cityID as 'workPlace.cityID',workPlace.detailedAddress as 'workPlace.detailedAddress',workPlace.longitude as 'workPlace.longitude',workPlace.latitude as 'workPlace.latitude',        city.id as 'workPlace.city.id',        city.version as 'workPlace.city.version',city.pinyin as 'workPlace.city.pinyin',city.cityName as 'workPlace.city.cityName',city.zipCode as 'workPlace.city.zipCode',city.openState as 'workPlace.city.openState',city.cityType as 'workPlace.city.cityType',city.isHot as 'workPlace.city.isHot',        huntingtype.id as 'huntingtype.id',        huntingtype.version as 'huntingtype.version',huntingtype.name as 'huntingtype.name',huntingtype.HTFatCode as 'huntingtype.HTFatCode',huntingtype.state as 'huntingtype.state',huntingtype.codeGrade as 'huntingtype.codeGrade',        beenrecruitedList.id as 'beenrecruitedList.id',beenrecruitedList.dismiss as 'beenrecruitedList.dismiss',        beenrecruitedList.version as 'beenrecruitedList.version',beenrecruitedList.positionID as 'beenrecruitedList.positionID',beenrecruitedList.resumeID as 'beenrecruitedList.resumeID',beenrecruitedList.state as 'beenrecruitedList.state',beenrecruitedList.signUp as 'beenrecruitedList.signUp',beenrecruitedList.interview as 'beenrecruitedList.interview',beenrecruitedList.train as 'beenrecruitedList.train',beenrecruitedList.admission as 'beenrecruitedList.admission',beenrecruitedList.work as 'beenrecruitedList.work',beenrecruitedList.settlement as 'beenrecruitedList.settlement',beenrecruitedList.endWork as 'beenrecruitedList.endWork',beenrecruitedList.workDate as 'beenrecruitedList.workDate',        resume.id as 'beenrecruitedList.resume.id',        resume.version as 'beenrecruitedList.resume.version',resume.resumeTitle as 'beenrecruitedList.resume.resumeTitle',resume.resumeHeadImg as 'beenrecruitedList.resume.resumeHeadImg',personalauthen.realName as 'beenrecruitedList.resume.resumeName',resume.IDCard as 'beenrecruitedList.resume.IDCard',resume.sex as 'beenrecruitedList.resume.sex',resume.marriage as 'beenrecruitedList.resume.marriage',resume.phoneNumber as 'beenrecruitedList.resume.phoneNumber',resume.email as 'beenrecruitedList.resume.email',resume.residence as 'beenrecruitedList.resume.residence',resume.evaluation as 'beenrecruitedList.resume.evaluation',resume.userID as 'beenrecruitedList.resume.userID',resume.isDefault as 'beenrecruitedList.resume.isDefault',resume.state as 'beenrecruitedList.resume.state',resume.height as 'beenrecruitedList.resume.height',resume.weight as 'beenrecruitedList.resume.weight',        educationalList.id as 'beenrecruitedList.resume.educationalList.id',        educationalList.version as 'beenrecruitedList.resume.educationalList.version',educationalList.schoolName as 'beenrecruitedList.resume.educationalList.schoolName',educationalList.major as 'beenrecruitedList.resume.educationalList.major',educationalList.education as 'beenrecruitedList.resume.educationalList.education',educationalList.educationLeavl as 'beenrecruitedList.resume.educationalList.educationLeavl',educationalList.timeSlot as 'beenrecruitedList.resume.educationalList.timeSlot',educationalList.timeEnd as 'beenrecruitedList.resume.educationalList.timeEnd',educationalList.association as 'beenrecruitedList.resume.educationalList.association',educationalList.resumeID as 'beenrecruitedList.resume.educationalList.resumeID',        user.id as 'beenrecruitedList.resume.user.id',        user.version as 'beenrecruitedList.resume.user.version',user.accountNo as 'beenrecruitedList.resume.user.accountNo',user.password as 'beenrecruitedList.resume.user.password',user.weChatNo as 'beenrecruitedList.resume.user.weChatNo',user.nickName as 'beenrecruitedList.resume.user.nickName',user.sex as 'beenrecruitedList.resume.user.sex',user.phoneNumber as 'beenrecruitedList.resume.user.phoneNumber',user.lastLoginTime as 'beenrecruitedList.resume.user.lastLoginTime',user.loginTime as 'beenrecruitedList.resume.user.loginTime',user.status as 'beenrecruitedList.resume.user.status',user.realName as 'beenrecruitedList.resume.user.realName',user.IDCard as 'beenrecruitedList.resume.user.IDCard',user.infoHeadImg as 'beenrecruitedList.resume.user.infoHeadImg',user.locked as 'beenrecruitedList.resume.user.locked',user.userSig as 'beenrecruitedList.resume.user.userSig',user.birthday as 'beenrecruitedList.resume.user.birthday',        attachment.id as 'beenrecruitedList.resume.user.attachment.id',        attachment.version as 'beenrecruitedList.resume.user.attachment.version',attachment.datestr as 'beenrecruitedList.resume.user.attachment.datestr',attachment.path as 'beenrecruitedList.resume.user.attachment.path',attachment.name as 'beenrecruitedList.resume.user.attachment.name',attachment.title as 'beenrecruitedList.resume.user.attachment.title',attachment.type as 'beenrecruitedList.resume.user.attachment.type',attachment.refID as 'beenrecruitedList.resume.user.attachment.refID',        weixin.id as 'user.weixin.id',        weixin.version as 'user.weixin.version',weixin.nickname as 'user.weixin.nickname',weixin.sex as 'user.weixin.sex',weixin.province as 'user.weixin.province',weixin.city as 'user.weixin.city',weixin.country as 'user.weixin.country',weixin.headimgurl as 'user.weixin.headimgurl',weixin.privilegeStr as 'user.weixin.privilegeStr',weixin.unionid as 'user.weixin.unionid',weixin.openid as 'user.weixin.openid',weixin.userID as 'user.weixin.userID',weixin.refreshToken as 'user.weixin.refreshToken',weixin.accessToken as 'user.weixin.accessToken',weixin.refreshTokenTime as 'user.weixin.refreshTokenTime',weixin.accessTokenTime as 'user.weixin.accessTokenTime',weixin.ticket as 'user.weixin.ticket',weixin.ticketTime as 'user.weixin.ticketTime'    </sql>    <!--City映射-->    <resultMap id="getPositionCityMap" type="City">        <id property="id" column="workPlace.city.id"/>        <result property="version" column="workPlace.city.version"/>        <result property="pinyin" column="workPlace.city.pinyin"/>        <result property="cityName" column="workPlace.city.cityName"/>        <result property="zipCode" column="workPlace.city.zipCode"/>        <result property="openState" column="workPlace.city.openState"/>        <result property="cityType" column="workPlace.city.cityType"/>        <result property="isHot" column="workPlace.city.isHot"/>    </resultMap>    <!--Localtioninfo映射-->    <resultMap id="getPositionLocaltioninfoMap" type="Localtioninfo">        <id property="id" column="workPlace.id"/>        <result property="version" column="workPlace.version"/>        <result property="cityID" column="workPlace.cityID"/>        <result property="detailedAddress" column="workPlace.detailedAddress"/>        <result property="longitude" column="workPlace.longitude"/>        <result property="latitude" column="workPlace.latitude"/>        <association property="city" javaType="City" resultMap="getPositionCityMap"/>    </resultMap>    <!--Huntingtype映射-->    <resultMap id="getPositionHuntingtypeMap" type="Huntingtype">        <id property="id" column="huntingtype.id"/>        <result property="version" column="huntingtype.version"/>        <result property="name" column="huntingtype.name"/>        <result property="HTFatCode" column="huntingtype.HTFatCode"/>        <result property="state" column="huntingtype.state"/>        <result property="codeGrade" column="huntingtype.codeGrade"/>    </resultMap>    <!--Educational映射-->    <resultMap id="getPositionEducationalMap" type="Educational">        <id property="id" column="beenrecruitedList.resume.educationalList.id"/>        <result property="version" column="beenrecruitedList.resume.educationalList.version"/>        <result property="schoolName" column="beenrecruitedList.resume.educationalList.schoolName"/>        <result property="major" column="beenrecruitedList.resume.educationalList.major"/>        <result property="education" column="beenrecruitedList.resume.educationalList.education"/>        <result property="educationLeavl" column="beenrecruitedList.resume.educationalList.educationLeavl"/>        <result property="timeSlot" column="beenrecruitedList.resume.educationalList.timeSlot"/>        <result property="timeEnd" column="beenrecruitedList.resume.educationalList.timeEnd"/>        <result property="association" column="beenrecruitedList.resume.educationalList.association"/>        <result property="resumeID" column="beenrecruitedList.resume.educationalList.resumeID"/>    </resultMap>    <!--Attachment映射-->    <resultMap id="getPositionAttachmentMap" type="Attachment">        <id property="id" column="beenrecruitedList.resume.user.attachment.id"/>        <result property="version" column="beenrecruitedList.resume.user.attachment.version"/>        <result property="datestr" column="beenrecruitedList.resume.user.attachment.datestr"/>        <result property="path" column="beenrecruitedList.resume.user.attachment.path"/>        <result property="name" column="beenrecruitedList.resume.user.attachment.name"/>        <result property="title" column="beenrecruitedList.resume.user.attachment.title"/>        <result property="type" column="beenrecruitedList.resume.user.attachment.type"/>        <result property="refID" column="beenrecruitedList.resume.user.attachment.refID"/>    </resultMap>    <!--User映射-->    <resultMap id="getPositionUserMap" type="User">        <id property="id" column="beenrecruitedList.resume.user.id"/>        <result property="version" column="beenrecruitedList.resume.user.version"/>        <result property="accountNo" column="beenrecruitedList.resume.user.accountNo"/>        <result property="password" column="beenrecruitedList.resume.user.password"/>        <result property="weChatNo" column="beenrecruitedList.resume.user.weChatNo"/>        <result property="nickName" column="beenrecruitedList.resume.user.nickName"/>        <result property="sex" column="beenrecruitedList.resume.user.sex"/>        <result property="phoneNumber" column="beenrecruitedList.resume.user.phoneNumber"/>        <result property="lastLoginTime" column="beenrecruitedList.resume.user.lastLoginTime"/>        <result property="loginTime" column="beenrecruitedList.resume.user.loginTime"/>        <result property="status" column="beenrecruitedList.resume.user.status"/>        <result property="realName" column="beenrecruitedList.resume.user.realName"/>        <result property="IDCard" column="beenrecruitedList.resume.user.IDCard"/>        <result property="infoHeadImg" column="beenrecruitedList.resume.user.infoHeadImg"/>        <result property="locked" column="beenrecruitedList.resume.user.locked"/>        <result property="userSig" column="beenrecruitedList.resume.user.userSig"/>        <result property="birthday" column="beenrecruitedList.resume.user.birthday"/>        <association property="weixin" javaType="Weixin" resultMap="WeixinMap"/>        <association property="attachment" javaType="Attachment" resultMap="getPositionAttachmentMap"/>    </resultMap>    <!--Resume映射-->    <resultMap id="getPositionResumeMap" type="Resume">        <id property="id" column="beenrecruitedList.resume.id"/>        <result property="version" column="beenrecruitedList.resume.version"/>        <result property="resumeTitle" column="beenrecruitedList.resume.resumeTitle"/>        <result property="resumeHeadImg" column="beenrecruitedList.resume.resumeHeadImg"/>        <result property="resumeName" column="beenrecruitedList.resume.resumeName"/>        <result property="IDCard" column="beenrecruitedList.resume.IDCard"/>        <result property="sex" column="beenrecruitedList.resume.sex"/>        <result property="marriage" column="beenrecruitedList.resume.marriage"/>        <result property="phoneNumber" column="beenrecruitedList.resume.phoneNumber"/>        <result property="email" column="beenrecruitedList.resume.email"/>        <result property="residence" column="beenrecruitedList.resume.residence"/>        <result property="evaluation" column="beenrecruitedList.resume.evaluation"/>        <result property="userID" column="beenrecruitedList.resume.userID"/>        <result property="isDefault" column="beenrecruitedList.resume.isDefault"/>        <result property="state" column="beenrecruitedList.resume.state"/>        <result property="height" column="beenrecruitedList.resume.height"/>        <result property="weight" column="beenrecruitedList.resume.weight"/>        <association property="user" javaType="User" resultMap="getPositionUserMap"/>        <collection property="educationalList" resultMap="getPositionEducationalMap"/>    </resultMap>    <!--Beenrecruited映射-->    <resultMap id="getPositionBeenrecruitedMap" type="Beenrecruited">        <id property="id" column="beenrecruitedList.id"/>        <result property="version" column="beenrecruitedList.version"/>        <result property="positionID" column="beenrecruitedList.positionID"/>        <result property="resumeID" column="beenrecruitedList.resumeID"/>        <result property="state" column="beenrecruitedList.state"/>        <result property="signUp" column="beenrecruitedList.signUp"/>        <result property="interview" column="beenrecruitedList.interview"/>        <result property="train" column="beenrecruitedList.train"/>        <result property="admission" column="beenrecruitedList.admission"/>        <result property="work" column="beenrecruitedList.work"/>        <result property="settlement" column="beenrecruitedList.settlement"/>        <result property="endWork" column="beenrecruitedList.endWork"/>        <result property="workDate" column="beenrecruitedList.workDate"/>        <result property="vip" column="beenrecruitedList.vip"/>        <result property="dismiss" column="beenrecruitedList.dismiss" />        <association property="resume" javaType="Resume" resultMap="getPositionResumeMap"/>    </resultMap>    <!--Position映射-->    <resultMap id="getPositionMap" type="Position">        <id property="id" column="id"/>        <result property="version" column="version"/>        <result property="title" column="title"/>        <result property="salaryType" column="salaryType"/>        <result property="recruitStartTime" column="recruitStartTime"/>        <result property="recruitEndTime" column="recruitEndTime"/>        <result property="salary" column="salary"/>        <result property="dailySalary" column="dailySalary"/>        <result property="liquidatedDamages" column="liquidatedDamages"/>        <result property="recruitsSum" column="recruitsSum"/>        <result property="sexRequirements" column="sexRequirements"/>        <result property="workPalce" column="workPalce"/>        <result property="workDate" column="workDate"/>        <result property="aggregate" column="aggregate"/>        <result property="setDate" column="setDate"/>        <result property="contacts" column="contacts"/>        <result property="contactNumber" column="contactNumber"/>        <result property="settlement" column="settlement"/>        <result property="matters" column="matters"/>        <result property="jobRequirements" column="jobRequirements"/>        <result property="jobContent" column="jobContent"/>        <result property="includeBoard" column="includeBoard"/>        <result property="controlSleep" column="controlSleep"/>        <result property="interview" column="interview"/>        <result property="baseTask" column="baseTask"/>        <result property="commission" column="commission"/>        <result property="train" column="train"/>        <result property="beenRecruitedSum" column="beenRecruitedSum"/>        <result property="workTypeID" column="workTypeID"/>        <result property="userID" column="userID"/>        <result property="open" column="open"/>        <result property="type" column="type"/>        <result property="startTime" column="startTime"/>        <result property="endTime" column="endTime"/>        <result property="personNumDay" column="personNumDay" />        <association property="workPlace" javaType="Localtioninfo" resultMap="getPositionLocaltioninfoMap"/>        <association property="huntingtype" javaType="Huntingtype" resultMap="getPositionHuntingtypeMap"/>        <collection property="beenrecruitedList" resultMap="getPositionBeenrecruitedMap"/>    </resultMap>    <!--Weixin映射-->    <resultMap id="WeixinMap" type="Weixin">        <id property="id" column="user.weixin.id"/>        <result property="version" column="user.weixin.version"/>        <result property="nickname" column="user.weixin.nickname"/>        <result property="sex" column="user.weixin.sex"/>        <result property="province" column="user.weixin.province"/>        <result property="city" column="user.weixin.city"/>        <result property="country" column="user.weixin.country"/>        <result property="headimgurl" column="user.weixin.headimgurl"/>        <result property="privilegeStr" column="user.weixin.privilegeStr"/>        <result property="unionid" column="user.weixin.unionid"/>        <result property="openid" column="user.weixin.openid"/>        <result property="userID" column="user.weixin.userID"/>        <result property="refreshToken" column="user.weixin.refreshToken"/>        <result property="accessToken" column="user.weixin.accessToken"/>        <result property="refreshTokenTime" column="user.weixin.refreshTokenTime"/>        <result property="accessTokenTime" column="user.weixin.accessTokenTime"/>        <result property="ticket" column="user.weixin.ticket"/>        <result property="ticketTime" column="user.weixin.ticketTime"/>    </resultMap>    <!--对象的多级映射 mapList mapPage mapOne-->    <select id="getPositionOfStateIsNoSure" resultMap="getPositionMap">        select        <include refid="getPositionList"/>        from position p        left join localtioninfo workPlace on p.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join huntingtype huntingtype on p.workTypeID = huntingtype.id        left join beenrecruited beenrecruitedList on p.id = beenrecruitedList.positionID  and beenrecruitedList.state = 1  and beenrecruitedList.dismiss is null        left join resume resume on beenrecruitedList.resumeID = resume.id        left join educational educationalList on resume.id = educationalList.resumeID        left join shiro_user user on resume.userID = user.id        left join personalauthen personalauthen on user.id = personalauthen.userID        left join attachment attachment on user.infoHeadImg = attachment.id        left join weixin weixin on user.id = weixin.userID        WHERE p.userID = #{condition.userID} AND p.open = #{condition.open} AND p.type = #{condition.type}        AND p.isDeleted = #{condition.isDeleted}        <!--AND beenrecruitedList.state = #{condition.state}        AND beenrecruitedList.dismiss is null        AND now() &lt;   p.recruitEndTime        <if test="condition.positionID != null">AND p.id = #{condition.positionID}</if>        AND p.userID = #{condition.userID} AND p.isDeleted = #{condition.isDeleted}        AND p.type = #{condition.type}        AND now() &lt;   p.recruitEndTime-->        AND now() &lt;  p.recruitEndTime        AND p.open = 2        <!--ORDER BY educationalList.`educationLeavl` DESC-->        GROUP BY p.id        ORDER BY p.updateTime desc    </select>    <!--级联查询-->    <sql id="commentListColumn">        b.id as 'id',        b.version as 'version',b.positionID as 'positionID',b.resumeID as 'resumeID',b.state as 'state',b.signUp as 'signUp',b.payBond as 'payBond',b.interview as 'interview',b.train as 'train',b.admission as 'admission',b.work as 'work',b.settlement as 'settlement',b.endWork as 'endWork',b.workDate as 'workDate',b.dismiss as 'dismiss',b.reason as 'reason',        evaluate.id as 'evaluate.id', evaluate.reply as 'evaluate.reply',        evaluate.version as 'evaluate.version',evaluate.evaluateContent as 'evaluate.evaluateContent',evaluate.evaluateTime as 'evaluate.evaluateTime',evaluate.evaluateLevel as 'evaluate.evaluateLevel',evaluate.userID as 'evaluate.userID',evaluate.positionID as 'evaluate.positionID',evaluate.state as 'evaluate.state',evaluate.picture as 'evaluate.picture',        user.id as 'evaluate.user.id',        user.version as 'evaluate.user.version',user.accountNo as 'evaluate.user.accountNo',user.password as 'evaluate.user.password',user.weChatNo as 'evaluate.user.weChatNo',user.nickName as 'evaluate.user.nickName',user.sex as 'evaluate.user.sex',user.phoneNumber as 'evaluate.user.phoneNumber',user.lastLoginTime as 'evaluate.user.lastLoginTime',user.loginTime as 'evaluate.user.loginTime',user.status as 'evaluate.user.status',user.realName as 'evaluate.user.realName',user.IDCard as 'evaluate.user.IDCard',user.infoHeadImg as 'evaluate.user.infoHeadImg',user.locked as 'evaluate.user.locked',user.userSig as 'evaluate.user.userSig',user.birthday as 'evaluate.user.birthday',        weixin.id as 'evaluate.user.weixin.id',        weixin.version as 'evaluate.user.weixin.version',weixin.nickname as 'evaluate.user.weixin.nickname',weixin.sex as 'evaluate.user.weixin.sex',weixin.province as 'evaluate.user.weixin.province',weixin.city as 'evaluate.user.weixin.city',weixin.country as 'evaluate.user.weixin.country',weixin.headimgurl as 'evaluate.user.weixin.headimgurl',weixin.privilegeStr as 'evaluate.user.weixin.privilegeStr',weixin.unionid as 'evaluate.user.weixin.unionid',weixin.openid as 'evaluate.user.weixin.openid',weixin.userID as 'evaluate.user.weixin.userID',weixin.refreshToken as 'evaluate.user.weixin.refreshToken',weixin.accessToken as 'evaluate.user.weixin.accessToken',weixin.refreshTokenTime as 'evaluate.user.weixin.refreshTokenTime',weixin.accessTokenTime as 'evaluate.user.weixin.accessTokenTime',weixin.ticket as 'evaluate.user.weixin.ticket',weixin.ticketTime as 'evaluate.user.weixin.ticketTime'    </sql>    <!--User映射-->    <resultMap id="UserMap" type="User">        <id property="id" column="evaluate.user.id"/>        <result property="version" column="evaluate.user.version"/>        <result property="accountNo" column="evaluate.user.accountNo"/>        <result property="password" column="evaluate.user.password"/>        <result property="weChatNo" column="evaluate.user.weChatNo"/>        <result property="nickName" column="evaluate.user.nickName"/>        <result property="sex" column="evaluate.user.sex"/>        <result property="phoneNumber" column="evaluate.user.phoneNumber"/>        <result property="lastLoginTime" column="evaluate.user.lastLoginTime"/>        <result property="loginTime" column="evaluate.user.loginTime"/>        <result property="status" column="evaluate.user.status"/>        <result property="realName" column="evaluate.user.realName"/>        <result property="IDCard" column="evaluate.user.IDCard"/>        <result property="infoHeadImg" column="evaluate.user.infoHeadImg"/>        <result property="locked" column="evaluate.user.locked"/>        <result property="userSig" column="evaluate.user.userSig"/>        <result property="birthday" column="evaluate.user.birthday"/>        <association property="weixin" javaType="Weixin" resultMap="CommentWeixinMap"/>    </resultMap>    <!--Weixin映射-->    <resultMap id="CommentWeixinMap" type="Weixin">        <id property="id" column="evaluate.user.weixin.id"/>        <result property="version" column="evaluate.user.weixin.version"/>        <result property="nickname" column="evaluate.user.weixin.nickname"/>        <result property="sex" column="evaluate.user.weixin.sex"/>        <result property="province" column="evaluate.user.weixin.province"/>        <result property="city" column="evaluate.user.weixin.city"/>        <result property="country" column="evaluate.user.weixin.country"/>        <result property="headimgurl" column="evaluate.user.weixin.headimgurl"/>        <result property="privilegeStr" column="evaluate.user.weixin.privilegeStr"/>        <result property="unionid" column="evaluate.user.weixin.unionid"/>        <result property="openid" column="evaluate.user.weixin.openid"/>        <result property="userID" column="evaluate.user.weixin.userID"/>        <result property="refreshToken" column="evaluate.user.weixin.refreshToken"/>        <result property="accessToken" column="evaluate.user.weixin.accessToken"/>        <result property="refreshTokenTime" column="evaluate.user.weixin.refreshTokenTime"/>        <result property="accessTokenTime" column="evaluate.user.weixin.accessTokenTime"/>        <result property="ticket" column="evaluate.user.weixin.ticket"/>        <result property="ticketTime" column="evaluate.user.weixin.ticketTime"/>    </resultMap>    <!--Evaluate映射-->    <resultMap id="EvaluateMap" type="Evaluate">        <id property="id" column="evaluate.id"/>        <result property="version" column="evaluate.version"/>        <result property="evaluateContent" column="evaluate.evaluateContent"/>        <result property="evaluateTime" column="evaluate.evaluateTime"/>        <result property="evaluateLevel" column="evaluate.evaluateLevel"/>        <result property="userID" column="evaluate.userID"/>        <result property="positionID" column="evaluate.positionID"/>        <result property="state" column="evaluate.state"/>        <result property="picture" column="evaluate.picture"/>        <result property="reply" column="evaluate.reply"/>        <association property="user" javaType="User" resultMap="UserMap"/>    </resultMap>    <!--Beenrecruited映射-->    <resultMap id="CommentListBeenrecruitedMap" type="Beenrecruited">        <id property="id" column="id"/>        <result property="version" column="version"/>        <result property="positionID" column="positionID"/>        <result property="resumeID" column="resumeID"/>        <result property="state" column="state"/>        <result property="signUp" column="signUp"/>        <result property="payBond" column="payBond"/>        <result property="interview" column="interview"/>        <result property="train" column="train"/>        <result property="admission" column="admission"/>        <result property="work" column="work"/>        <result property="settlement" column="settlement"/>        <result property="endWork" column="endWork"/>        <result property="workDate" column="workDate"/>        <result property="dismiss" column="dismiss"/>        <result property="reason" column="reason"/>        <association property="evaluate" javaType="Evaluate" resultMap="EvaluateMap"/>    </resultMap>    <select id="commentList" resultMap="CommentListBeenrecruitedMap">        select        <include refid="commentListColumn"/>        from beenrecruited b        left join evaluate evaluate on b.positionID = evaluate.positionID and b.createBy = evaluate.userID        <if test="condition.reply=='isnull'">            left join shiro_user user on evaluate.userID = user.id        </if>        <if test="condition.reply=='isnotnull'">            left join shiro_user user on evaluate.updateBy = user.id        </if>        left join weixin weixin on user.id = weixin.userID        <include refid="whereClause"/>        <if test="condition.reply=='isnull'">            and evaluate.reply is null        </if>        <if test="condition.reply=='isnotnull'">            and evaluate.reply is not null        </if>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <select id="getPositionWait" resultMap="getPositionMap">        select        <include refid="getPositionList"/>        ,IF(indemnity.id is null,0,1) as 'beenrecruitedList.vip'        from position p        left join localtioninfo workPlace on p.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join huntingtype huntingtype on p.workTypeID = huntingtype.id        left join beenrecruited beenrecruitedList on p.id = beenrecruitedList.positionID        left join resume resume on beenrecruitedList.resumeID = resume.id        left join educational educationalList on resume.id = educationalList.resumeID        left join shiro_user user on resume.userID = user.id        left join personalauthen personalauthen on user.id = personalauthen.userID        left join attachment attachment on user.infoHeadImg = attachment.id        left join weixin weixin on user.id = weixin.userID        left join indemnity indemnity on indemnity.userID = weixin.userID and indemnity.positionID = p.id        WHERE p.userID = #{condition.userID}        AND p.open = #{condition.open}        AND p.type = #{condition.type}        AND p.isDeleted = #{condition.isDeleted}        AND beenrecruitedList.dismiss IS NULL        AND beenrecruitedList.state = #{condition.state}        AND p.id=#{condition.positionID}        ORDER BY educationalList.`educationLeavl` DESC    </select>    <resultMap id="getPositionMap1" type="Position">        <id property="id" column="id"/>        <result property="version" column="version"/>        <result property="title" column="title"/>        <result property="salaryType" column="salaryType"/>        <result property="recruitStartTime" column="recruitStartTime"/>        <result property="recruitEndTime" column="recruitEndTime"/>        <result property="signCount" column="signCount"/>        <result property="signAdd" column="signAdd"/>        <result property="signTime" column="signTime"/>        <result property="signID" column="signID"/>        <result property="salary" column="salary"/>        <result property="dailySalary" column="dailySalary"/>        <result property="liquidatedDamages" column="liquidatedDamages"/>        <result property="recruitsSum" column="recruitsSum"/>        <result property="sexRequirements" column="sexRequirements"/>        <result property="workPalce" column="workPalce"/>        <result property="workDate" column="workDate"/>        <result property="aggregate" column="aggregate"/>        <result property="setDate" column="setDate"/>        <result property="contacts" column="contacts"/>        <result property="contactNumber" column="contactNumber"/>        <result property="settlement" column="settlement"/>        <result property="matters" column="matters"/>        <result property="jobRequirements" column="jobRequirements"/>        <result property="jobContent" column="jobContent"/>        <result property="includeBoard" column="includeBoard"/>        <result property="controlSleep" column="controlSleep"/>        <result property="interview" column="interview"/>        <result property="baseTask" column="baseTask"/>        <result property="commission" column="commission"/>        <result property="train" column="train"/>        <result property="beenRecruitedSum" column="beenRecruitedSum"/>        <result property="workTypeID" column="workTypeID"/>        <result property="userID" column="userID"/>        <result property="open" column="open"/>        <result property="type" column="type"/>        <result property="startTime" column="startTime"/>        <result property="endTime" column="endTime"/>        <result property="personNumDay" column="personNumDay" />        <association property="workPlace" javaType="Localtioninfo" resultMap="getPositionLocaltioninfoMap"/>        <association property="huntingtype" javaType="Huntingtype" resultMap="getPositionHuntingtypeMap"/>        <collection property="beenrecruitedList" resultMap="getPositionBeenrecruitedMap"/>    </resultMap>    <select id="getPositionOfStateIsWaitToPosition" resultMap="getPositionMap1">        select * from ( select        <include refid="getPositionList"/>       <!-- ,(SELECT TIME(s.signTime) FROM `signin` s WHERE s.userID = resume.userID AND s.positionID = p.id AND        DATE(s.signTime) = DATE(NOW()) ORDER BY s.signTime DESC LIMIT 0,1) signTime        ,(SELECT CONCAT(c.cityName,l.detailedAddress) FROM signin s LEFT JOIN localtioninfo l ON s.signAddress = l.id        LEFT JOIN city c ON c.id = l.cityID WHERE s.userID = resume.userID AND s.positionID = p.id AND DATE(s.signTime)        = DATE(NOW()) ORDER BY s.signTime DESC LIMIT 0, 1)signAdd        ,(SELECT COUNT(*) FROM signin s WHERE s.userID = resume.userID AND s.positionID = p.id AND DATE(s.signTime) =        DATE(NOW())) signCount-->        ,p.updateTime as 'updateTime'        ,signins.signTime        ,(SELECT CONCAT(c.cityName,l.detailedAddress) FROM signin s LEFT JOIN localtioninfo l ON s.signAddress = l.id        LEFT JOIN city c ON c.id = l.cityID WHERE s.userID = resume.userID AND s.positionID = p.id AND DATE(s.signTime) = DATE(NOW())        ORDER BY s.signTime DESC LIMIT 0, 1)signAdd,        (SELECT COUNT(signins.id) FROM signin signins WHERE signins.`positionID` = p.`ID` AND signins.`userID` = resume.userID AND DATE(NOW()) = DATE(signins.`signTime`) GROUP BY signins.positionID) as signCount,        (SELECT signins.id FROM signin signins WHERE signins.`positionID` = p.`ID` GROUP BY signins.positionID) as signID        from position p        left join localtioninfo workPlace on p.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join huntingtype huntingtype on p.workTypeID = huntingtype.id        left join beenrecruited beenrecruitedList on p.id = beenrecruitedList.positionID        left join todayjob tj on tj.beenID = beenrecruitedList.id        left join signin signins on signins.createBy = tj.userID and signins.positionID =  tj.positionID and DATE(signins.signTime) = DATE( now())        left join resume resume on beenrecruitedList.resumeID = resume.id        left join educational educationalList on resume.id = educationalList.resumeID        left join shiro_user user on resume.userID = user.id        left join personalauthen personalauthen on user.id = personalauthen.userID        left join attachment attachment on user.infoHeadImg = attachment.id        left join weixin weixin on user.id = weixin.userID        WHERE p.userID = #{condition.userID} AND p.open = #{condition.open} AND p.type = #{condition.type}        AND p.isDeleted = #{condition.isDeleted}        AND beenrecruitedList.state = 4        AND beenrecruitedList.dismiss IS NULL        <if test="condition.positionID != null">AND p.id = #{condition.positionID}</if>        AND (signins.state  in (0,1) or signins.state is null)        AND now()  &lt; p.recruitEndTime        OR p.open = 2 AND p.userID = #{condition.userID} AND p.isDeleted = #{condition.isDeleted}        AND p.type = #{condition.type}        AND now() &lt; p.recruitEndTime        /*GROUP BY beenrecruitedList.id*/        order by signins.updateTime   desc) as temp group by id order by updateTime desc    </select>    <select id="selectYiJieSuan" parameterType="String" resultType="java.util.Map">        SELECT            b.state,personalauthen.`realName`,w.headimgurl,            p.dailySalary,COUNT(s.id) AS 'singinCount' ,            (SELECT COUNT(1) FROM (SELECT * FROM signin s WHERE positionID = #{positionID} AND s.isDeleted = FALSE  GROUP BY DATE(signTime)) ss ) AS 'signinDay',            (SELECT COUNT(1) FROM applysettlement a WHERE a.positionID = #{positionID} AND a.userID = r.`userID` AND a.isDeleted = FALSE) AS 'settlementCount',            (SELECT SUM(a.applyPay) FROM applysettlement a WHERE a.positionID = #{positionID} AND a.userID = r.`userID` AND a.isDeleted = FALSE AND a.state = 1)AS 'settlementSum'            ,CONCAT_WS('/'  ,'upload',attachment.`path`, attachment.`datestr`, attachment.`name`) AS 'infoHeadImg'        FROM `beenrecruited` b        LEFT JOIN POSITION p ON p.id = b.positionID        LEFT JOIN signin s ON s.positionID = p.id        LEFT JOIN resume r ON r.id = b.resumeID        LEFT JOIN weixin w ON w.userID = r.`userID`        LEFT JOIN personalauthen personalauthen ON personalauthen.`userID` = r.`userID`        LEFT JOIN shiro_user su ON su.id = r.`userID`        LEFT JOIN attachment attachment ON attachment.`id` = su.`infoHeadImg`        WHERE b.positionID = #{positionID} AND b.state = 4        GROUP BY r.`id` HAVING settlementSum IS NOT NULL    </select>    <select id="getUserBaseInfo" resultType="java.util.Map">        SELECT            id,            nickName        FROM            shiro_user        WHERE id =            (SELECT                userId            FROM                RESUME            WHERE id =                (SELECT                    resumeID                FROM                    beenrecruited                WHERE id = #{id}))    </select>    <select id="getOrtherInfo" resultType="java.util.Map">        SELECT            title,            grouplist.groupID,            p.id        FROM            grouplist grouplist            LEFT JOIN POSITION p                ON p.id = grouplist.positionID        WHERE p.id =            (SELECT                positionID            FROM                beenrecruited            WHERE id = #{id})            limit 0,1    </select>    <select id="getPositionInfoForGroup" resultType="Position">        SELECT * FROM POSITION WHERE id = (SELECT positionID FROM beenrecruited WHERE id = #{id})    </select>    <select id="findBeenByWorkDate" resultType="java.util.HashMap" parameterType="Object">    SELECT	su.realName,	su.id as 'userID',	t.workDate,	r.id,	w.headimgurl,    a.path,    a.datestr,    a.name,    t.id as 'beenID',    t.version,t.positionID,	(		SELECT			e.educationLeavl		FROM			educational e		WHERE			e.resumeID = r.id		ORDER BY			e.educationLeavl DESC		LIMIT 0,		1	) AS level    FROM        beenrecruited t    LEFT JOIN shiro_user su ON t.createBy = su.id    LEFT JOIN resume r ON r.id = t.resumeId    LEFT JOIN weixin w on w.userID  = su.id    LEFT JOIN attachment a on a.id = su.infoHeadImg    WHERE        t.positionID = #{condition.positionID}    AND t.dismiss IS NULL    AND t.state = 4    </select></mapper>