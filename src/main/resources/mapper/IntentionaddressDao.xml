<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.IntentionaddressDao" ><!-- 查询字段 --><sql id="columnList" >	i.id,	 i.userID, i.cityID, i.createTime, i.updateTime, i.version, i.isDeleted, i.createBy, i.updateBy</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  i.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and i.id = #{condition.id}	</if>	<if test="condition.userID != null" >and  i.userID = #{condition.userID}</if><if test="condition.cityID != null" >and  i.cityID = #{condition.cityID}</if><if test="condition.createTime != null" >and  i.createTime = #{condition.createTime}</if><if test="condition.updateTime != null" >and  i.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  i.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  i.isDeleted = #{condition.isDeleted}</if><if test="condition.createBy != null" >and  i.createBy = #{condition.createBy}</if><if test="condition.updateBy != null" >and  i.updateBy = #{condition.updateBy}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and i.id = #{condition.id}	</if>													 			<if test="condition.userID != null" >and  UPPER(i.userID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.userID}),'%'))</if><if test="condition.cityID != null" >and  UPPER(i.cityID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.cityID}),'%'))</if><if test="condition.createTime != null" >and  UPPER(i.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(i.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(i.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(i.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if><if test="condition.createBy != null" >and  UPPER(i.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(i.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into intentionaddress (id,userID,cityID,createTime,updateTime,version,isDeleted,createBy,updateBy)  values(#{id,jdbcType=VARCHAR},#{userID},#{cityID},#{createTime},#{updateTime},#{version},#{isDeleted},#{createBy},#{updateBy})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update intentionaddress set	<trim  suffixOverrides="," >	<if test="userID != null ">userID=#{userID},</if><if test="cityID != null ">cityID=#{cityID},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="updateBy != null ">updateBy=#{updateBy},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from intentionaddress where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="Intentionaddress"  parameterType="String">	select <include refid="columnList" /> 	from intentionaddress  i	where  i.id = #{id}  and i.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from intentionaddress  i	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="Intentionaddress" >	select 	<include refid="columnList"/>	from intentionaddress i	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="Intentionaddress" >	select 	<include refid="columnList"/>	from intentionaddress i	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="Intentionaddress" >	select	<include refid="columnList"/>	from intentionaddress i	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="Intentionaddress" >	select	<include refid="columnList"/>	from intentionaddress i	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select i.${idsColumn}	from intentionaddress i    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select i.${idsColumn}	from intentionaddress i    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="Intentionaddress" >     select    <include refid="columnList"/>     from intentionaddress i    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select>	<!--级联查询-->	<sql id="detailList">		i.id as 'id',i.userID as 'userID',i.cityID as 'cityID',		city.id as 'city.id',city.pinyin as 'city.pinyin',city.cityName as 'city.cityName',city.zipCode as 'city.zipCode',city.openState as 'city.openState',city.cityType as 'city.cityType',city.isHot as 'city.isHot'	</sql>	<!--City映射-->	<resultMap id="CityMap" type="City">		<id property="id" column="city.id" />		<result property="pinyin" column="city.pinyin" />		<result property="cityName" column="city.cityName" />		<result property="zipCode" column="city.zipCode" />		<result property="openState" column="city.openState" />		<result property="cityType" column="city.cityType" />		<result property="isHot" column="city.isHot" />	</resultMap>	<!--Intentionaddress映射-->	<resultMap id="IntentionaddressMap" type="Intentionaddress">		<id property="id" column="id" />		<result property="userID" column="userID" />		<result property="cityID" column="cityID" />		<association property="city"  javaType="City" resultMap="CityMap"/>	</resultMap>	<!--对象的多级映射-->	<select id="mapPage" resultMap="IntentionaddressMap" >		select		<include refid="detailList"/>		from  intentionaddress i		left join city city on i.cityID = city.id		<include refid="whereClause"/>		<if test="orderByClause!=null">${orderByClause}</if>	</select></mapper>