<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.WorkexperienceDao" ><!-- 查询字段 --><sql id="columnList" >	w.id,	 w.companyName, w.jobName, w.startTime, w.endTime, w.jobContent, w.resumeID, w.createTime, w.updateTime, w.version, w.isDeleted, w.createBy, w.updateBy</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  w.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and w.id = #{condition.id}	</if>	<if test="condition.companyName != null" >and  w.companyName = #{condition.companyName}</if><if test="condition.jobName != null" >and  w.jobName = #{condition.jobName}</if><if test="condition.startTime != null" >and  w.startTime = #{condition.startTime}</if><if test="condition.endTime != null" >and  w.endTime = #{condition.endTime}</if><if test="condition.jobContent != null" >and  w.jobContent = #{condition.jobContent}</if><if test="condition.resumeID != null" >and  w.resumeID = #{condition.resumeID}</if><if test="condition.createTime != null" >and  w.createTime = #{condition.createTime}</if><if test="condition.updateTime != null" >and  w.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  w.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  w.isDeleted = #{condition.isDeleted}</if><if test="condition.createBy != null" >and  w.createBy = #{condition.createBy}</if><if test="condition.updateBy != null" >and  w.updateBy = #{condition.updateBy}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and w.id = #{condition.id}	</if>													 			<if test="condition.companyName != null" >and  UPPER(w.companyName) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.companyName}),'%'))</if><if test="condition.jobName != null" >and  UPPER(w.jobName) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.jobName}),'%'))</if><if test="condition.startTime != null" >and  UPPER(w.startTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.startTime}),'%'))</if><if test="condition.endTime != null" >and  UPPER(w.endTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.endTime}),'%'))</if><if test="condition.jobContent != null" >and  UPPER(w.jobContent) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.jobContent}),'%'))</if><if test="condition.resumeID != null" >and  UPPER(w.resumeID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.resumeID}),'%'))</if><if test="condition.createTime != null" >and  UPPER(w.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(w.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(w.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(w.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if><if test="condition.createBy != null" >and  UPPER(w.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(w.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into workexperience (id,companyName,jobName,startTime,endTime,jobContent,resumeID,createTime,updateTime,version,isDeleted,createBy,updateBy)  values(#{id,jdbcType=VARCHAR},#{companyName},#{jobName},#{startTime},#{endTime},#{jobContent},#{resumeID},#{createTime},#{updateTime},#{version},#{isDeleted},#{createBy},#{updateBy})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update workexperience set	<trim  suffixOverrides="," >	<if test="companyName != null ">companyName=#{companyName},</if><if test="jobName != null ">jobName=#{jobName},</if><if test="startTime != null ">startTime=#{startTime},</if><if test="endTime != null ">endTime=#{endTime},</if><if test="jobContent != null ">jobContent=#{jobContent},</if><if test="resumeID != null ">resumeID=#{resumeID},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="updateBy != null ">updateBy=#{updateBy},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from workexperience where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="Workexperience"  parameterType="String">	select <include refid="columnList" /> 	from workexperience  w	where  w.id = #{id}  and w.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from workexperience  w	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="Workexperience" >	select 	<include refid="columnList"/>	from workexperience w	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="Workexperience" >	select 	<include refid="columnList"/>	from workexperience w	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="Workexperience" >	select	<include refid="columnList"/>	from workexperience w	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="Workexperience" >	select	<include refid="columnList"/>	from workexperience w	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select w.${idsColumn}	from workexperience w    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select w.${idsColumn}	from workexperience w    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="Workexperience" >     select    <include refid="columnList"/>     from workexperience w    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select></mapper>