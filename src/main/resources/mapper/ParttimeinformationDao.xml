<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.ParttimeinformationDao" ><!-- 查询字段 --><sql id="columnList" >	p.id,	 p.userID, p.releaseContent, p.releaseTime, p.releasePicture, p.createTime, p.updateTime, p.version, p.isDeleted, p.createBy, p.updateBy</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  p.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and p.id = #{condition.id}	</if>	<if test="condition.userID != null" >and  p.userID = #{condition.userID}</if><if test="condition.releaseContent != null" >and  p.releaseContent = #{condition.releaseContent}</if><if test="condition.releaseTime != null" >and  p.releaseTime = #{condition.releaseTime}</if><if test="condition.releasePicture != null" >and  p.releasePicture = #{condition.releasePicture}</if><if test="condition.createTime != null" >and  p.createTime = #{condition.createTime}</if><if test="condition.updateTime != null" >and  p.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  p.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  p.isDeleted = #{condition.isDeleted}</if><if test="condition.createBy != null" >and  p.createBy = #{condition.createBy}</if><if test="condition.updateBy != null" >and  p.updateBy = #{condition.updateBy}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and p.id = #{condition.id}	</if>													 			<if test="condition.userID != null" >and  UPPER(p.userID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.userID}),'%'))</if><if test="condition.releaseContent != null" >and  UPPER(p.releaseContent) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.releaseContent}),'%'))</if><if test="condition.releaseTime != null" >and  UPPER(p.releaseTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.releaseTime}),'%'))</if><if test="condition.releasePicture != null" >and  UPPER(p.releasePicture) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.releasePicture}),'%'))</if><if test="condition.createTime != null" >and  UPPER(p.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(p.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(p.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(p.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if><if test="condition.createBy != null" >and  UPPER(p.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(p.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into parttimeinformation (id,userID,releaseContent,releaseTime,releasePicture,createTime,updateTime,version,isDeleted,createBy,updateBy)  values(#{id,jdbcType=VARCHAR},#{userID},#{releaseContent},#{releaseTime},#{releasePicture},#{createTime},#{updateTime},#{version},#{isDeleted},#{createBy},#{updateBy})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update parttimeinformation set	<trim  suffixOverrides="," >	<if test="userID != null ">userID=#{userID},</if><if test="releaseContent != null ">releaseContent=#{releaseContent},</if><if test="releaseTime != null ">releaseTime=#{releaseTime},</if><if test="releasePicture != null ">releasePicture=#{releasePicture},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="updateBy != null ">updateBy=#{updateBy},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from parttimeinformation where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="Parttimeinformation"  parameterType="String">	select <include refid="columnList" /> 	from parttimeinformation  p	where  p.id = #{id}  and p.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from parttimeinformation  p	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="Parttimeinformation" >	select 	<include refid="columnList"/>	from parttimeinformation p	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="Parttimeinformation" >	select 	<include refid="columnList"/>	from parttimeinformation p	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="Parttimeinformation" >	select	<include refid="columnList"/>	from parttimeinformation p	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="Parttimeinformation" >	select	<include refid="columnList"/>	from parttimeinformation p	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select p.${idsColumn}	from parttimeinformation p    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select p.${idsColumn}	from parttimeinformation p    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="Parttimeinformation" >     select    <include refid="columnList"/>     from parttimeinformation p    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select>	<!--级联查询-->	<sql id="detailList">		p.id as 'id',		p.version as 'version',p.userID as 'userID',p.releaseContent as 'releaseContent',p.releaseTime as 'releaseTime',p.releasePicture as 'releasePicture',		attachmentList.id as 'attachmentList.id',		attachmentList.version as 'attachmentList.version',attachmentList.datestr as 'attachmentList.datestr',attachmentList.path as 'attachmentList.path',attachmentList.name as 'attachmentList.name',attachmentList.title as 'attachmentList.title',attachmentList.type as 'attachmentList.type',attachmentList.refID as 'attachmentList.refID',		user.id as 'user.id',w.headimgurl as 'user.imgPath',		user.version as 'user.version',user.accountNo as 'user.accountNo',user.password as 'user.password',user.weChatNo as 'user.weChatNo',user.nickName as 'user.nickName',user.sex as 'user.sex',user.phoneNumber as 'user.phoneNumber',user.lastLoginTime as 'user.lastLoginTime',user.loginTime as 'user.loginTime',user.status as 'user.status',user.realName as 'user.realName',user.IDCard as 'user.IDCard',user.infoHeadImg as 'user.infoHeadImg',user.locked as 'user.locked',user.userSig as 'user.userSig',user.birthday as 'user.birthday',		attachment.id as 'user.attachment.id',		attachment.version as 'user.attachment.version',attachment.datestr as 'user.attachment.datestr',attachment.path as 'user.attachment.path',attachment.name as 'user.attachment.name',attachment.title as 'user.attachment.title',attachment.type as 'user.attachment.type',attachment.refID as 'user.attachment.refID',		attention.id as 'attention.id',		attention.version as 'attention.version',attention.userID as 'attention.userID',attention.concernID as 'attention.concernID'	</sql>    <!--级联查询-->    <sql id="contentAndPhotosList">        p.id as 'id',        p.version as 'version',p.userID as 'userID',p.releaseContent as 'releaseContent',p.releaseTime as 'releaseTime',p.releasePicture as 'releasePicture',        attachmentList.id as 'attachmentList.id',        attachmentList.version as 'attachmentList.version',attachmentList.datestr as 'attachmentList.datestr',attachmentList.path as 'attachmentList.path',attachmentList.name as 'attachmentList.name',attachmentList.title as 'attachmentList.title',attachmentList.type as 'attachmentList.type',attachmentList.refID as 'attachmentList.refID'    </sql>	<!--Attachment映射-->	<resultMap id="AttachmentMap" type="Attachment">		<id property="id" column="user.attachment.id" />		<result property="version" column="user.attachment.version" />		<result property="datestr" column="user.attachment.datestr" />		<result property="path" column="user.attachment.path" />		<result property="name" column="user.attachment.name" />		<result property="title" column="user.attachment.title" />		<result property="type" column="user.attachment.type" />		<result property="refID" column="user.attachment.refID" />	</resultMap>	<!--User映射-->	<resultMap id="UserMap" type="User">		<id property="id" column="user.id" />		<result property="version" column="user.version" />		<result property="accountNo" column="user.accountNo" />		<result property="password" column="user.password" />		<result property="weChatNo" column="user.weChatNo" />		<result property="nickName" column="user.nickName" />		<result property="sex" column="user.sex" />		<result property="phoneNumber" column="user.phoneNumber" />		<result property="lastLoginTime" column="user.lastLoginTime" />		<result property="loginTime" column="user.loginTime" />		<result property="status" column="user.status" />		<result property="realName" column="user.realName" />		<result property="IDCard" column="user.IDCard" />		<result property="infoHeadImg" column="user.infoHeadImg" />		<result property="locked" column="user.locked" />		<result property="userSig" column="user.userSig" />		<result property="birthday" column="user.birthday" />		<result property="imgPath" column="user.imgPath"/>		<result property="myPositionSize" column="user.myPositionSize" />		<association property="attachment"  javaType="Attachment" resultMap="AttachmentMap"/>	</resultMap>	<!--Parttimeinformation映射-->	<resultMap id="ParttimeinformationMap" type="Parttimeinformation">		<id property="id" column="id" />		<result property="version" column="version" />		<result property="userID" column="userID" />		<result property="releaseContent" column="releaseContent" />		<result property="releaseTime" column="releaseTime" />		<result property="releasePicture" column="releasePicture" />		<association property="user"  javaType="User" resultMap="UserMap"/>		<association property="attention"  javaType="Attention" resultMap="AttentionMap"/>		<collection property="attachmentList" resultMap="AttachmentListMap" />	</resultMap>    <!--Parttimeinformation映射-->    <resultMap id="contentAndPhotosMap" type="Parttimeinformation">        <id property="id" column="id" />        <result property="version" column="version" />        <result property="userID" column="userID" />        <result property="releaseContent" column="releaseContent" />        <result property="releaseTime" column="releaseTime" />        <result property="releasePicture" column="releasePicture" />        <collection property="attachmentList" resultMap="AttachmentListMap" />    </resultMap>    <!--Attachment映射-->	<resultMap id="AttachmentListMap" type="Attachment">		<id property="id" column="attachmentList.id" />		<result property="version" column="attachmentList.version" />		<result property="datestr" column="attachmentList.datestr" />		<result property="path" column="attachmentList.path" />		<result property="name" column="attachmentList.name" />		<result property="title" column="attachmentList.title" />		<result property="type" column="attachmentList.type" />		<result property="refID" column="attachmentList.refID" />	</resultMap>	<!--Attention映射-->	<resultMap id="AttentionMap" type="Attention">		<id property="id" column="attention.id" />		<result property="version" column="attention.version" />		<result property="userID" column="attention.userID" />		<result property="concernID" column="attention.concernID" />	</resultMap>	<select id="getContentAndPhotos" resultMap="contentAndPhotosMap">		select		<include refid="contentAndPhotosList"/>		from  parttimeinformation p		left join attachment attachmentList on p.id = attachmentList.refID		<include refid="whereClause"/>		<if test="orderByClause!=null">${orderByClause}</if>		limit 0,1	</select>	<!--对象的多级映射 mapList mapPage mapOne-->	<select id="loadMyPartTimeInformationPage" resultMap="ParttimeinformationMap" >		select		<include refid="detailList"/>		,(SELECT COUNT(*) FROM POSITION position WHERE position.userID = p.userID AND position.`type` = 0 AND position.`open` = 2   GROUP BY position.userID) AS 'user.myPositionSize'		from  parttimeinformation p		left join attachment attachmentList on p.id = attachmentList.refID		left join shiro_user user on p.userID = user.id		left join attachment attachment on user.infoHeadImg = attachment.id		left join attention attention on p.userID = attention.concernID		left join weixin w on w.userID  = p.userID		WHERE (p.userID IN		(SELECT		a.userID		FROM		attention a		WHERE a.`concernID` = #{condition.userID} AND a.isDeleted = FALSE )		OR p.userID = #{condition.userID}) AND p.isDeleted = FALSE		GROUP BY p.releaseTime		ORDER BY p.releaseTime DESC	</select></mapper>