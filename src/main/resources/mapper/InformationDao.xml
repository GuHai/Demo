<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.InformationDao">    <!-- 查询字段 -->    <sql id="columnList">	i.id,i.bgpID,i.payType,i.isStudents,i.school,i.lastWorkNumber,	 i.qRCode, i.userID, i.workNumber, i.brief, i.identityType, i.authentication, i.payPassword, i.createTime, i.updateTime, i.version, i.isDeleted, i.createBy, i.updateBy,i.fullType</sql>    <!--通过id集合in查询-->    <sql id="inClause">        <if test="column!=null">            <if test="ids==null">                and 1=0            </if>            <if test="ids!=null">                <if test="ids.size>0">                    and i.${column} in                    <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                        #{items}                    </foreach>                </if>                <if test="ids.size==0">                    and 1=0                </if>            </if>        </if>    </sql>    <!-- 查询条件 -->    <sql id="whereClause">        where 1=1        <trim suffixOverrides=",">            <if test="condition.id != null">                and i.id = #{condition.id}            </if>            <if test="condition.qRCode != null">and i.qRCode = #{condition.qRCode}</if>            <if test="condition.userID != null">and i.userID = #{condition.userID}</if>            <if test="condition.workNumber != null">and i.workNumber = #{condition.workNumber}</if>            <if test="condition.brief != null">and i.brief = #{condition.brief}</if>            <if test="condition.identityType != null">and i.identityType = #{condition.identityType}</if>            <if test="condition.authentication != null">and i.authentication = #{condition.authentication}</if>            <if test="condition.payPassword != null">and i.payPassword = #{condition.payPassword}</if>            <if test="condition.createTime != null">and i.createTime = #{condition.createTime}</if>            <if test="condition.updateTime != null">and i.updateTime = #{condition.updateTime}</if>            <if test="condition.version != null">and i.version = #{condition.version}</if>            <if test="condition.isDeleted != null">and i.isDeleted = #{condition.isDeleted}</if>            <if test="condition.createBy != null">and i.createBy = #{condition.createBy}</if>            <if test="condition.updateBy != null">and i.updateBy = #{condition.updateBy}</if>            <if test="condition.lastWorkNumber != null">and i.lastWorkNumber = #{condition.lastWorkNumber}</if>            <if test="condition.fullType != null">and i.fullType = #{condition.fullType}</if>        </trim>        <include refid="inClause"/>    </sql>    <!-- 模糊查询条件 -->    <sql id="whereLikeClause">        where 1=1        <trim suffixOverrides=",">            <if test="condition.id != null">                and i.id = #{condition.id}            </if>            <if test="condition.qRCode != null">and UPPER(i.qRCode) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.qRCode}),'%'))            </if>            <if test="condition.userID != null">and UPPER(i.userID) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.userID}),'%'))            </if>            <if test="condition.workNumber != null">and UPPER(i.workNumber) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.workNumber}),'%'))            </if>            <if test="condition.brief != null">and UPPER(i.brief) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.brief}),'%'))            </if>            <if test="condition.identityType != null">and UPPER(i.identityType) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.identityType}),'%'))            </if>            <if test="condition.authentication != null">and UPPER(i.authentication) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.authentication}),'%'))            </if>            <if test="condition.payPassword != null">and UPPER(i.payPassword) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.payPassword}),'%'))            </if>            <if test="condition.createTime != null">and UPPER(i.createTime) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))            </if>            <if test="condition.updateTime != null">and UPPER(i.updateTime) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))            </if>            <if test="condition.version != null">and UPPER(i.version) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))            </if>            <if test="condition.isDeleted != null">and UPPER(i.isDeleted) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))            </if>            <if test="condition.createBy != null">and UPPER(i.createBy) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))            </if>            <if test="condition.updateBy != null">and UPPER(i.updateBy) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))            </if>            <if test="condition.lastWorkNumber != null">and UPPER(i.lastWorkNumber) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.lastWorkNumber}),'%'))            </if>            <if test="condition.fullType != null">and UPPER(i.fullType) LIKE                UPPER(CONCAT(CONCAT('%',#{condition.fullType}),'%'))            </if>        </trim>        <include refid="inClause"/>    </sql>    <!-- 插入记录 -->    <insert id="add">  insert into information (id,bgpID,qRCode,userID,workNumber,brief,identityType,authentication,payPassword,createTime,updateTime,version,isDeleted,createBy,updateBy,lastWorkNumber,fullType)  values(#{id,jdbcType=VARCHAR},#{bgpID},#{qRCode},#{userID},#{workNumber},#{brief},#{identityType},#{authentication},#{payPassword},#{createTime},#{updateTime},#{version},#{isDeleted},#{createBy},#{updateBy},#{lastWorkNumber},#{fullType})</insert>    <!-- 修改记录，只修改只不为空的字段 -->    <update id="update">        update information set        <trim suffixOverrides=",">            <if test="qRCode != null ">qRCode=#{qRCode},</if>            <if test="userID != null ">userID=#{userID},</if>            <if test="workNumber != null ">workNumber=#{workNumber},</if>            <if test="brief != null ">brief=#{brief},</if>            <if test="identityType != null ">identityType=#{identityType},</if>            <if test="authentication != null ">authentication=#{authentication},</if>            <if test="payPassword != null ">payPassword=#{payPassword},</if>            <if test="createTime != null ">createTime=#{createTime},</if>            <if test="updateTime != null ">updateTime=#{updateTime},</if>            <if test="version != null ">version=#{version},</if>            <if test="isDeleted != null ">isDeleted=#{isDeleted},</if>            <if test="createBy != null ">createBy=#{createBy},</if>            <if test="updateBy != null ">updateBy=#{updateBy},</if>            <if test="bgpID != null ">bgpID=#{bgpID},</if>            <if test="payType != null ">payType=#{payType},</if>            <if test="school != null ">school=#{school},</if>            <if test="isStudents != null ">isStudents=#{isStudents},</if>            <if test="lastWorkNumber != null ">lastWorkNumber=#{lastWorkNumber},</if>            <if test="fullType != null ">fullType=#{fullType},</if>        </trim>        where id=#{id} and version = #{version}-1    </update>    <!-- 删除记录 -->    <delete id="del">	delete from information where id = #{id} and version = #{version}</delete>    <!-- 根据id查询  -->    <select id="get" resultType="Information" parameterType="String">        select        <include refid="columnList"/>        from information i        where i.id = #{id} and i.isDeleted = false    </select>    <!-- 列表总数-->    <select id="count" resultType="java.lang.Long">        select count(1)        from information i        <include refid="whereClause"/>    </select>    <!-- 查询page -->    <select id="findPage" resultType="Information">        select        <include refid="columnList"/>        from information i        <include refid="whereClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!-- 模糊查询page -->    <select id="findLikePage" resultType="Information">        select        <include refid="columnList"/>        from information i        <include refid="whereLikeClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!-- 查询列表list -->    <select id="findList" resultType="Information">        select        <include refid="columnList"/>        from information i        <include refid="whereClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!--模糊查询list-->    <select id="findLikeList" resultType="Information">        select        <include refid="columnList"/>        from information i        <include refid="whereLikeClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!-- 查询符合条件的数据的id集合 -->    <select id="findIds" resultType="String">        select i.id        from information i        <include refid="whereClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!-- 查询符合模糊条件的数据的id集合 -->    <select id="findLikeIds" resultType="String">        select i.id        from information i        <include refid="whereLikeClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!-- 获取一个对象通过非id -->    <select id="one" resultType="Information">        select        <include refid="columnList"/>        from information i        <include refid="whereClause"/>        <if test="orderByClause!=null">${orderByClause}</if>        limit 0,1    </select>    <!--如果你想返回一个HashMap 就实现这个select标签-->    <select id="queryHashMap" resultType="java.util.HashMap" parameterType="Object">    </select>    <!--查询数据库是否存在特定条件的用户 -->    <select id="findOneUser" parameterType="java.util.Map" resultType="java.lang.Integer">		select		count(*)		from shiro_user u where u.accountNo = #{accountNo} AND u.password = #{oldPassword} AND u.id = #{userID}	</select>    <update id="updateLoginPassword" parameterType="java.util.Map">        UPDATE shiro_user SET password=#{newPassword},updateTime=#{updateTime} ,version = #{version} WHERE where id=#{userID} and version = #{version}-1    </update>    <select id="checkUser" resultType="java.lang.Long" parameterType="java.util.Map">      SELECT COUNT(*) FROM ijob.`shiro_user` u LEFT JOIN ijob.information i ON i.userID = u.id      WHERE u.id = #{userID} AND i.payPassword = #{payPassword}    </select>    <select id="findListForUser" resultType="Position" parameterType="java.util.Map">        SELECT p.* FROM `position` p LEFT JOIN `localtioninfo` l ON l.id = p.workPalce        WHERE 1=1        <if test="typeIds!=null">            <if test="typeIds.size>0">                and p.workTypeID in                <foreach item="items" index="index" collection="typeIds" open="(" separator="," close=")">                    #{items}                </foreach>            </if>        </if>        <if test="placeIds!=null">            <if test="placeIds.size>0">                and l.cityID in                <foreach item="items" index="index" collection="placeIds" open="(" separator="," close=")">                    #{items}                </foreach>            </if>        </if>    </select>    <select id="findListNoContainCity" resultType="Position" parameterType="java.util.Map">        SELECT p.* FROM `position` p LEFT JOIN `localtioninfo` l ON l.id = p.workPalce        WHERE 1=1        <if test="typeIds!=null">            <if test="typeIds.size>0">                and p.workTypeID in                <foreach item="items" index="index" collection="typeIds" open="(" separator="," close=")">                    #{items}                </foreach>            </if>        </if>        <if test="positionIds!=null">            <if test="positionIds.size>0">                and p.id NOT IN                <foreach item="items" index="index" collection="positionIds" open="(" separator="," close=")">                    #{items}                </foreach>            </if>        </if>    </select>    <select id="findListNoContainType" resultType="Position" parameterType="java.util.Map">        SELECT p.* FROM `position` p LEFT JOIN `localtioninfo` l ON l.id = p.workPalce        WHERE 1=1        <if test="placeIds!=null">            <if test="placeIds.size>0">                and l.cityID in                <foreach item="items" index="index" collection="placeIds" open="(" separator="," close=")">                    #{items}                </foreach>            </if>        </if>        <if test="positionIds!=null">            <if test="positionIds.size>0">                and p.id NOT IN                <foreach item="items" index="index" collection="positionIds" open="(" separator="," close=")">                    #{items}                </foreach>            </if>        </if>    </select>    <!--级联查询-->    <sql id="infomationList">        i.id as 'id',        i.version as 'version',i.qRCode as 'qRCode',i.userID as 'userID',i.workNumber as 'workNumber',i.brief as 'brief',i.identityType as 'identityType',i.authentication as 'authentication',i.payPassword as 'payPassword',        qrCodeObj.id as 'qrCodeObj.id',        qrCodeObj.version as 'qrCodeObj.version',qrCodeObj.datestr as 'qrCodeObj.datestr',qrCodeObj.path as 'qrCodeObj.path',qrCodeObj.name as 'qrCodeObj.name',qrCodeObj.title as 'qrCodeObj.title',qrCodeObj.type as 'qrCodeObj.type',qrCodeObj.refID as 'qrCodeObj.refID'    </sql>    <!--Attachment映射-->    <resultMap id="AttachmentMap" type="Attachment">        <id property="id" column="qrCodeObj.id" />        <result property="version" column="qrCodeObj.version" />        <result property="datestr" column="qrCodeObj.datestr" />        <result property="path" column="qrCodeObj.path" />        <result property="name" column="qrCodeObj.name" />        <result property="title" column="qrCodeObj.title" />        <result property="type" column="qrCodeObj.type" />        <result property="refID" column="qrCodeObj.refID" />    </resultMap>    <!--Information映射-->    <resultMap id="InformationMap" type="Information">        <id property="id" column="id" />        <result property="version" column="version" />        <result property="qRCode" column="qRCode" />        <result property="userID" column="userID" />        <result property="workNumber" column="workNumber" />        <result property="brief" column="brief" />        <result property="identityType" column="identityType" />        <result property="authentication" column="authentication" />        <result property="payPassword" column="payPassword" />        <association property="qrCodeObj"  javaType="Attachment" resultMap="AttachmentMap"/>    </resultMap>    <!--对象的多级映射 mapList mapPage mapOne-->    <select id="getInforWithQRCode" resultMap="InformationMap" >        select        <include refid="infomationList"/>        from  information i        left join attachment qrCodeObj on i.qRCode = qrCodeObj.id        WHERE i.userID = #{id} AND i.isDeleted = FALSE    </select>    <!--级联查询-->    <sql id="infordetailList">        i.id as 'id',        i.version as 'version',i.qRCode as 'qRCode',i.bgpID as 'bgpID',i.userID as 'userID',i.workNumber as 'workNumber',i.brief as 'brief',i.identityType as 'identityType',i.authentication as 'authentication',i.payPassword as 'payPassword',        bgp.id as 'bgp.id',        bgp.version as 'bgp.version',bgp.datestr as 'bgp.datestr',bgp.path as 'bgp.path',bgp.name as 'bgp.name',bgp.title as 'bgp.title',bgp.type as 'bgp.type',bgp.refID as 'bgp.refID'        ,weixin.headimgurl as 'weixin.headimgurl'    </sql>    <!--inforAttachment映射-->    <resultMap id="inforAttachmentMap" type="Attachment">        <id property="id" column="bgp.id" />        <result property="version" column="bgp.version" />        <result property="datestr" column="bgp.datestr" />        <result property="path" column="bgp.path" />        <result property="name" column="bgp.name" />        <result property="title" column="bgp.title" />        <result property="type" column="bgp.type" />        <result property="refID" column="bgp.refID" />    </resultMap>    <!--inforInformation映射-->    <resultMap id="inforInformationMap" type="Information">        <id property="id" column="id" />        <result property="version" column="version" />        <result property="qRCode" column="qRCode" />        <result property="bgpID" column="bgpID" />        <result property="userID" column="userID" />        <result property="workNumber" column="workNumber" />        <result property="brief" column="brief" />        <result property="identityType" column="identityType" />        <result property="authentication" column="authentication" />        <result property="weixinHeadImgUrl" column="weixin.headimgurl" />        <result property="payPassword" column="payPassword" />        <association property="bgp"  javaType="Attachment" resultMap="inforAttachmentMap"/>    </resultMap>    <!--对象的多级映射 mapList mapPage mapOne-->    <select id="informapOne" resultMap="inforInformationMap" >        select        <include refid="infordetailList"/>        from  information i        left join attachment bgp on i.bgpID = bgp.id        left join weixin weixin on weixin.userID = i.userID        <include refid="whereClause"/>        <if test="orderByClause!=null">${orderByClause}</if>    </select></mapper>