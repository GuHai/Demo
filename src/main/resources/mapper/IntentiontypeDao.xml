<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.IntentiontypeDao" ><!-- 查询字段 --><sql id="columnList" >	i.id,	 i.userID, i.htID, i.createTime, i.updateTime, i.version, i.isDeleted, i.createBy, i.updateBy</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  i.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and i.id = #{condition.id}	</if>	<if test="condition.userID != null" >and  i.userID = #{condition.userID}</if><if test="condition.htID != null" >and  i.htID = #{condition.htID}</if><if test="condition.createTime != null" >and  i.createTime = #{condition.createTime}</if><if test="condition.updateTime != null" >and  i.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  i.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  i.isDeleted = #{condition.isDeleted}</if><if test="condition.createBy != null" >and  i.createBy = #{condition.createBy}</if><if test="condition.updateBy != null" >and  i.updateBy = #{condition.updateBy}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and i.id = #{condition.id}	</if>													 			<if test="condition.userID != null" >and  UPPER(i.userID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.userID}),'%'))</if><if test="condition.htID != null" >and  UPPER(i.htID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.htID}),'%'))</if><if test="condition.createTime != null" >and  UPPER(i.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(i.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(i.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(i.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if><if test="condition.createBy != null" >and  UPPER(i.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(i.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into intentiontype (id,userID,htID,createTime,updateTime,version,isDeleted,createBy,updateBy)  values(#{id,jdbcType=VARCHAR},#{userID},#{htID},#{createTime},#{updateTime},#{version},#{isDeleted},#{createBy},#{updateBy})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update intentiontype set	<trim  suffixOverrides="," >	<if test="userID != null ">userID=#{userID},</if><if test="htID != null ">htID=#{htID},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="updateBy != null ">updateBy=#{updateBy},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from intentiontype where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="Intentiontype"  parameterType="String">	select <include refid="columnList" /> 	from intentiontype  i	where  i.id = #{id}  and i.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from intentiontype  i	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="Intentiontype" >	select 	<include refid="columnList"/>	from intentiontype i	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="Intentiontype" >	select 	<include refid="columnList"/>	from intentiontype i	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="Intentiontype" >	select	<include refid="columnList"/>	from intentiontype i	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="Intentiontype" >	select	<include refid="columnList"/>	from intentiontype i	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select i.${idsColumn}	from intentiontype i    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select i.${idsColumn}	from intentiontype i    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="Intentiontype" >     select    <include refid="columnList"/>     from intentiontype i    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select>	<!--级联查询-->	<sql id="detailList">		i.id as 'id',i.userID as 'userID',i.htID as 'htID',		huntingtype.id as 'huntingtype.id',huntingtype.name as 'huntingtype.name',huntingtype.HTFatCode as 'huntingtype.HTFatCode',huntingtype.state as 'huntingtype.state',huntingtype.codeGrade as 'huntingtype.codeGrade'	</sql>	<!--Huntingtype映射-->	<resultMap id="HuntingtypeMap" type="Huntingtype">		<id property="id" column="huntingtype.id" />		<result property="name" column="huntingtype.name" />		<result property="HTFatCode" column="huntingtype.HTFatCode" />		<result property="state" column="huntingtype.state" />		<result property="codeGrade" column="huntingtype.codeGrade" />	</resultMap>	<!--Intentiontype映射-->	<resultMap id="IntentiontypeMap" type="Intentiontype">		<id property="id" column="id" />		<result property="userID" column="userID" />		<result property="htID" column="htID" />		<association property="huntingtype"  javaType="Huntingtype" resultMap="HuntingtypeMap"/>	</resultMap>	<!--对象的多级映射-->	<select id="mapPage" resultMap="IntentiontypeMap" >		select		<include refid="detailList"/>		from  intentiontype i		left join huntingtype huntingtype on i.htID = huntingtype.id		where i.state = 0		<if test="orderByClause!=null">${orderByClause}</if>	</select>    <select id="getHuntGroupWithUserID" resultType="com.yskj.models.Intentiontype"  >        select h.id as 'htID' ,group_concat(i.userID) as 'id' from huntingtype  h left join intentiontype i on h.id = i.htID        <if test="condition.htID!=null">            where h.id in (${condition.htID})        </if>        group by h.ID        <if test="condition.htID==null">            union            select 'ALL' as 'htID' , group_concat(t.id )as 'id' from shiro_user t where  not exists(select  1 from intentiontype t1 where t1.userID = t.id)        </if>    </select>	<select id="findIntePersonPage" resultType="com.yskj.vo.IntePerson"  >		SELECT            u.id as 'id',			w.headimgurl as 'headimg',            concat( a.path , '/',a.datestr,'/',a.name) as 'localimg',			IFNULL(u.realName, u.nickName) AS 'name',			IFNULL(u.sex, 1) AS 'sex',			(				SELECT					h.`name`				FROM					intentiontype t left join huntingtype h on h.id = t.htID				WHERE					t.userID = u.id				LIMIT 0,				1			) AS 'inte'		FROM			shiro_user u left join weixin w on u.id = w.userID            left join attachment a on a.id  = u.infoHeadImg		WHERE            1=1		    <if test="condition.userID!=null">                and  u.id in (${condition.userID})            </if>	</select></mapper>