<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.RechargeDao" ><!-- 查询字段 --><sql id="columnList" >	r.id,	 r.voucherID, r.money, r.rechargeDate, r.orderNumber, r.userID, r.invoiceID, r.createBy, r.createTime, r.updateBy, r.updateTime, r.version, r.isDeleted</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  r.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and r.id = #{condition.id}	</if>	<if test="condition.voucherID != null" >and  r.voucherID = #{condition.voucherID}</if><if test="condition.money != null" >and  r.money = #{condition.money}</if><if test="condition.rechargeDate != null" >and  r.rechargeDate = #{condition.rechargeDate}</if><if test="condition.orderNumber != null" >and  r.orderNumber = #{condition.orderNumber}</if><if test="condition.userID != null" >and  r.userID = #{condition.userID}</if><if test="condition.invoiceID != null" >and  r.invoiceID = #{condition.invoiceID}</if><if test="condition.createBy != null" >and  r.createBy = #{condition.createBy}</if><if test="condition.createTime != null" >and  r.createTime = #{condition.createTime}</if><if test="condition.updateBy != null" >and  r.updateBy = #{condition.updateBy}</if><if test="condition.updateTime != null" >and  r.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  r.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  r.isDeleted = #{condition.isDeleted}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and r.id = #{condition.id}	</if>													 			<if test="condition.voucherID != null" >and  UPPER(r.voucherID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.voucherID}),'%'))</if><if test="condition.money != null" >and  UPPER(r.money) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.money}),'%'))</if><if test="condition.rechargeDate != null" >and  UPPER(r.rechargeDate) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.rechargeDate}),'%'))</if><if test="condition.orderNumber != null" >and  UPPER(r.orderNumber) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.orderNumber}),'%'))</if><if test="condition.userID != null" >and  UPPER(r.userID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.userID}),'%'))</if><if test="condition.invoiceID != null" >and  UPPER(r.invoiceID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.invoiceID}),'%'))</if><if test="condition.createBy != null" >and  UPPER(r.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.createTime != null" >and  UPPER(r.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(r.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(r.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(r.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(r.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into recharge (id,voucherID,money,rechargeDate,orderNumber,userID,invoiceID,createBy,createTime,updateBy,updateTime,version,isDeleted)  values(#{id,jdbcType=VARCHAR},#{voucherID},#{money},#{rechargeDate},#{orderNumber},#{userID},#{invoiceID},#{createBy},#{createTime},#{updateBy},#{updateTime},#{version},#{isDeleted})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update recharge set	<trim  suffixOverrides="," >	<if test="voucherID != null ">voucherID=#{voucherID},</if><if test="money != null ">money=#{money},</if><if test="rechargeDate != null ">rechargeDate=#{rechargeDate},</if><if test="orderNumber != null ">orderNumber=#{orderNumber},</if><if test="userID != null ">userID=#{userID},</if><if test="invoiceID != null ">invoiceID=#{invoiceID},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateBy != null ">updateBy=#{updateBy},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from recharge where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="Recharge"  parameterType="String">	select <include refid="columnList" /> 	from recharge  r	where  r.id = #{id}  and r.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from recharge  r	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="Recharge" >	select 	<include refid="columnList"/>	from recharge r	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="Recharge" >	select 	<include refid="columnList"/>	from recharge r	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="Recharge" >	select	<include refid="columnList"/>	from recharge r	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="Recharge" >	select	<include refid="columnList"/>	from recharge r	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select r.${idsColumn}	from recharge r    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select r.${idsColumn}	from recharge r    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="Recharge" >     select    <include refid="columnList"/>     from recharge r    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select>	<update id="updateRechargeList">		update recharge set invoiceID=#{condition.invoiceID} where 1=1		<if test="column!=null">			<if test="ids==null">				and 1=0			</if>			<if test="ids!=null">				<if test="ids.size>0">					and  ${column} in					<foreach item="items" index="index" collection="ids" open="(" separator="," close=")">						#{items}					</foreach>				</if>				<if test="ids.size==0">					and 1=0				</if>			</if>	</if>	</update>	<update id="callbackRecharge" >		UPDATE recharge set invoiceID=NULL where invoiceID = #{condition.invoiceID}	</update>	<!--级联查询-->	<sql id="rechargedetailList">		r.id as 'id',		r.version as 'version',r.voucherID as 'voucherID',r.money as 'money',r.rechargeDate as 'rechargeDate',r.orderNumber as 'orderNumber',r.userID as 'userID',r.invoiceID as 'invoiceID',r.createTime as 'createTime',		voucher.id as 'voucher.id',		voucher.version as 'voucher.version',voucher.type as 'voucher.type',voucher.money as 'voucher.money',voucher.remittanceName as 'voucher.remittanceName',voucher.remittanceBankCard as 'voucher.remittanceBankCard',voucher.status as 'voucher.status',voucher.userID as 'voucher.userID'	</sql>	<!--rechargeVoucher映射-->	<resultMap id="rechargeVoucherMap" type="Voucher">		<id property="id" column="voucher.id" />		<result property="version" column="voucher.version" />		<result property="type" column="voucher.type" />		<result property="money" column="voucher.money" />		<result property="remittanceName" column="voucher.remittanceName" />		<result property="remittanceBankCard" column="voucher.remittanceBankCard" />		<result property="status" column="voucher.status" />		<result property="userID" column="voucher.userID" />	</resultMap>	<!--rechargeRecharge映射-->	<resultMap id="rechargeRechargeMap" type="Recharge">		<id property="id" column="id" />		<result property="createTime" column="createTime" />		<result property="version" column="version" />		<result property="voucherID" column="voucherID" />		<result property="money" column="money" />		<result property="rechargeDate" column="rechargeDate" />		<result property="orderNumber" column="orderNumber" />		<result property="userID" column="userID" />		<result property="invoiceID" column="invoiceID" />		<association property="voucher"  javaType="Voucher" resultMap="rechargeVoucherMap"/>	</resultMap>	<!--对象的多级映射 mapList mapPage mapOne-->	<select id="getRechargeListByInvoiceID" resultMap="rechargeRechargeMap" >		select		<include refid="rechargedetailList"/>		from  recharge r		left join voucher voucher on r.voucherID = voucher.id		<include refid="whereClause"/>		<if test="orderByClause!=null">${orderByClause}</if>	</select>	<update id="updateCallbackRecharge">		UPDATE		recharge		SET		invoiceID = NULL		WHERE id IN		(SELECT temp.id FROM (SELECT		r1.`id`		FROM		recharge r1		WHERE r1.`invoiceID` IN		(SELECT		wxorder.`refID`		FROM		wxorder wxorder		WHERE wxorder.`type` = '07'		AND wxorder.`userID` = #{userID}		AND wxorder.`status` &lt; 3)		)temp)	</update></mapper>