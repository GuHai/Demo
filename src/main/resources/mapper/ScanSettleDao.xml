<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.ScanSettleDao" ><!-- 查询字段 --><sql id="columnList" >	s.id,s.positionID,s.isImport,	 s.title, s.dailySalary, s.code, s.status, s.days, s.createBy, s.createTime, s.updateBy, s.updateTime, s.version, s.isDeleted,s.open,s.isEdit</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  s.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and s.id = #{condition.id}	</if>	<if test="condition.title != null" >and  s.title = #{condition.title}</if><if test="condition.dailySalary != null" >and  s.dailySalary = #{condition.dailySalary}</if><if test="condition.code != null" >and  s.code = #{condition.code}</if><if test="condition.status != null" >and  s.status = #{condition.status}</if><if test="condition.days != null" >and  s.days = #{condition.days}</if><if test="condition.createBy != null" >and  s.createBy = #{condition.createBy}</if><if test="condition.createTime != null" >and  s.createTime = #{condition.createTime}</if><if test="condition.updateBy != null" >and  s.updateBy = #{condition.updateBy}</if><if test="condition.updateTime != null" >and  s.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  s.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  s.isDeleted = #{condition.isDeleted}</if><if test="condition.open != null" >and  s.open = #{condition.open}</if><if test="condition.isImport != null" >and  s.isImport = #{condition.isImport}</if><if test="condition.isEdit != null" >and  s.isEdit = #{condition.isEdit}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and s.id = #{condition.id}	</if>	<if test="condition.title != null" >and  UPPER(s.title) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.title}),'%'))</if><if test="condition.dailySalary != null" >and  UPPER(s.dailySalary) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.dailySalary}),'%'))</if><if test="condition.code != null" >and  UPPER(s.code) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.code}),'%'))</if><if test="condition.status != null" >and  UPPER(s.status) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.status}),'%'))</if><if test="condition.days != null" >and  UPPER(s.days) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.days}),'%'))</if><if test="condition.createBy != null" >and  UPPER(s.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.createTime != null" >and  UPPER(s.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(s.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(s.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(s.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(s.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if><if test="condition.open != null" >and  UPPER(s.open) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.open}),'%'))</if><if test="condition.isEdit != null" >and  UPPER(s.isEdit) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isEdit}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into scansettle (id,isImport,positionID,title,dailySalary,code,status,days,createBy,createTime,updateBy,updateTime,version,isDeleted,open,isEdit)  values(#{id,jdbcType=VARCHAR},#{isImport},#{positionID},#{title},#{dailySalary},#{code},#{status},#{days},#{createBy},#{createTime},#{updateBy},#{updateTime},#{version},#{isDeleted},#{open},#{isEdit})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update scansettle set	<trim  suffixOverrides="," >	<if test="title != null ">title=#{title},</if><if test="dailySalary != null ">dailySalary=#{dailySalary},</if><if test="code != null ">code=#{code},</if><if test="status != null ">status=#{status},</if><if test="days != null ">days=#{days},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateBy != null ">updateBy=#{updateBy},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if><if test="open != null ">open=#{open},</if><if test="isEdit != null ">isEdit=#{isEdit},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from scansettle where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="ScanSettle"  parameterType="String">	select <include refid="columnList" />	from scansettle  s	where  s.id = #{id}  and s.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1)	from scansettle  s	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="ScanSettle" >	select	<include refid="columnList"/>	from scansettle s	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="ScanSettle" >	select	<include refid="columnList"/>	from scansettle s	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="ScanSettle" >	select	<include refid="columnList"/>	from scansettle s	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="ScanSettle" >	select	<include refid="columnList"/>	from scansettle s	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select s.${idsColumn}	from scansettle s    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select s.${idsColumn}	from scansettle s    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="ScanSettle" >     select    <include refid="columnList"/>     from scansettle s    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select>	<!--级联查询-->	<sql id="scanSettledetailList">		s.id as 'id',s.positionID as 'positionID',		s.version as 'version',s.title as 'title',s.dailySalary as 'dailySalary',s.code as 'code',s.status as 'status',s.days as 'days',s.open as 'open',s.updateTime as 'updateTime',s.isEdit as 'isEdit',		scanSettleMemberList.id as 'scanSettleMemberList.id',    	scanSettleMemberList.createBy AS 'scanSettleMemberList.createBy',IFNULL(scanSettleMemberList.sxf,0) as 'scanSettleMemberList.sxf',		scanSettleMemberList.version as 'scanSettleMemberList.version',scanSettleMemberList.scanID as 'scanSettleMemberList.scanID',scanSettleMemberList.salary as 'scanSettleMemberList.salary',scanSettleMemberList.status as 'scanSettleMemberList.status',scanSettleMemberList.days as 'scanSettleMemberList.days',scanSettleMemberList.isRush as 'scanSettleMemberList.isRush',		user.id as 'scanSettleMemberList.user.id',		user.version as 'scanSettleMemberList.user.version',user.accountNo as 'scanSettleMemberList.user.accountNo',user.password as 'scanSettleMemberList.user.password',user.weChatNo as 'scanSettleMemberList.user.weChatNo',user.nickName as 'scanSettleMemberList.user.nickName',user.sex as 'scanSettleMemberList.user.sex',personalauthen.personPhoneNumber as 'scanSettleMemberList.user.phoneNumber',user.lastLoginTime as 'scanSettleMemberList.user.lastLoginTime',user.loginTime as 'scanSettleMemberList.user.loginTime',user.status as 'scanSettleMemberList.user.status',user.realName as 'scanSettleMemberList.user.realName',user.IDCard as 'scanSettleMemberList.user.IDCard',user.infoHeadImg as 'scanSettleMemberList.user.infoHeadImg',user.locked as 'scanSettleMemberList.user.locked',user.userSig as 'scanSettleMemberList.user.userSig',user.birthday as 'scanSettleMemberList.user.birthday',user.pinyin as 'scanSettleMemberList.user.pinyin',		attachment.id as 'scanSettleMemberList.user.attachment.id',		attachment.version as 'scanSettleMemberList.user.attachment.version',attachment.datestr as 'scanSettleMemberList.user.attachment.datestr',attachment.path as 'scanSettleMemberList.user.attachment.path',attachment.name as 'scanSettleMemberList.user.attachment.name',attachment.title as 'scanSettleMemberList.user.attachment.title',attachment.type as 'scanSettleMemberList.user.attachment.type',attachment.refID as 'scanSettleMemberList.user.attachment.refID',		weixin.id as 'scanSettleMemberList.user.weixin.id',		weixin.version as 'scanSettleMemberList.user.weixin.version',weixin.nickname as 'scanSettleMemberList.user.weixin.nickname',weixin.sex as 'scanSettleMemberList.user.weixin.sex',weixin.province as 'scanSettleMemberList.user.weixin.province',weixin.city as 'scanSettleMemberList.user.weixin.city',weixin.country as 'scanSettleMemberList.user.weixin.country',weixin.headimgurl as 'scanSettleMemberList.user.weixin.headimgurl',weixin.privilegeStr as 'scanSettleMemberList.user.weixin.privilegeStr',weixin.unionid as 'scanSettleMemberList.user.weixin.unionid',weixin.openid as 'scanSettleMemberList.user.weixin.openid',weixin.userID as 'scanSettleMemberList.user.weixin.userID',weixin.refreshToken as 'scanSettleMemberList.user.weixin.refreshToken',weixin.accessToken as 'scanSettleMemberList.user.weixin.accessToken',weixin.refreshTokenTime as 'scanSettleMemberList.user.weixin.refreshTokenTime',weixin.accessTokenTime as 'scanSettleMemberList.user.weixin.accessTokenTime',weixin.ticket as 'scanSettleMemberList.user.weixin.ticket',weixin.ticketTime as 'scanSettleMemberList.user.weixin.ticketTime'		,salaryImportMap.id as 'salaryImportMap.id',		salaryImportMap.version as 'salaryImportMap.version',salaryImportMap.realName as 'salaryImportMap.realName',salaryImportMap.personIDCard as 'salaryImportMap.personIDCard',salaryImportMap.personPhoneNumber as 'salaryImportMap.personPhoneNumber',salaryImportMap.salary as 'salaryImportMap.salary',salaryImportMap.company as 'salaryImportMap.company',salaryImportMap.scanID as 'salaryImportMap.scanID'	</sql>	<resultMap id="SalaryImportMap" type="SalaryImport">		<id property="id" column="salaryImportMap.id" />		<result property="version" column="salaryImportMap.version" />		<result property="realName" column="salaryImportMap.realName" />		<result property="personIDCard" column="salaryImportMap.personIDCard" />		<result property="personPhoneNumber" column="salaryImportMap.personPhoneNumber" />		<result property="salary" column="salaryImportMap.salary" />		<result property="company" column="salaryImportMap.company" />		<result property="scanID" column="salaryImportMap.scanID" />	</resultMap>	<!--scanSettleAttachment映射-->	<resultMap id="scanSettleAttachmentMap" type="Attachment">		<id property="id" column="scanSettleMemberList.user.attachment.id" />		<result property="version" column="scanSettleMemberList.user.attachment.version" />		<result property="datestr" column="scanSettleMemberList.user.attachment.datestr" />		<result property="path" column="scanSettleMemberList.user.attachment.path" />		<result property="name" column="scanSettleMemberList.user.attachment.name" />		<result property="title" column="scanSettleMemberList.user.attachment.title" />		<result property="type" column="scanSettleMemberList.user.attachment.type" />		<result property="refID" column="scanSettleMemberList.user.attachment.refID" />	</resultMap>	<!--scanSettleWeixin映射-->	<resultMap id="scanSettleWeixinMap" type="Weixin">		<id property="id" column="scanSettleMemberList.user.weixin.id" />		<result property="version" column="scanSettleMemberList.user.weixin.version" />		<result property="nickname" column="scanSettleMemberList.user.weixin.nickname" />		<result property="sex" column="scanSettleMemberList.user.weixin.sex" />		<result property="province" column="scanSettleMemberList.user.weixin.province" />		<result property="city" column="scanSettleMemberList.user.weixin.city" />		<result property="country" column="scanSettleMemberList.user.weixin.country" />		<result property="headimgurl" column="scanSettleMemberList.user.weixin.headimgurl" />		<result property="privilegeStr" column="scanSettleMemberList.user.weixin.privilegeStr" />		<result property="unionid" column="scanSettleMemberList.user.weixin.unionid" />		<result property="openid" column="scanSettleMemberList.user.weixin.openid" />		<result property="userID" column="scanSettleMemberList.user.weixin.userID" />		<result property="refreshToken" column="scanSettleMemberList.user.weixin.refreshToken" />		<result property="accessToken" column="scanSettleMemberList.user.weixin.accessToken" />		<result property="refreshTokenTime" column="scanSettleMemberList.user.weixin.refreshTokenTime" />		<result property="accessTokenTime" column="scanSettleMemberList.user.weixin.accessTokenTime" />		<result property="ticket" column="scanSettleMemberList.user.weixin.ticket" />		<result property="ticketTime" column="scanSettleMemberList.user.weixin.ticketTime" />	</resultMap>	<!--scanSettleUser映射-->	<resultMap id="scanSettleUserMap" type="User">		<id property="id" column="scanSettleMemberList.user.id" />		<result property="version" column="scanSettleMemberList.user.version" />		<result property="accountNo" column="scanSettleMemberList.user.accountNo" />		<result property="password" column="scanSettleMemberList.user.password" />		<result property="weChatNo" column="scanSettleMemberList.user.weChatNo" />		<result property="nickName" column="scanSettleMemberList.user.nickName" />		<result property="sex" column="scanSettleMemberList.user.sex" />		<result property="phoneNumber" column="scanSettleMemberList.user.phoneNumber" />		<result property="lastLoginTime" column="scanSettleMemberList.user.lastLoginTime" />		<result property="loginTime" column="scanSettleMemberList.user.loginTime" />		<result property="status" column="scanSettleMemberList.user.status" />		<result property="realName" column="scanSettleMemberList.user.realName" />		<result property="IDCard" column="scanSettleMemberList.user.IDCard" />		<result property="infoHeadImg" column="scanSettleMemberList.user.infoHeadImg" />		<result property="locked" column="scanSettleMemberList.user.locked" />		<result property="userSig" column="scanSettleMemberList.user.userSig" />		<result property="birthday" column="scanSettleMemberList.user.birthday" />		<result property="pinyin" column="scanSettleMemberList.user.pinyin" />		<association property="attachment"  javaType="Attachment" resultMap="scanSettleAttachmentMap"/>		<association property="weixin"  javaType="Weixin" resultMap="scanSettleWeixinMap"/>	</resultMap>	<!--scanSettleScanSettleMember映射-->	<resultMap id="scanSettleScanSettleMemberMap" type="ScanSettleMember">		<id property="id" column="scanSettleMemberList.id" />		<result property="version" column="scanSettleMemberList.version" />		<result property="createBy" column="scanSettleMemberList.createBy" />		<result property="scanID" column="scanSettleMemberList.scanID" />		<result property="salary" column="scanSettleMemberList.salary" />		<result property="status" column="scanSettleMemberList.status" />		<result property="days" column="scanSettleMemberList.days" />		<result property="isRush" column="scanSettleMemberList.isRush" />		<result property="sxf" column="scanSettleMemberList.sxf" />		<association property="user"  javaType="User" resultMap="scanSettleUserMap"/>		<association property="salaryImport"  javaType="SalaryImport" resultMap="SalaryImportMap"/>	</resultMap>	<!--scanSettleScanSettle映射-->	<resultMap id="scanSettleScanSettleMap" type="ScanSettle">		<id property="id" column="id" />		<result property="version" column="version" />		<result property="title" column="title" />		<result property="dailySalary" column="dailySalary" />		<result property="code" column="code" />		<result property="status" column="status" />		<result property="days" column="days" />		<result property="open" column="open" />		<result property="positionID" column="positionID" />		<result property="updateTime" column="updateTime" />		<result property="isEdit" column="isEdit" />		<collection property="scanSettleMemberList" resultMap="scanSettleScanSettleMemberMap" />	</resultMap>	<!--对象的多级映射 mapList mapPage mapOne-->	<select id="scanSettlemap" resultMap="scanSettleScanSettleMap" >		select		<include refid="scanSettledetailList"/>		from  scansettle s		left join scansettlemember scanSettleMemberList on s.id = scanSettleMemberList.scanID		<if test="condition.scanSettleMember==null">			and (scanSettleMemberList.status = FALSE or scanSettleMemberList.status is NULL or scanSettleMemberList.status = -1 )		</if>		left join shiro_user user on scanSettleMemberList.createBy = user.id		left join personalauthen personalauthen on personalauthen.userID = user.id		left join attachment attachment on user.infoHeadImg = attachment.id		left join weixin weixin on user.id = weixin.userID		left join salaryimport salaryImportMap on salaryImportMap.scanID = scanSettleMemberList.id		<include refid="whereClause"/>		<if test="condition.scanSettleMember!=null">			and scanSettleMemberList.status = TRUE		</if>		<if test="condition.id == null" >			<if test="condition.all == null" >				and s.id in(				select id from				(				select id from scansettle				where createBy = #{condition.createBy}				order by updateTime desc limit 0,10				) as temp				)			</if>			order by s.updateTime DESC		</if>		<if test="condition.id != null" >			order by scanSettleMemberList.updateTime DESC		</if>	</select>	<select id="getMyHistoryPayInfo" resultType="java.util.Map" parameterType="java.lang.String">		SELECT            scansettle.title,            date(scansettle.createTime) as time ,            scansettle.`id`,            IFNULL(temp1.count,0) AS 'count',            IFNULL(temp2.sum,0) AS 'sum',            temp2.wait        FROM            scansettle scansettle            LEFT JOIN            (            SELECT  COUNT(*) AS 'count',scansettlemember.`scanID` FROM scansettlemember GROUP BY scansettlemember.`scanID`            ) temp1 ON temp1.scanID = scansettle.`id`            LEFT JOIN            (            SELECT  SUM(scansettlemember.`salary`) AS 'sum',	count(scansettlemember.id)-sum(if(scansettlemember.STATUS =1,1,0) ) as 'wait', scansettlemember.`scanID` FROM scansettlemember GROUP BY scansettlemember.`scanID`            ) temp2 ON temp2.scanID = scansettle.`id`        WHERE scansettle.createBy = #{userID} AND scansettle.isDeleted = FALSE order by scansettle.createTime DESC	</select>	<select id="lastImportRecord" resultType="com.yskj.models.excel.Salary" >	SELECT		sl.id,		temp.title,		temp.id as 'scanID',		sl.salary,		sl.sxf,		p.realName,		p.personIDCard,		p.personPhoneNumber,		sl.version,		if(p.id is null ,0,1) as status	FROM		(select * from scansettle t where t.isImport = 1 AND t.createBy = #{condition.userID} order by t.createTime desc limit 0,1 )temp	LEFT JOIN scansettlemember sl ON temp.id = sl.scanID and (sl.status = FALSE or sl.status is NULL or sl.status = -1 )	LEFT JOIN personalauthen p ON p.userID = sl.createBy HAVING count(sl.id)>0	</select>	<select id="toPayAgain" resultType="com.yskj.models.excel.Salary" >		SELECT		sl.id,		temp.title,		temp.id as 'scanID',		sl.salary,		sl.sxf,		p.realName,		p.personIDCard,		p.personPhoneNumber,		sl.version,		if(p.id is null ,0,1) as status		FROM		scansettle temp		LEFT JOIN scansettlemember sl ON temp.id = sl.scanID and (sl.status = FALSE or sl.status is NULL or sl.status = -1 )		LEFT JOIN personalauthen p ON p.userID = sl.createBy		where temp.id = #{condition.scanID} HAVING count(sl.id)>0	</select>	<select id="toPayRecord" resultType="com.yskj.models.excel.Salary" >		SELECT		s.title,		s.id as 'scanID',		sl.id,		sl.salary,		sl.sxf,		IFNULL(si.realName,p.realName) as realName,		IFNULL(si.personIDCard,p.personIDCard) as personIDCard,		IFNULL(si.personPhoneNumber,p.personPhoneNumber) as personPhoneNumber,		sl.version,		if(sl.createBy is null ,0,1) as status		from scansettlemember sl		left join salaryimport si on si.scanID = sl.id		left join personalauthen p on p.userID = sl.createBy		left join		(select * from scansettle t where 1=1		 	<if test="condition.userID!=null">				AND  t.isImport = 1				AND t.createBy = #{condition.userID}			</if>			<if test="condition.scanID!=null">				AND t.id = #{condition.scanID}			</if>			order by t.createTime desc limit 0,1		 ) s on s.id = sl.scanID		where s.id = sl.scanID		AND (sl.status = FALSE or sl.status is NULL or sl.status = -1 )		order by si.sort	</select></mapper>