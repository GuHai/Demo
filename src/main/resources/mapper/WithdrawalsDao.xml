<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.WithdrawalsDao" ><!-- 查询字段 --><sql id="columnList" >	w.id,	 w.settlementOrderNumber, w.price, w.remarks, w.settlementState, w.presentParty, w.auditor, w.reviewNotes, w.launchTime, w.lendingTime, w.auditTime, w.releaseTime, w.thirdState, w.thirdOrderNumber, w.errorsDesc,w.receivableAccount ,w.createTime, w.updateTime, w.version, w.isDeleted, w.createBy, w.updateBy</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  w.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and w.id = #{condition.id}	</if>	<if test="condition.settlementOrderNumber != null" >and  w.settlementOrderNumber = #{condition.settlementOrderNumber}</if><if test="condition.price != null" >and  w.price = #{condition.price}</if><if test="condition.remarks != null" >and  w.remarks = #{condition.remarks}</if><if test="condition.settlementState != null" >and  w.settlementState = #{condition.settlementState}</if><if test="condition.presentParty != null" >and  w.presentParty = #{condition.presentParty}</if><if test="condition.auditor != null" >and  w.auditor = #{condition.auditor}</if><if test="condition.reviewNotes != null" >and  w.reviewNotes = #{condition.reviewNotes}</if><if test="condition.launchTime != null" >and  w.launchTime = #{condition.launchTime}</if><if test="condition.lendingTime != null" >and  w.lendingTime = #{condition.lendingTime}</if><if test="condition.auditTime != null" >and  w.auditTime = #{condition.auditTime}</if><if test="condition.releaseTime != null" >and  w.releaseTime = #{condition.releaseTime}</if><if test="condition.thirdState != null" >and  w.thirdState = #{condition.thirdState}</if><if test="condition.thirdOrderNumber != null" >and  w.thirdOrderNumber = #{condition.thirdOrderNumber}</if><if test="condition.errorsDesc != null" >and  w.errorsDesc = #{condition.errorsDesc}</if><if test="condition.receivableAccount != null" >and  w.receivableAccount = #{condition.receivableAccount}</if><if test="condition.createTime != null" >and  w.createTime = #{condition.createTime}</if><if test="condition.updateTime != null" >and  w.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  w.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  w.isDeleted = #{condition.isDeleted}</if><if test="condition.createBy != null" >and  w.createBy = #{condition.createBy}</if><if test="condition.updateBy != null" >and  w.updateBy = #{condition.updateBy}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and w.id = #{condition.id}	</if>													 			<if test="condition.settlementOrderNumber != null" >and  UPPER(w.settlementOrderNumber) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.settlementOrderNumber}),'%'))</if><if test="condition.price != null" >and  UPPER(w.price) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.price}),'%'))</if><if test="condition.remarks != null" >and  UPPER(w.remarks) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.remarks}),'%'))</if><if test="condition.settlementState != null" >and  UPPER(w.settlementState) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.settlementState}),'%'))</if><if test="condition.presentParty != null" >and  UPPER(w.presentParty) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.presentParty}),'%'))</if><if test="condition.auditor != null" >and  UPPER(w.auditor) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.auditor}),'%'))</if><if test="condition.reviewNotes != null" >and  UPPER(w.reviewNotes) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.reviewNotes}),'%'))</if><if test="condition.launchTime != null" >and  UPPER(w.launchTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.launchTime}),'%'))</if><if test="condition.lendingTime != null" >and  UPPER(w.lendingTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.lendingTime}),'%'))</if><if test="condition.auditTime != null" >and  UPPER(w.auditTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.auditTime}),'%'))</if><if test="condition.releaseTime != null" >and  UPPER(w.releaseTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.releaseTime}),'%'))</if><if test="condition.thirdState != null" >and  UPPER(w.thirdState) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.thirdState}),'%'))</if><if test="condition.thirdOrderNumber != null" >and  UPPER(w.thirdOrderNumber) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.thirdOrderNumber}),'%'))</if><if test="condition.errorsDesc != null" >and  UPPER(w.errorsDesc) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.errorsDesc}),'%'))</if><if test="condition.receivableAccount != null" >and  UPPER(w.receivableAccount) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.receivableAccount}),'%'))</if><if test="condition.createTime != null" >and  UPPER(w.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(w.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(w.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(w.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if><if test="condition.createBy != null" >and  UPPER(w.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(w.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into withdrawals (id,settlementOrderNumber,price,remarks,settlementState,presentParty,auditor,reviewNotes,launchTime,lendingTime,auditTime,releaseTime,thirdState,thirdOrderNumber,receivableAccount ,errorsDesc,createTime,updateTime,version,isDeleted,createBy,updateBy)  values(#{id,jdbcType=VARCHAR},#{settlementOrderNumber},#{price},#{remarks},#{settlementState},#{presentParty},#{auditor},#{reviewNotes},#{launchTime},#{lendingTime},#{auditTime},#{releaseTime},#{thirdState},#{thirdOrderNumber},#{receivableAccount},#{errorsDesc},#{createTime},#{updateTime},#{version},#{isDeleted},#{createBy},#{updateBy})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update withdrawals set	<trim  suffixOverrides="," >	<if test="settlementOrderNumber != null ">settlementOrderNumber=#{settlementOrderNumber},</if><if test="price != null ">price=#{price},</if><if test="remarks != null ">remarks=#{remarks},</if><if test="settlementState != null ">settlementState=#{settlementState},</if><if test="presentParty != null ">presentParty=#{presentParty},</if><if test="auditor != null ">auditor=#{auditor},</if><if test="reviewNotes != null ">reviewNotes=#{reviewNotes},</if><if test="launchTime != null ">launchTime=#{launchTime},</if><if test="lendingTime != null ">lendingTime=#{lendingTime},</if><if test="auditTime != null ">auditTime=#{auditTime},</if><if test="releaseTime != null ">releaseTime=#{releaseTime},</if><if test="thirdState != null ">thirdState=#{thirdState},</if><if test="thirdOrderNumber != null ">thirdOrderNumber=#{thirdOrderNumber},</if><if test="errorsDesc != null ">errorsDesc=#{errorsDesc},</if><if test="receivableAccount != null ">receivableAccount=#{receivableAccount},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="updateBy != null ">updateBy=#{updateBy},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from withdrawals where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="Withdrawals"  parameterType="String">	select <include refid="columnList" /> 	from withdrawals  w	where  w.id = #{id}  and w.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from withdrawals  w	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="Withdrawals" >	select 	<include refid="columnList"/>	from withdrawals w	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="Withdrawals" >	select 	<include refid="columnList"/>	from withdrawals w	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="Withdrawals" >	select	<include refid="columnList"/>	from withdrawals w	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="Withdrawals" >	select	<include refid="columnList"/>	from withdrawals w	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select w.${idsColumn}	from withdrawals w    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select w.${idsColumn}	from withdrawals w    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="Withdrawals" >     select    <include refid="columnList"/>     from withdrawals w    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select>	<select id="getPriceSum" resultType="java.lang.Double" parameterType="java.lang.String">		SELECT SUM(price) FROM withdrawals WHERE presentParty = #{id} AND settlementState = 2	</select>	<select id="getReturnBond" resultType="java.lang.Double" parameterType="java.lang.String">		SELECT SUM(price) FROM withdrawals WHERE presentParty = #{id} AND settlementState = 3	</select>	<select id="getSurplusMoney" resultType="java.lang.Double" parameterType="java.lang.String">		SELECT SUM(price) FROM			withdrawals withdrawals		WHERE DATE(NOW()) = DATE(withdrawals.`createTime`)			AND withdrawals.`createBy` = #{userID}			AND withdrawals.`settlementState` IN (1,2)	</select></mapper>