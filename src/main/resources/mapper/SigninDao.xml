<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.SigninDao" ><!-- 查询字段 --><sql id="columnList" >	s.id,s.mark,s.signBack,s.signBackAddr,	 s.userID, s.signAddress, s.positionID, s.signTime, s.state, s.confirmationTime, s.createTime, s.updateTime, s.version, s.isDeleted, s.createBy, s.updateBy, s.signinType, s.attachmentId</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  s.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and s.id = #{condition.id}	</if>	<if test="condition.userID != null" >and  s.userID = #{condition.userID}</if><if test="condition.signAddress != null" >and  s.signAddress = #{condition.signAddress}</if><if test="condition.positionID != null" >and  s.positionID = #{condition.positionID}</if><if test="condition.signTime != null" >and  DATE(s.signTime) = DATE(#{condition.signTime})</if><if test="condition.state != null" >and  s.state = #{condition.state}</if><if test="condition.confirmationTime != null" >and  s.confirmationTime = #{condition.confirmationTime}</if><if test="condition.createTime != null" >and  s.createTime = #{condition.createTime}</if><if test="condition.updateTime != null" >and  s.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  s.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  s.isDeleted = #{condition.isDeleted}</if><if test="condition.createBy != null" >and  s.createBy = #{condition.createBy}</if><if test="condition.updateBy != null" >and  s.updateBy = #{condition.updateBy}</if><if test="condition.signinType != null" >and  s.signinType = #{condition.signinType}</if><if test="condition.attachmentId != null" >and  s.attachmentId = #{condition.attachmentId}</if>	<if test="condition.signBack != null" >and  s.signBack = #{condition.signBack}</if>	<if test="condition.signBackAddr != null" >and  s.signBackAddr = #{condition.signBackAddr}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and s.id = #{condition.id}	</if>													 			<if test="condition.userID != null" >and  UPPER(s.userID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.userID}),'%'))</if><if test="condition.signAddress != null" >and  UPPER(s.signAddress) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.signAddress}),'%'))</if><if test="condition.positionID != null" >and  UPPER(s.positionID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.positionID}),'%'))</if><if test="condition.signTime != null" >and  UPPER(s.signTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.signTime}),'%'))</if><if test="condition.state != null" >and  UPPER(s.state) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.state}),'%'))</if><if test="condition.confirmationTime != null" >and  UPPER(s.confirmationTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.confirmationTime}),'%'))</if><if test="condition.createTime != null" >and  UPPER(s.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(s.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(s.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(s.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if><if test="condition.createBy != null" >and  UPPER(s.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(s.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if><if test="condition.signinType != null" >and  UPPER(s.signinType) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.signinType}),'%'))</if><if test="condition.attachmentId != null" >and  UPPER(s.attachmentId) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.attachmentId}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into signin (id,mark,userID,signAddress,positionID,signTime,state,confirmationTime,createTime,updateTime,version,isDeleted,createBy,updateBy,signinType,attachmentId)  values(#{id,jdbcType=VARCHAR},#{mark},#{userID},#{signAddress},#{positionID},#{signTime},#{state},#{confirmationTime},#{createTime},#{updateTime},#{version},#{isDeleted},#{createBy},#{updateBy},#{signinType},#{attachmentId})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update signin set	<trim  suffixOverrides="," >	<if test="userID != null ">userID=#{userID},</if><if test="signAddress != null ">signAddress=#{signAddress},</if><if test="positionID != null ">positionID=#{positionID},</if><if test="signTime != null ">signTime=#{signTime},</if><if test="state != null ">state=#{state},</if><if test="confirmationTime != null ">confirmationTime=#{confirmationTime},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="updateBy != null ">updateBy=#{updateBy},</if><if test="signinType != null ">signinType=#{signinType},</if><if test="attachmentId != null ">attachmentId=#{attachmentId},</if>		<if test="signBack != null ">signBack=#{signBack},</if>		<if test="signBackAddr != null ">signBackAddr=#{signBackAddr},</if>		<if test="backAttachment != null ">backAttachment=#{backAttachment},</if>		<if test="mark != null ">mark=#{mark},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from signin where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="Signin"  parameterType="String">	select <include refid="columnList" /> 	from signin  s	where  s.id = #{id}  and s.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from signin  s	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="Signin" >	select 	<include refid="columnList"/>	from signin s	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="Signin" >	select 	<include refid="columnList"/>	from signin s	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="Signin" >	select	<include refid="columnList"/>	from signin s	<include refid="whereClause"/>	<if test="condition.settleDate!=null">		AND  DATE(s.signTime)  = DATE(#{condition.settleDate})	</if>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="Signin" >	select	<include refid="columnList"/>	from signin s	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select s.${idsColumn}	from signin s    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select s.${idsColumn}	from signin s    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="Signin" >     select    <include refid="columnList"/>     from signin s    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select>	<!--级联查询-->	<sql id="detailList">		b.id as 'id',		b.version as 'version',b.positionID as 'positionID',b.resumeID as 'resumeID',b.state as 'state',b.signUp as 'signUp',b.interview as 'interview',b.train as 'train',b.admission as 'admission',b.work as 'work',b.settlement as 'settlement',b.endWork as 'endWork',b.workDate as 'workDate',		resume.id as 'resume.id',		resume.version as 'resume.version',resume.resumeTitle as 'resume.resumeTitle',resume.resumeHeadImg as 'resume.resumeHeadImg',resume.resumeName as 'resume.resumeName',resume.IDCard as 'resume.IDCard',resume.sex as 'resume.sex',resume.marriage as 'resume.marriage',resume.phoneNumber as 'resume.phoneNumber',resume.email as 'resume.email',resume.residence as 'resume.residence',resume.evaluation as 'resume.evaluation',resume.userID as 'resume.userID',resume.isDefault as 'resume.isDefault',resume.state as 'resume.state',resume.height as 'resume.height',resume.weight as 'resume.weight',		educationalList.id as 'resume.educationalList.id',		educationalList.version as 'resume.educationalList.version',educationalList.schoolName as 'resume.educationalList.schoolName',educationalList.major as 'resume.educationalList.major',educationalList.education as 'resume.educationalList.education',educationalList.educationLeavl as 'resume.educationalList.educationLeavl',educationalList.timeSlot as 'resume.educationalList.timeSlot',educationalList.timeEnd as 'resume.educationalList.timeEnd',educationalList.association as 'resume.educationalList.association',educationalList.resumeID as 'resume.educationalList.resumeID',		user.id as 'resume.user.id',		user.version as 'resume.user.version',user.accountNo as 'resume.user.accountNo',user.password as 'resume.user.password',user.weChatNo as 'resume.user.weChatNo',user.nickName as 'resume.user.nickName',user.sex as 'resume.user.sex',user.phoneNumber as 'resume.user.phoneNumber',user.lastLoginTime as 'resume.user.lastLoginTime',user.loginTime as 'resume.user.loginTime',user.status as 'resume.user.status',user.realName as 'resume.user.realName',user.IDCard as 'resume.user.IDCard',user.infoHeadImg as 'resume.user.infoHeadImg',user.locked as 'resume.user.locked',user.userSig as 'resume.user.userSig',user.birthday as 'resume.user.birthday',		attachment.id as 'resume.user.attachment.id',		attachment.version as 'resume.user.attachment.version',attachment.datestr as 'resume.user.attachment.datestr',attachment.path as 'resume.user.attachment.path',attachment.name as 'resume.user.attachment.name',attachment.title as 'resume.user.attachment.title',attachment.type as 'resume.user.attachment.type',attachment.refID as 'resume.user.attachment.refID',		weixin.id as 'resume.user.weixin.id',		weixin.version as 'resume.user.weixin.version',weixin.nickname as 'resume.user.weixin.nickname',weixin.sex as 'resume.user.weixin.sex',weixin.province as 'resume.user.weixin.province',weixin.city as 'resume.user.weixin.city',weixin.country as 'resume.user.weixin.country',weixin.headimgurl as 'resume.user.weixin.headimgurl',weixin.unionid as 'resume.user.weixin.unionid',weixin.openid as 'resume.user.weixin.openid',weixin.userID as 'resume.user.weixin.userID',weixin.refreshToken as 'resume.user.weixin.refreshToken',weixin.accessToken as 'resume.user.weixin.accessToken',weixin.refreshTokenTime as 'resume.user.weixin.refreshTokenTime',weixin.accessTokenTime as 'resume.user.weixin.accessTokenTime',weixin.ticket as 'resume.user.weixin.ticket',weixin.ticketTime as 'resume.user.weixin.ticketTime'	</sql>	<!--Weixin映射-->	<resultMap id="WeixinMap" type="Weixin">		<id property="id" column="resume.user.weixin.id" />		<result property="version" column="resume.user.weixin.version" />		<result property="nickname" column="resume.user.weixin.nickname" />		<result property="sex" column="resume.user.weixin.sex" />		<result property="province" column="resume.user.weixin.province" />		<result property="city" column="resume.user.weixin.city" />		<result property="country" column="resume.user.weixin.country" />		<result property="headimgurl" column="resume.user.weixin.headimgurl" />		<result property="unionid" column="resume.user.weixin.unionid" />		<result property="openid" column="resume.user.weixin.openid" />		<result property="userID" column="resume.user.weixin.userID" />		<result property="refreshToken" column="resume.user.weixin.refreshToken" />		<result property="accessToken" column="resume.user.weixin.accessToken" />		<result property="refreshTokenTime" column="resume.user.weixin.refreshTokenTime" />		<result property="accessTokenTime" column="resume.user.weixin.accessTokenTime" />		<result property="ticket" column="resume.user.weixin.ticket" />		<result property="ticketTime" column="resume.user.weixin.ticketTime" />	</resultMap>	<!--Educational映射-->	<resultMap id="EducationalMap" type="Educational">		<id property="id" column="resume.educationalList.id" />		<result property="version" column="resume.educationalList.version" />		<result property="schoolName" column="resume.educationalList.schoolName" />		<result property="major" column="resume.educationalList.major" />		<result property="education" column="resume.educationalList.education" />		<result property="educationLeavl" column="resume.educationalList.educationLeavl" />		<result property="timeSlot" column="resume.educationalList.timeSlot" />		<result property="timeEnd" column="resume.educationalList.timeEnd" />		<result property="association" column="resume.educationalList.association" />		<result property="resumeID" column="resume.educationalList.resumeID" />	</resultMap>	<!--Attachment映射-->	<resultMap id="AttachmentMap" type="Attachment">		<id property="id" column="resume.user.attachment.id" />		<result property="version" column="resume.user.attachment.version" />		<result property="datestr" column="resume.user.attachment.datestr" />		<result property="path" column="resume.user.attachment.path" />		<result property="name" column="resume.user.attachment.name" />		<result property="title" column="resume.user.attachment.title" />		<result property="type" column="resume.user.attachment.type" />		<result property="refID" column="resume.user.attachment.refID" />	</resultMap>	<!--User映射-->	<resultMap id="UserMap" type="User">		<id property="id" column="resume.user.id" />		<result property="version" column="resume.user.version" />		<result property="accountNo" column="resume.user.accountNo" />		<result property="password" column="resume.user.password" />		<result property="signinCount" column="resume.user.signinCount" />		<result property="weChatNo" column="resume.user.weChatNo" />		<result property="nickName" column="resume.user.nickName" />		<result property="sex" column="resume.user.sex" />		<result property="phoneNumber" column="resume.user.phoneNumber" />		<result property="lastLoginTime" column="resume.user.lastLoginTime" />		<result property="loginTime" column="resume.user.loginTime" />		<result property="status" column="resume.user.status" />		<result property="realName" column="resume.user.realName" />		<result property="IDCard" column="resume.user.IDCard" />		<result property="infoHeadImg" column="resume.user.infoHeadImg" />		<result property="locked" column="resume.user.locked" />		<result property="userSig" column="resume.user.userSig" />		<result property="birthday" column="resume.user.birthday" />		<association property="attachment"  javaType="Attachment" resultMap="AttachmentMap"/>		<association property="weixin"  javaType="Weixin" resultMap="WeixinMap"/>	</resultMap>	<!--Resume映射-->	<resultMap id="ResumeMap" type="Resume">		<id property="id" column="resume.id" />		<result property="version" column="resume.version" />		<result property="resumeTitle" column="resume.resumeTitle" />		<result property="resumeHeadImg" column="resume.resumeHeadImg" />		<result property="resumeName" column="resume.resumeName" />		<result property="IDCard" column="resume.IDCard" />		<result property="sex" column="resume.sex" />		<result property="marriage" column="resume.marriage" />		<result property="phoneNumber" column="resume.phoneNumber" />		<result property="email" column="resume.email" />		<result property="residence" column="resume.residence" />		<result property="evaluation" column="resume.evaluation" />		<result property="userID" column="resume.userID" />		<result property="isDefault" column="resume.isDefault" />		<result property="state" column="resume.state" />		<result property="height" column="resume.height" />		<result property="weight" column="resume.weight" />		<association property="user"  javaType="User" resultMap="UserMap"/>		<collection property="educationalList" resultMap="EducationalMap" />	</resultMap>	<!--Beenrecruited映射-->	<resultMap id="BeenrecruitedMap" type="Beenrecruited">		<id property="id" column="id" />		<result property="version" column="version" />		<result property="positionID" column="positionID" />		<result property="resumeID" column="resumeID" />		<result property="state" column="state" />		<result property="signUp" column="signUp" />		<result property="interview" column="interview" />		<result property="train" column="train" />		<result property="admission" column="admission" />		<result property="work" column="work" />		<result property="settlement" column="settlement" />		<result property="endWork" column="endWork" />		<result property="workDate" column="workDate" />		<association property="resume"  javaType="Resume" resultMap="ResumeMap"/>	</resultMap>	<!--对象的多级映射 mapList mapPage mapOne-->	<select id="getSigninInfoOfTrainingOrWorking" resultMap="BeenrecruitedMap" >		select		<include refid="detailList"/>		from  beenrecruited b		left join resume resume on b.resumeID = resume.id		left join educational educationalList on resume.id = educationalList.resumeID		left join shiro_user user on resume.userID = user.id		left join attachment attachment on user.infoHeadImg = attachment.id		left join weixin weixin on user.id = weixin.userID		where 1 = 1		<if test="condition.positionID != null">and b.positionID = #{condition.positionID}</if>		<if test="condition.signinType != null">and b.state = #{condition.signinType}</if>		and b.dismiss IS NULL		order by educationalList.`educationLeavl` DESC	</select>	<!--Resume映射-->	<resultMap id="getDisquInfoResumeMap" type="Resume">		<id property="id" column="resume.id" />		<result property="version" column="resume.version" />		<result property="resumeTitle" column="resume.resumeTitle" />		<result property="resumeHeadImg" column="resume.resumeHeadImg" />		<result property="resumeName" column="resume.resumeName" />		<result property="IDCard" column="resume.IDCard" />		<result property="sex" column="resume.sex" />		<result property="marriage" column="resume.marriage" />		<result property="phoneNumber" column="resume.phoneNumber" />		<result property="email" column="resume.email" />		<result property="residence" column="resume.residence" />		<result property="evaluation" column="resume.evaluation" />		<result property="userID" column="resume.userID" />		<result property="isDefault" column="resume.isDefault" />		<result property="state" column="resume.state" />		<result property="height" column="resume.height" />		<result property="weight" column="resume.weight" />		<association property="user"  javaType="User" resultMap="UserMap"/>		<collection property="educationalList" resultMap="EducationalMap" />		<collection property="intentiontypeList" resultMap="IntentiontypeMap" />	</resultMap>	<!--Intentiontype映射-->	<resultMap id="IntentiontypeMap" type="Intentiontype">		<id property="id" column="intentiontypeList.id" />		<result property="version" column="intentiontypeList.version" />		<result property="userID" column="intentiontypeList.userID" />		<result property="htID" column="intentiontypeList.htID" />		<association property="huntingtype"  javaType="Huntingtype" resultMap="HuntingtypeMap"/>	</resultMap>	<!--Huntingtype映射-->	<resultMap id="HuntingtypeMap" type="Huntingtype">		<id property="id" column="intentiontypeList.huntingtype.id" />		<result property="version" column="intentiontypeList.huntingtype.version" />		<result property="name" column="intentiontypeList.huntingtype.name" />		<result property="HTFatCode" column="intentiontypeList.huntingtype.HTFatCode" />		<result property="state" column="intentiontypeList.huntingtype.state" />		<result property="codeGrade" column="intentiontypeList.huntingtype.codeGrade" />		<result property="isSelected" column="intentiontypeList.huntingtype.isSelected" />		<result property="refId" column="intentiontypeList.huntingtype.refId" />	</resultMap>	<!--Beenrecruited映射-->	<resultMap id="getDisquInfoBeenrecruitedMap" type="Beenrecruited">		<id property="id" column="id" />		<result property="version" column="version" />		<result property="positionID" column="positionID" />		<result property="resumeID" column="resumeID" />		<result property="state" column="state" />		<result property="signUp" column="signUp" />		<result property="interview" column="interview" />		<result property="train" column="train" />		<result property="admission" column="admission" />		<result property="work" column="work" />		<result property="settlement" column="settlement" />		<result property="endWork" column="endWork" />		<result property="workDate" column="workDate" />		<association property="resume"  javaType="Resume" resultMap="getDisquInfoResumeMap"/>	</resultMap>	<!--级联查询-->	<sql id="getDisquInfoList">		b.id as 'id',		b.version as 'version',b.positionID as 'positionID',b.resumeID as 'resumeID',b.state as 'state',b.signUp as 'signUp',b.interview as 'interview',b.train as 'train',b.admission as 'admission',b.work as 'work',b.settlement as 'settlement',b.endWork as 'endWork',b.workDate as 'workDate',		resume.id as 'resume.id',		resume.version as 'resume.version',resume.resumeTitle as 'resume.resumeTitle',resume.resumeHeadImg as 'resume.resumeHeadImg',resume.resumeName as 'resume.resumeName',resume.IDCard as 'resume.IDCard',resume.sex as 'resume.sex',resume.marriage as 'resume.marriage',resume.phoneNumber as 'resume.phoneNumber',resume.email as 'resume.email',resume.residence as 'resume.residence',resume.evaluation as 'resume.evaluation',resume.userID as 'resume.userID',resume.isDefault as 'resume.isDefault',resume.state as 'resume.state',resume.height as 'resume.height',resume.weight as 'resume.weight',		educationalList.id as 'resume.educationalList.id',		educationalList.version as 'resume.educationalList.version',educationalList.schoolName as 'resume.educationalList.schoolName',educationalList.major as 'resume.educationalList.major',educationalList.education as 'resume.educationalList.education',educationalList.educationLeavl as 'resume.educationalList.educationLeavl',educationalList.timeSlot as 'resume.educationalList.timeSlot',educationalList.timeEnd as 'resume.educationalList.timeEnd',educationalList.association as 'resume.educationalList.association',educationalList.resumeID as 'resume.educationalList.resumeID',		intentiontypeList.id as 'intentiontypeList.id',        intentiontypeList.version as 'intentiontypeList.version',intentiontypeList.userID as 'intentiontypeList.userID',intentiontypeList.htID as 'intentiontypeList.htID',		huntingtype.id as 'intentiontypeList.huntingtype.id',        huntingtype.version as 'intentiontypeList.huntingtype.version',huntingtype.name as 'intentiontypeList.huntingtype.name',huntingtype.HTFatCode as 'intentiontypeList.huntingtype.HTFatCode',huntingtype.state as 'intentiontypeList.huntingtype.state',huntingtype.codeGrade as 'intentiontypeList.huntingtype.codeGrade',		user.id as 'resume.user.id',		user.version as 'resume.user.version',user.accountNo as 'resume.user.accountNo',user.password as 'resume.user.password',user.weChatNo as 'resume.user.weChatNo',user.nickName as 'resume.user.nickName',user.sex as 'resume.user.sex',user.phoneNumber as 'resume.user.phoneNumber',user.lastLoginTime as 'resume.user.lastLoginTime',user.loginTime as 'resume.user.loginTime',user.status as 'resume.user.status',user.realName as 'resume.user.realName',user.IDCard as 'resume.user.IDCard',user.infoHeadImg as 'resume.user.infoHeadImg',user.locked as 'resume.user.locked',user.userSig as 'resume.user.userSig',user.birthday as 'resume.user.birthday',		attachment.id as 'resume.user.attachment.id',		attachment.version as 'resume.user.attachment.version',attachment.datestr as 'resume.user.attachment.datestr',attachment.path as 'resume.user.attachment.path',attachment.name as 'resume.user.attachment.name',attachment.title as 'resume.user.attachment.title',attachment.type as 'resume.user.attachment.type',attachment.refID as 'resume.user.attachment.refID',		weixin.id as 'resume.user.weixin.id',		weixin.version as 'resume.user.weixin.version',weixin.nickname as 'resume.user.weixin.nickname',weixin.sex as 'resume.user.weixin.sex',weixin.province as 'resume.user.weixin.province',weixin.city as 'resume.user.weixin.city',weixin.country as 'resume.user.weixin.country',weixin.headimgurl as 'resume.user.weixin.headimgurl',weixin.unionid as 'resume.user.weixin.unionid',weixin.openid as 'resume.user.weixin.openid',weixin.userID as 'resume.user.weixin.userID',weixin.refreshToken as 'resume.user.weixin.refreshToken',weixin.accessToken as 'resume.user.weixin.accessToken',weixin.refreshTokenTime as 'resume.user.weixin.refreshTokenTime',weixin.accessTokenTime as 'resume.user.weixin.accessTokenTime',weixin.ticket as 'resume.user.weixin.ticket',weixin.ticketTime as 'resume.user.weixin.ticketTime'	</sql>	<!--对象的多级映射 mapList mapPage mapOne-->	<select id="getDisquInfo" resultMap="getDisquInfoBeenrecruitedMap" >		select		<include refid="getDisquInfoList"/>		from  beenrecruited b		left join resume resume on b.resumeID = resume.id		left join intentiontype intentiontypeList on resume.userID = intentiontypeList.userID		left join huntingtype huntingtype on intentiontypeList.htID = huntingtype.id		left join educational educationalList on resume.id = educationalList.resumeID		left join shiro_user user on resume.userID = user.id		left join attachment attachment on user.infoHeadImg = attachment.id		left join weixin weixin on user.id = weixin.userID		where 1 = 1		<if test="condition.positionID != null">and b.positionID = #{condition.positionID}</if>		<if test="condition.dismiss != null">and b.dismiss = #{condition.dismiss}</if>		order by educationalList.`educationLeavl` DESC	</select>	<!-- 签到数据查询-->	<!--级联查询-->	<sql id="signinList">		s.id as 'id',		s.version as 'version',s.userID as 'userID',s.signAddress as 'signAddress',s.positionID as 'positionID',s.signTime as 'signTime',s.state as 'state',s.confirmationTime as 'confirmationTime',s.signinType as 'signinType',		address.id as 'address.id',		address.version as 'address.version',address.cityID as 'address.cityID',address.detailedAddress as 'address.detailedAddress',address.longitude as 'address.longitude',address.latitude as 'address.latitude',		city.id as 'address.city.id',		city.version as 'address.city.version',city.pinyin as 'address.city.pinyin',city.cityName as 'address.city.cityName',city.zipCode as 'address.city.zipCode',city.openState as 'address.city.openState',city.cityType as 'address.city.cityType',city.isHot as 'address.city.isHot',city.parentID as 'address.city.parentID',city.mergerName as 'address.city.mergerName',city.cityCode as 'address.city.cityCode',city.lng as 'address.city.lng',city.lat as 'address.city.lat'	</sql>	<!--City映射-->	<resultMap id="CityMap" type="City">		<id property="id" column="address.city.id" />		<result property="version" column="address.city.version" />		<result property="pinyin" column="address.city.pinyin" />		<result property="cityName" column="address.city.cityName" />		<result property="zipCode" column="address.city.zipCode" />		<result property="openState" column="address.city.openState" />		<result property="cityType" column="address.city.cityType" />		<result property="isHot" column="address.city.isHot" />		<result property="parentID" column="address.city.parentID" />		<result property="mergerName" column="address.city.mergerName" />		<result property="cityCode" column="address.city.cityCode" />		<result property="lng" column="address.city.lng" />		<result property="lat" column="address.city.lat" />	</resultMap>	<!--Localtioninfo映射-->	<resultMap id="LocaltioninfoMap" type="Localtioninfo">		<id property="id" column="address.id" />		<result property="version" column="address.version" />		<result property="cityID" column="address.cityID" />		<result property="detailedAddress" column="address.detailedAddress" />		<result property="longitude" column="address.longitude" />		<result property="latitude" column="address.latitude" />		<association property="city"  javaType="City" resultMap="CityMap"/>	</resultMap>	<!--Signin映射-->	<resultMap id="SigninMap" type="Signin">		<id property="id" column="id" />		<result property="version" column="version" />		<result property="userID" column="userID" />		<result property="signAddress" column="signAddress" />		<result property="positionID" column="positionID" />		<result property="signTime" column="signTime" />		<result property="state" column="state" />		<result property="confirmationTime" column="confirmationTime" />		<result property="signinType" column="signinType" />		<association property="address"  javaType="Localtioninfo" resultMap="LocaltioninfoMap"/>	</resultMap>	<select id="getNewInfo" resultType="Signin">		select <include refid="signinList"/>		from  signin s		left join localtioninfo address on s.signAddress = address.id		left join city city on address.cityID = city.id		where s.signinType = #{condition.signinType} and DATE(s.signTime) = DATE(now())		and s.userID = #{condition.userID} and s.positionID = #{condition.positionID}		and s.isDeleted = false order by signTime desc		limit 0,1	</select>	<select id="getTodaySignCount" resultType="Long">		select count(*) from signin where signinType = #{condition.signinType} and DATE(signTime) = DATE(now()) and userID = #{condition.userID} and positionID = #{condition.positionID} and isDeleted = false	</select>	<!--级联查询-->	<sql id="unconfirmedSigninList">		b.id as 'id',		b.version as 'version',b.positionID as 'positionID',b.resumeID as 'resumeID',b.state as 'state',b.signUp as 'signUp',b.interview as 'interview',b.train as 'train',b.admission as 'admission',b.work as 'work',b.settlement as 'settlement',b.endWork as 'endWork',b.workDate as 'workDate',b.dismiss as 'dismiss',		resume.id as 'resume.id',		resume.version as 'resume.version',resume.resumeTitle as 'resume.resumeTitle',resume.resumeHeadImg as 'resume.resumeHeadImg',resume.resumeName as 'resume.resumeName',resume.IDCard as 'resume.IDCard',resume.sex as 'resume.sex',resume.marriage as 'resume.marriage',resume.phoneNumber as 'resume.phoneNumber',resume.email as 'resume.email',resume.residence as 'resume.residence',resume.evaluation as 'resume.evaluation',resume.userID as 'resume.userID',resume.isDefault as 'resume.isDefault',resume.state as 'resume.state',resume.height as 'resume.height',resume.weight as 'resume.weight',		educationalList.id as 'resume.educationalList.id',		educationalList.version as 'resume.educationalList.version',educationalList.schoolName as 'resume.educationalList.schoolName',educationalList.major as 'resume.educationalList.major',educationalList.education as 'resume.educationalList.education',educationalList.educationLeavl as 'resume.educationalList.educationLeavl',educationalList.timeSlot as 'resume.educationalList.timeSlot',educationalList.timeEnd as 'resume.educationalList.timeEnd',educationalList.association as 'resume.educationalList.association',educationalList.resumeID as 'resume.educationalList.resumeID',		user.id as 'resume.user.id',		user.version as 'resume.user.version',user.accountNo as 'resume.user.accountNo',user.password as 'resume.user.password',user.weChatNo as 'resume.user.weChatNo',user.nickName as 'resume.user.nickName',user.sex as 'resume.user.sex',user.phoneNumber as 'resume.user.phoneNumber',user.lastLoginTime as 'resume.user.lastLoginTime',user.loginTime as 'resume.user.loginTime',user.status as 'resume.user.status',user.realName as 'resume.user.realName',user.IDCard as 'resume.user.IDCard',user.infoHeadImg as 'resume.user.infoHeadImg',user.locked as 'resume.user.locked',user.userSig as 'resume.user.userSig',user.birthday as 'resume.user.birthday',		attachment.id as 'resume.user.attachment.id',		attachment.version as 'resume.user.attachment.version',attachment.datestr as 'resume.user.attachment.datestr',attachment.path as 'resume.user.attachment.path',attachment.name as 'resume.user.attachment.name',attachment.title as 'resume.user.attachment.title',attachment.type as 'resume.user.attachment.type',attachment.refID as 'resume.user.attachment.refID',		weixin.id as 'resume.user.weixin.id',		weixin.version as 'resume.user.weixin.version',weixin.nickname as 'resume.user.weixin.nickname',weixin.sex as 'resume.user.weixin.sex',weixin.province as 'resume.user.weixin.province',weixin.city as 'resume.user.weixin.city',weixin.country as 'resume.user.weixin.country',weixin.headimgurl as 'resume.user.weixin.headimgurl',weixin.unionid as 'resume.user.weixin.unionid',weixin.openid as 'resume.user.weixin.openid',weixin.userID as 'resume.user.weixin.userID',weixin.refreshToken as 'resume.user.weixin.refreshToken',weixin.accessToken as 'resume.user.weixin.accessToken',weixin.refreshTokenTime as 'resume.user.weixin.refreshTokenTime',weixin.accessTokenTime as 'resume.user.weixin.accessTokenTime',weixin.ticket as 'resume.user.weixin.ticket',weixin.ticketTime as 'resume.user.weixin.ticketTime',		signinList.id as 'signinList.id',signinList.signBack as 'signinList.signBack',		signinList.version as 'signinList.version',signinList.userID as 'signinList.userID',signinList.signAddress as 'signinList.signAddress',signinList.positionID as 'signinList.positionID',signinList.signTime as 'signinList.signTime',signinList.state as 'signinList.state',signinList.confirmationTime as 'signinList.confirmationTime',signinList.signinType as 'signinList.signinType',signinList.attachmentId as 'signinList.attachmentId',		address.id as 'signinList.address.id',		address.version as 'signinList.address.version',address.cityID as 'signinList.address.cityID',address.detailedAddress as 'signinList.address.detailedAddress',address.longitude as 'signinList.address.longitude',address.latitude as 'signinList.address.latitude',		city.id as 'signinList.address.city.id',		city.version as 'signinList.address.city.version',city.pinyin as 'signinList.address.city.pinyin',city.cityName as 'signinList.address.city.cityName',city.zipCode as 'signinList.address.city.zipCode',city.openState as 'signinList.address.city.openState',city.cityType as 'signinList.address.city.cityType',city.isHot as 'signinList.address.city.isHot',city.parentID as 'signinList.address.city.parentID',city.mergerName as 'signinList.address.city.mergerName',city.cityCode as 'signinList.address.city.cityCode',city.lng as 'signinList.address.city.lng',city.lat as 'signinList.address.city.lat'	</sql>	<!--Localtioninfo映射-->	<resultMap id="SigninListLocaltioninfoMap" type="Localtioninfo">		<id property="id" column="signinList.address.id" />		<result property="version" column="signinList.address.version" />		<result property="cityID" column="signinList.address.cityID" />		<result property="detailedAddress" column="signinList.address.detailedAddress" />		<result property="longitude" column="signinList.address.longitude" />		<result property="latitude" column="signinList.address.latitude" />	</resultMap>	<resultMap id="SigninListLocaltioninfoMap1" type="Localtioninfo">		<id property="id" column="signinList.backAddress.id" />		<result property="version" column="signinList.backAddress.version" />		<result property="cityID" column="signinList.backAddress.cityID" />		<result property="detailedAddress" column="signinList.backAddress.detailedAddress" />		<result property="longitude" column="signinList.backAddress.longitude" />		<result property="latitude" column="signinList.backAddress.latitude" />	</resultMap>	<!--Signin映射-->	<resultMap id="SigninListMap" type="Signin">		<id property="id" column="signinList.id" />		<result property="version" column="signinList.version" />		<result property="userID" column="signinList.userID" />		<result property="signAddress" column="signinList.signAddress" />		<result property="positionID" column="signinList.positionID" />		<result property="signTime" column="signinList.signTime" />		<result property="state" column="signinList.state" />		<result property="confirmationTime" column="signinList.confirmationTime" />		<result property="signinType" column="signinList.signinType" />		<result property="attachmentId" column="signinList.attachmentId" />		<result property="signBack" column="signinList.signBack" />		<result property="signBackAddr" column="signinList.signBackAddr" />		<association property="address"  javaType="Localtioninfo" resultMap="SigninListLocaltioninfoMap"/>		<association property="backAddress"  javaType="Localtioninfo" resultMap="SigninListLocaltioninfoMap1"/>	</resultMap>	<!--Beenrecruited映射-->	<resultMap id="UnconfirmedSigninBeenrecruitedMap" type="Beenrecruited">		<id property="id" column="id" />		<result property="version" column="version" />		<result property="positionID" column="positionID" />		<result property="resumeID" column="resumeID" />		<result property="state" column="state" />		<result property="signUp" column="signUp" />		<result property="interview" column="interview" />		<result property="train" column="train" />		<result property="admission" column="admission" />		<result property="work" column="work" />		<result property="settlement" column="settlement" />		<result property="endWork" column="endWork" />		<result property="workDate" column="workDate" />		<result property="dismiss" column="dismiss" />		<association property="resume"  javaType="Resume" resultMap="ResumeMap"/>		<collection property="signinList" resultMap="SigninListMap" />	</resultMap>	<!--签到-->	<select id="unconfirmedSignin" resultMap="UnconfirmedSigninBeenrecruitedMap" >		select		<include refid="unconfirmedSigninList"/>		,backAddress.id as 'signinList.backAddress.id',		backAddress.version as 'signinList.backAddress.version',backAddress.cityID as 'signinList.backAddress.cityID',backAddress.detailedAddress as 'signinList.backAddress.detailedAddress',backAddress.longitude as 'signinList.backAddress.longitude',backAddress.latitude as 'signinList.backAddress.latitude'		<!--,(SELECT COUNT(*) FROM signin s WHERE s.positionID = b.positionID AND s.userID = resume.`userID`)AS'resume.user.signinCount'-->		<!--,count(signinList.id) as 'resume.user.signinCount'-->    from  beenrecruited b    LEFT JOIN resume resume ON resume.`id` = b.resumeID    LEFT JOIN signin signinList ON signinList.`positionID` = b.positionID  and signinList.createBy = b.createBy    LEFT JOIN educational educationalList ON resume.id = educationalList.resumeID    LEFT JOIN shiro_user USER ON resume.userID = user.id    LEFT JOIN localtioninfo address ON signinList.signAddress = address.id	left join localtioninfo backAddress on signinList.signBackAddr = backAddress.id	LEFT JOIN city city ON address.cityID = city.id    LEFT JOIN attachment attachment ON user.infoHeadImg = attachment.id    LEFT JOIN weixin weixin ON user.id = weixin.userID	where		b.positionID = #{condition.positionID}		AND DATE(signinList.signTime) = DATE(#{condition.signinTime})<!--		<if test="condition.beenState!=null">			AND b.state =  #{condition.beenState}			AND signinList.signinType =  #{condition.beenState}		</if>		<if test="condition.beenState==null">			AND b.state = 4		</if>		<if test="condition.signinState!=null">			and signinList.state  = #{condition.signinState}		</if>-->		<if test="condition.signstate!=null">			and signinList.state  =  #{condition.signstate}		</if>	<!--where 1 = 1        AND DATE(signinList.signTime) = DATE(#{condition.signinTime})        <if test="condition.signinState != null">            AND signinList.state = #{condition.signinState}        </if>        <if test="condition.beenState != null">            AND b.state = #{condition.beenState}        </if>        <if test="condition.beenState == null">            AND b.state IN (3,4)        </if>        AND b.positionID = #{condition.positionID}        AND signinList.`isDeleted` = FALSE        AND signinList.`userID` = resume.`userID`        AND signinList.`signinType` = b.state        ORDER BY educationalList.educationLeavl,signinList.signTime-->		and b.state = 4		and b.dismiss is null		order by signinList.updateTime desc    </select>    <select id="unconfirmedSigninCount" resultType="java.lang.Integer">        SELECT            count(*)        FROM            beenrecruited b            LEFT JOIN resume resume            ON resume.`id` = b.resumeID            WHERE resume.userID IN                (                    SELECT                        s.userID                    FROM                        signin s                    WHERE 1 = 1                        <if test="condition.signinState != null">                            AND s.state = #{condition.signinState}                        </if>                        AND DATE(signTime) = DATE(#{condition.signinTime})                        AND positionID = b.positionID                        AND isDeleted = FALSE                )                AND b.positionID = #{condition.positionID}                <if test="condition.beenState != null">                    AND b.state = #{condition.beenState}                </if>                <if test="condition.beenState == null">                    AND b.state IN (3,4)                </if>    </select>    <!--未签到-->	<select id="noSignin" resultMap="UnconfirmedSigninBeenrecruitedMap" >		select		<include refid="unconfirmedSigninList"/>        from todayjob tj		left join beenrecruited b on b.id = tj.beenID        left JOIN signin signinList ON signinList.`positionID` = b.positionID  and signinList.createBy  = tj.userID and DATE(signinList.signTime) = DATE(#{condition.signinTime})        LEFT JOIN resume resume ON resume.`id` = b.resumeID		LEFT JOIN educational educationalList ON resume.id = educationalList.resumeID		LEFT JOIN shiro_user USER ON resume.userID = user.id		LEFT JOIN localtioninfo address ON signinList.signAddress = address.id		LEFT JOIN city city ON address.cityID = city.id		LEFT JOIN attachment attachment ON user.infoHeadImg = attachment.id		LEFT JOIN weixin weixin ON user.id = weixin.userID		where 1 = 1		AND tj.positionID = #{condition.positionID}		<!--<if test="condition.beenState == null">			AND b.state = 4		</if>		<if test="condition.beenState != null">		  	AND b.state = #{condition.beenState}			AND signinList.signinType = #{condition.beenState}		</if>-->        AND signinList.id is null		AND b.state = 4		<!--and not EXISTS (			SELECT			id			FROM			signin s			WHERE			s.positionID = b.positionID			AND DATE(s.signTime) = DATE(#{condition.signinTime})		)-->	</select>	<select id="noSigninCount" resultType="java.lang.Integer" >		SELECT COUNT(hhh.co) FROM (			SELECT			COUNT(*)AS'co'			FROM  beenrecruited b		LEFT JOIN resume resume ON resume.`id` = b.resumeID		LEFT JOIN signin signinList ON signinList.`positionID` = b.positionID		LEFT JOIN educational educationalList ON resume.id = educationalList.resumeID		LEFT JOIN shiro_user USER ON resume.userID = user.id		LEFT JOIN localtioninfo address ON signinList.signAddress = address.id		LEFT JOIN city city ON address.cityID = city.id		LEFT JOIN attachment attachment ON user.infoHeadImg = attachment.id		LEFT JOIN weixin weixin ON user.id = weixin.userID			WHERE 1 = 1			AND NOT EXISTS			(				SELECT				s.userID				FROM				signin s				WHERE 1 = 1				AND DATE(s.signTime) = DATE(#{condition.signinTime})				AND s.positionID = b.positionID				AND s.isDeleted = FALSE				AND resume.userID  = s.userID				AND b.positionID = s.positionID			)			AND b.positionID = #{condition.positionID}			<if test="condition.beenState == null">				AND b.state IN (3,4)			</if>			<if test="condition.beenState != null">				AND b.state = #{condition.beenState}			</if>			<if test="condition.signinState != null">				AND signinList.state = #{condition.signinState}			</if>			GROUP BY resume.`id`		)AS`hhh`	</select><!--	如果查询的两个表大小相当，那么用in和exists差别不大；如果两个表中一个较小一个较大，则子查询表大的用exists，子查询表小的用in；-->	<select id="signinCountMap" resultType="java.util.HashMap" >       <!--select (select count(t.id) from signin t where t.positionID =  #{condition.positionID} and  DATE(t.signTime) = DATE(#{condition.signinTime}) and t.state=0 ) as 'signin',            count(DISTINCT bid)-count(DISTINCT sid) as 'nosignin' from (            select tj.id as 'bid' ,ts.id as 'sid'  from 	beenrecruited b            left join todayJob tj on b.id = tj.beenID            left join signin ts on ts.userID = tj.userID AND DATE(ts.signTime) = DATE(#{condition.signinTime})            where b.positionID = #{condition.positionID}            group by b.id,ts.id        )temp-->		select (select count(t.id) from signin t where t.positionID =  #{condition.positionID} and  DATE(t.signTime) = DATE(#{condition.signinTime}) and t.state=0)  as 'signin',		count(tj.id) as 'nosignin' from todayjob tj left join beenrecruited b on b.ID = tj.beenID   left join signin s on s.userID = tj.userID		and tj.positionID = s.positionID and DATE(s.signTime) = DATE(now())		where tj.positionID = #{condition.positionID}  and s.id is null    </select>	<select id="noSigninCountMap" resultType="java.util.HashMap" >		select count(tj.id) as 'nosignin' from todayjob tj left join signin s on s.userID = tj.userID		and tj.positionID = s.positionID and DATE(s.signTime) = DATE(now())		where tj.positionID = #{condition.positionID}  and s.id is null	</select>	<select id="signinSureCountMap" resultType="java.util.HashMap" >		<!--SELECT			IFNULL(sum(IF(s.state = 0, 1, 0)),0) AS 'nosure',			IFNULL(sum(IF(s.state between 1 and 4, 1, 0)),0) AS 'sure'		FROM			signin s left join beenrecruited b on  s.userID = b.createBy			AND s.positionID = b.positionID		WHERE			s.positionID = #{condition.positionID}			AND DATE(s.signTime) = DATE(#{condition.signinTime})			<if test="condition.beenState!=null">				AND b.state =  #{condition.beenState}			</if>			<if test="condition.beenState==null">				AND b.state  = 4			</if>-->		SELECT		count(s.id) as 'sure'		FROM		signin s		WHERE		s.state = 1		AND DATE(s.signTime) = DATE(#{condition.signinTime})		AND s.positionID = #{condition.positionID}	</select>	<!--级联查询-->	<sql id="signIndetailList">		s.id as 'id',		s.version as 'version',s.userID as 'userID',s.signAddress as 'signAddress',s.positionID as 'positionID',s.signTime as 'signTime',s.state as 'state',s.confirmationTime as 'confirmationTime',s.signinType as 'signinType',s.attachmentId as 'attachmentId',		address.id as 'address.id',		address.version as 'address.version',address.cityID as 'address.cityID',address.detailedAddress as 'address.detailedAddress',address.longitude as 'address.longitude',address.latitude as 'address.latitude',		beenrecruited.id as 'beenrecruited.id',		beenrecruited.version as 'beenrecruited.version',beenrecruited.positionID as 'beenrecruited.positionID',beenrecruited.resumeID as 'beenrecruited.resumeID',beenrecruited.state as 'beenrecruited.state',beenrecruited.signUp as 'beenrecruited.signUp',beenrecruited.payBond as 'beenrecruited.payBond',beenrecruited.interview as 'beenrecruited.interview',beenrecruited.train as 'beenrecruited.train',beenrecruited.admission as 'beenrecruited.admission',beenrecruited.work as 'beenrecruited.work',beenrecruited.settlement as 'beenrecruited.settlement',beenrecruited.endWork as 'beenrecruited.endWork',beenrecruited.workDate as 'beenrecruited.workDate',beenrecruited.dismiss as 'beenrecruited.dismiss',beenrecruited.reason as 'beenrecruited.reason',		resume.id as 'beenrecruited.resume.id',		resume.version as 'beenrecruited.resume.version',resume.resumeTitle as 'beenrecruited.resume.resumeTitle',resume.resumeHeadImg as 'beenrecruited.resume.resumeHeadImg',resume.resumeName as 'beenrecruited.resume.resumeName',resume.IDCard as 'beenrecruited.resume.IDCard',resume.sex as 'beenrecruited.resume.sex',resume.marriage as 'beenrecruited.resume.marriage',resume.phoneNumber as 'beenrecruited.resume.phoneNumber',resume.email as 'beenrecruited.resume.email',resume.residence as 'beenrecruited.resume.residence',resume.evaluation as 'beenrecruited.resume.evaluation',resume.userID as 'beenrecruited.resume.userID',resume.isDefault as 'beenrecruited.resume.isDefault',resume.state as 'beenrecruited.resume.state',resume.height as 'beenrecruited.resume.height',resume.weight as 'beenrecruited.resume.weight',		educationalList.id as 'beenrecruited.resume.educationalList.id',		educationalList.version as 'beenrecruited.resume.educationalList.version',educationalList.schoolName as 'beenrecruited.resume.educationalList.schoolName',educationalList.major as 'beenrecruited.resume.educationalList.major',educationalList.education as 'beenrecruited.resume.educationalList.education',educationalList.educationLeavl as 'beenrecruited.resume.educationalList.educationLeavl',educationalList.timeSlot as 'beenrecruited.resume.educationalList.timeSlot',educationalList.timeEnd as 'beenrecruited.resume.educationalList.timeEnd',educationalList.association as 'beenrecruited.resume.educationalList.association',educationalList.resumeID as 'beenrecruited.resume.educationalList.resumeID',resume.imgPath as 'beenrecruited.resume.imgPath',		user.id as 'beenrecruited.resume.user.id',		user.version as 'beenrecruited.resume.user.version',user.accountNo as 'beenrecruited.resume.user.accountNo',user.password as 'beenrecruited.resume.user.password',user.weChatNo as 'beenrecruited.resume.user.weChatNo',user.nickName as 'beenrecruited.resume.user.nickName',user.sex as 'beenrecruited.resume.user.sex',user.phoneNumber as 'beenrecruited.resume.user.phoneNumber',user.lastLoginTime as 'beenrecruited.resume.user.lastLoginTime',user.loginTime as 'beenrecruited.resume.user.loginTime',user.status as 'beenrecruited.resume.user.status',user.realName as 'beenrecruited.resume.user.realName',user.IDCard as 'beenrecruited.resume.user.IDCard',user.infoHeadImg as 'beenrecruited.resume.user.infoHeadImg',user.locked as 'beenrecruited.resume.user.locked',user.userSig as 'beenrecruited.resume.user.userSig',user.birthday as 'beenrecruited.resume.user.birthday',		weixin.id as 'beenrecruited.resume.user.weixin.id',		weixin.version as 'beenrecruited.resume.user.weixin.version',weixin.nickname as 'beenrecruited.resume.user.weixin.nickname',weixin.sex as 'beenrecruited.resume.user.weixin.sex',weixin.province as 'beenrecruited.resume.user.weixin.province',weixin.city as 'beenrecruited.resume.user.weixin.city',weixin.country as 'beenrecruited.resume.user.weixin.country',weixin.headimgurl as 'beenrecruited.resume.user.weixin.headimgurl',weixin.privilegeStr as 'beenrecruited.resume.user.weixin.privilegeStr',weixin.unionid as 'beenrecruited.resume.user.weixin.unionid',weixin.openid as 'beenrecruited.resume.user.weixin.openid',weixin.userID as 'beenrecruited.resume.user.weixin.userID',weixin.refreshToken as 'beenrecruited.resume.user.weixin.refreshToken',weixin.accessToken as 'beenrecruited.resume.user.weixin.accessToken',weixin.refreshTokenTime as 'beenrecruited.resume.user.weixin.refreshTokenTime',weixin.accessTokenTime as 'beenrecruited.resume.user.weixin.accessTokenTime',weixin.ticket as 'beenrecruited.resume.user.weixin.ticket',weixin.ticketTime as 'beenrecruited.resume.user.weixin.ticketTime'	</sql>	<!--signInLocaltioninfo映射-->	<resultMap id="signInLocaltioninfoMap" type="Localtioninfo">		<id property="id" column="address.id" />		<result property="version" column="address.version" />		<result property="cityID" column="address.cityID" />		<result property="detailedAddress" column="address.detailedAddress" />		<result property="longitude" column="address.longitude" />		<result property="latitude" column="address.latitude" />	</resultMap>	<!--signInEducational映射-->	<resultMap id="signInEducationalMap" type="Educational">		<id property="id" column="beenrecruited.resume.educationalList.id" />		<result property="version" column="beenrecruited.resume.educationalList.version" />		<result property="schoolName" column="beenrecruited.resume.educationalList.schoolName" />		<result property="major" column="beenrecruited.resume.educationalList.major" />		<result property="education" column="beenrecruited.resume.educationalList.education" />		<result property="educationLeavl" column="beenrecruited.resume.educationalList.educationLeavl" />		<result property="timeSlot" column="beenrecruited.resume.educationalList.timeSlot" />		<result property="timeEnd" column="beenrecruited.resume.educationalList.timeEnd" />		<result property="association" column="beenrecruited.resume.educationalList.association" />		<result property="resumeID" column="beenrecruited.resume.educationalList.resumeID" />	</resultMap>	<!--signInWeixin映射-->	<resultMap id="signInWeixinMap" type="Weixin">		<id property="id" column="beenrecruited.resume.user.weixin.id" />		<result property="version" column="beenrecruited.resume.user.weixin.version" />		<result property="nickname" column="beenrecruited.resume.user.weixin.nickname" />		<result property="sex" column="beenrecruited.resume.user.weixin.sex" />		<result property="province" column="beenrecruited.resume.user.weixin.province" />		<result property="city" column="beenrecruited.resume.user.weixin.city" />		<result property="country" column="beenrecruited.resume.user.weixin.country" />		<result property="headimgurl" column="beenrecruited.resume.user.weixin.headimgurl" />		<result property="privilegeStr" column="beenrecruited.resume.user.weixin.privilegeStr" />		<result property="unionid" column="beenrecruited.resume.user.weixin.unionid" />		<result property="openid" column="beenrecruited.resume.user.weixin.openid" />		<result property="userID" column="beenrecruited.resume.user.weixin.userID" />		<result property="refreshToken" column="beenrecruited.resume.user.weixin.refreshToken" />		<result property="accessToken" column="beenrecruited.resume.user.weixin.accessToken" />		<result property="refreshTokenTime" column="beenrecruited.resume.user.weixin.refreshTokenTime" />		<result property="accessTokenTime" column="beenrecruited.resume.user.weixin.accessTokenTime" />		<result property="ticket" column="beenrecruited.resume.user.weixin.ticket" />		<result property="ticketTime" column="beenrecruited.resume.user.weixin.ticketTime" />	</resultMap>	<!--signInUser映射-->	<resultMap id="signInUserMap" type="User">		<id property="id" column="beenrecruited.resume.user.id" />		<result property="version" column="beenrecruited.resume.user.version" />		<result property="accountNo" column="beenrecruited.resume.user.accountNo" />		<result property="password" column="beenrecruited.resume.user.password" />		<result property="weChatNo" column="beenrecruited.resume.user.weChatNo" />		<result property="nickName" column="beenrecruited.resume.user.nickName" />		<result property="sex" column="beenrecruited.resume.user.sex" />		<result property="phoneNumber" column="beenrecruited.resume.user.phoneNumber" />		<result property="lastLoginTime" column="beenrecruited.resume.user.lastLoginTime" />		<result property="loginTime" column="beenrecruited.resume.user.loginTime" />		<result property="status" column="beenrecruited.resume.user.status" />		<result property="realName" column="beenrecruited.resume.user.realName" />		<result property="IDCard" column="beenrecruited.resume.user.IDCard" />		<result property="infoHeadImg" column="beenrecruited.resume.user.infoHeadImg" />		<result property="locked" column="beenrecruited.resume.user.locked" />		<result property="userSig" column="beenrecruited.resume.user.userSig" />		<result property="birthday" column="beenrecruited.resume.user.birthday" />		<association property="weixin"  javaType="Weixin" resultMap="signInWeixinMap"/>	</resultMap>	<!--signInResume映射-->	<resultMap id="signInResumeMap" type="Resume">		<id property="id" column="beenrecruited.resume.id" />		<result property="version" column="beenrecruited.resume.version" />		<result property="resumeTitle" column="beenrecruited.resume.resumeTitle" />		<result property="resumeHeadImg" column="beenrecruited.resume.resumeHeadImg" />		<result property="resumeName" column="beenrecruited.resume.resumeName" />		<result property="IDCard" column="beenrecruited.resume.IDCard" />		<result property="sex" column="beenrecruited.resume.sex" />		<result property="marriage" column="beenrecruited.resume.marriage" />		<result property="phoneNumber" column="beenrecruited.resume.phoneNumber" />		<result property="email" column="beenrecruited.resume.email" />		<result property="residence" column="beenrecruited.resume.residence" />		<result property="evaluation" column="beenrecruited.resume.evaluation" />		<result property="userID" column="beenrecruited.resume.userID" />		<result property="isDefault" column="beenrecruited.resume.isDefault" />		<result property="state" column="beenrecruited.resume.state" />		<result property="height" column="beenrecruited.resume.height" />		<result property="weight" column="beenrecruited.resume.weight" />		<result property="imgPath" column="beenrecruited.resume.imgPath" />		<association property="user"  javaType="User" resultMap="signInUserMap"/>		<collection property="educationalList" resultMap="signInEducationalMap" />	</resultMap>	<!--signInBeenrecruited映射-->	<resultMap id="signInBeenrecruitedMap" type="Beenrecruited">		<id property="id" column="beenrecruited.id" />		<result property="version" column="beenrecruited.version" />		<result property="positionID" column="beenrecruited.positionID" />		<result property="resumeID" column="beenrecruited.resumeID" />		<result property="state" column="beenrecruited.state" />		<result property="signUp" column="beenrecruited.signUp" />		<result property="payBond" column="beenrecruited.payBond" />		<result property="interview" column="beenrecruited.interview" />		<result property="train" column="beenrecruited.train" />		<result property="admission" column="beenrecruited.admission" />		<result property="work" column="beenrecruited.work" />		<result property="settlement" column="beenrecruited.settlement" />		<result property="endWork" column="beenrecruited.endWork" />		<result property="workDate" column="beenrecruited.workDate" />		<result property="dismiss" column="beenrecruited.dismiss" />		<result property="reason" column="beenrecruited.reason" />		<association property="resume"  javaType="Resume" resultMap="signInResumeMap"/>	</resultMap>	<!--signInSignin映射-->	<resultMap id="signInSigninMap" type="Signin">		<id property="id" column="id" />		<result property="version" column="version" />		<result property="userID" column="userID" />		<result property="signAddress" column="signAddress" />		<result property="positionID" column="positionID" />		<result property="signTime" column="signTime" />		<result property="state" column="state" />		<result property="confirmationTime" column="confirmationTime" />		<result property="signinType" column="signinType" />		<result property="attachmentId" column="attachmentId" />		<association property="address"  javaType="Localtioninfo" resultMap="signInLocaltioninfoMap"/>		<association property="beenrecruited"  javaType="Beenrecruited" resultMap="signInBeenrecruitedMap"/>	</resultMap>	<!--对象的多级映射 mapList mapPage mapOne-->	<select id="signInmapList" resultMap="signInSigninMap" >		select		<include refid="signIndetailList"/>		from  signin s		left join localtioninfo address on s.signAddress = address.id		left join beenrecruited beenrecruited on s.positionID = beenrecruited.id		left join resume resume on beenrecruited.resumeID = resume.id		left join educational educationalList on resume.id = educationalList.resumeID		left join user user on resume.userID = user.id		left join weixin weixin on user.id = weixin.userID		beenrecruited.positionID = #{condition.positionID}		<if test="condition.beenState!=null">			AND beenrecruited.state = #{condition.beenState}		</if>		<if test="condition.beenState==null">			AND beenrecruited.state IN (3, 4)		</if>		<if test="condition.signinState==1">			and s.state = 0		</if>		<if test="condition.signinState==2">			and s.state = 1		</if>		<if test="condition.signinState==4">		</if>		DATE(s.signTime) = DATE(#{condition.signinTime})		<if test="orderByClause!=null">${orderByClause}</if>	</select>	<!--级联查询-->	<sql id="detailList1">		s.id as 'id',s.signBack as 'signBack',		s.version as 'version',s.userID as 'userID',s.signAddress as 'signAddress',s.positionID as 'positionID',s.signTime as 'signTime',s.state as 'state',s.confirmationTime as 'confirmationTime',s.signinType as 'signinType',s.attachmentId as 'attachmentId',		address.id as 'address.id',		address.version as 'address.version',address.cityID as 'address.cityID',address.detailedAddress as 'address.detailedAddress',address.longitude as 'address.longitude',address.latitude as 'address.latitude',		backAddress.id as 'backAddress.id',		backAddress.version as 'backAddress.version',backAddress.cityID as 'backAddress.cityID',backAddress.detailedAddress as 'backAddress.detailedAddress',backAddress.longitude as 'backAddress.longitude',backAddress.latitude as 'backAddress.latitude',		attachment.id as 'attachment.id',		attachment.version as 'attachment.version',attachment.datestr as 'attachment.datestr',attachment.path as 'attachment.path',attachment.name as 'attachment.name',attachment.title as 'attachment.title',attachment.type as 'attachment.type',attachment.refID as 'attachment.refID'	</sql>	<!--Localtioninfo映射-->	<resultMap id="LocaltioninfoMap1" type="Localtioninfo">		<id property="id" column="address.id" />		<result property="version" column="address.version" />		<result property="cityID" column="address.cityID" />		<result property="detailedAddress" column="address.detailedAddress" />		<result property="longitude" column="address.longitude" />		<result property="latitude" column="address.latitude" />	</resultMap>	<resultMap id="LocaltioninfoMap2" type="Localtioninfo">		<id property="id" column="backAddress.id" />		<result property="version" column="backAddress.version" />		<result property="cityID" column="backAddress.cityID" />		<result property="detailedAddress" column="backAddress.detailedAddress" />		<result property="longitude" column="backAddress.longitude" />		<result property="latitude" column="backAddress.latitude" />	</resultMap>	<!--Attachment映射-->	<resultMap id="AttachmentMap1" type="Attachment">		<id property="id" column="attachment.id" />		<result property="version" column="attachment.version" />		<result property="datestr" column="attachment.datestr" />		<result property="path" column="attachment.path" />		<result property="name" column="attachment.name" />		<result property="title" column="attachment.title" />		<result property="type" column="attachment.type" />		<result property="refID" column="attachment.refID" />	</resultMap>	<!--Signin映射-->	<resultMap id="SigninMap1" type="Signin">		<id property="id" column="id" />		<result property="version" column="version" />		<result property="userID" column="userID" />		<result property="signAddress" column="signAddress" />		<result property="positionID" column="positionID" />		<result property="signTime" column="signTime" />		<result property="state" column="state" />		<result property="confirmationTime" column="confirmationTime" />		<result property="signinType" column="signinType" />		<result property="attachmentId" column="attachmentId" />		<result property="signBack" column="signBack" />		<association property="address"  javaType="Localtioninfo" resultMap="LocaltioninfoMap1"/>		<association property="backAddress"  javaType="Localtioninfo" resultMap="LocaltioninfoMap2"/>		<collection property="attachmentList"  resultMap="AttachmentMap1"/>	</resultMap>	<!--对象的多级映射 mapList mapPage mapOne-->	<select id="mapList" resultMap="SigninMap1" >		select		<include refid="detailList1"/>		from  signin s		left join localtioninfo address on s.signAddress = address.id		left join localtioninfo backAddress on s.signBackAddr = backAddress.id		left join attachment attachment on s.attachmentId = attachment.id		<include refid="whereClause"/>		<if test="orderByClause!=null">${orderByClause}</if>	</select>	<update id="sureSignin">		UPDATE signin SET		state = 1		WHERE		positionID = #{condition.positionID}		AND DATE(signTime) = DATE(#{condition.date})		and userID in		<foreach item="items" index="index" collection="condition.userIdList" open="(" separator="," close=")">		#{items}		</foreach>	</update>	<update id="changeSigninType">		UPDATE signin SET		signinType = 4		WHERE		positionID = #{condition.positionID}		AND DATE(signTime) = DATE(#{condition.date})		and userID = #{condition.userID}	</update>	<!--级联查询-->	<sql id="infodetailList">		s.id as 'id',s.signBack as 'signBack',		s.version as 'version',s.userID as 'userID',s.signAddress as 'signAddress',s.positionID as 'positionID',s.signTime as 'signTime',s.state as 'state',s.confirmationTime as 'confirmationTime',s.signinType as 'signinType',s.attachmentId as 'attachmentId',s.mark as 'mark',		address.id as 'address.id',		address.version as 'address.version',address.cityID as 'address.cityID',address.detailedAddress as 'address.detailedAddress',address.longitude as 'address.longitude',address.latitude as 'address.latitude',address.geohash as 'address.geohash',		backAddress.id as 'backAddress.id',		backAddress.version as 'backAddress.version',backAddress.cityID as 'backAddress.cityID',backAddress.detailedAddress as 'backAddress.detailedAddress',backAddress.longitude as 'backAddress.longitude',backAddress.latitude as 'backAddress.latitude',		attachmentList2.id as 'backAttachmentList.id',		attachmentList2.version as 'backAttachmentList.version',attachmentList2.datestr as 'backAttachmentList.datestr',attachmentList2.path as 'backAttachmentList.path',attachmentList2.name as 'backAttachmentList.name',attachmentList2.title as 'backAttachmentList.title',attachmentList2.type as 'backAttachmentList.type',attachmentList2.refID as 'backAttachmentList.refID',		attachmentList.id as 'attachmentList.id',		attachmentList.version as 'attachmentList.version',attachmentList.datestr as 'attachmentList.datestr',attachmentList.path as 'attachmentList.path',attachmentList.name as 'attachmentList.name',attachmentList.title as 'attachmentList.title',attachmentList.type as 'attachmentList.type',attachmentList.refID as 'attachmentList.refID'	</sql>	<!--infoLocaltioninfo映射-->	<resultMap id="infoLocaltioninfoMap" type="Localtioninfo">		<id property="id" column="address.id" />		<result property="version" column="address.version" />		<result property="cityID" column="address.cityID" />		<result property="detailedAddress" column="address.detailedAddress" />		<result property="longitude" column="address.longitude" />		<result property="latitude" column="address.latitude" />		<result property="geohash" column="address.geohash" />	</resultMap>	<!--infoAttachment映射-->	<resultMap id="infoAttachmentMap" type="Attachment">		<id property="id" column="attachmentList.id" />		<result property="version" column="attachmentList.version" />		<result property="datestr" column="attachmentList.datestr" />		<result property="path" column="attachmentList.path" />		<result property="name" column="attachmentList.name" />		<result property="title" column="attachmentList.title" />		<result property="type" column="attachmentList.type" />		<result property="refID" column="attachmentList.refID" />	</resultMap>	<resultMap id="infoAttachmentMap2" type="Attachment">		<id property="id" column="backAttachmentList.id" />		<result property="version" column="backAttachmentList.version" />		<result property="datestr" column="backAttachmentList.datestr" />		<result property="path" column="backAttachmentList.path" />		<result property="name" column="backAttachmentList.name" />		<result property="title" column="backAttachmentList.title" />		<result property="type" column="backAttachmentList.type" />		<result property="refID" column="backAttachmentList.refID" />	</resultMap>	<!--infoSignin映射-->	<resultMap id="infoSigninMap" type="Signin">		<id property="id" column="id" />		<result property="version" column="version" />		<result property="userID" column="userID" />		<result property="signAddress" column="signAddress" />		<result property="positionID" column="positionID" />		<result property="signTime" column="signTime" />		<result property="state" column="state" />		<result property="confirmationTime" column="confirmationTime" />		<result property="signinType" column="signinType" />		<result property="attachmentId" column="attachmentId" />		<result property="mark" column="mark" />		<result property="signBack" column="signBack" />		<association property="backAddress"  javaType="Localtioninfo" resultMap="LocaltioninfoMap2"/>		<association property="address"  javaType="Localtioninfo" resultMap="infoLocaltioninfoMap"/>		<collection property="attachmentList" resultMap="infoAttachmentMap" />		<collection property="backAttachmentList" resultMap="infoAttachmentMap2" />	</resultMap>	<!--对象的多级映射 mapList mapPage mapOne-->	<select id="infomapOne" resultMap="infoSigninMap" >		select		<include refid="infodetailList"/>		from  signin s		left join localtioninfo address on s.signAddress = address.id		left join localtioninfo backAddress on s.signBackAddr = backAddress.id		left join attachment attachmentList on s.id = attachmentList.refID		left join attachment attachmentList2 on s.backAttachment = attachmentList2.refID		<include refid="whereClause"/>		<if test="orderByClause!=null">${orderByClause}</if>	</select>	</mapper>