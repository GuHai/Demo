<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.UserShareDao" ><!-- 查询字段 --><sql id="columnList" >	u.id,	 u.userID, u.positionID, u.createTime, u.createBy, u.updateTime, u.updateBy, u.version, u.isDeleted, u.type</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  u.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and u.id = #{condition.id}	</if>	<if test="condition.userID != null" >and  u.userID = #{condition.userID}</if><if test="condition.positionID != null" >and  u.positionID = #{condition.positionID}</if><if test="condition.createTime != null" >and  u.createTime = #{condition.createTime}</if><if test="condition.createBy != null" >and  u.createBy = #{condition.createBy}</if><if test="condition.updateTime != null" >and  u.updateTime = #{condition.updateTime}</if><if test="condition.updateBy != null" >and  u.updateBy = #{condition.updateBy}</if><if test="condition.version != null" >and  u.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  u.isDeleted = #{condition.isDeleted}</if><if test="condition.type != null" >and  u.type = #{condition.type}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and u.id = #{condition.id}	</if>													 			<if test="condition.userID != null" >and  UPPER(u.userID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.userID}),'%'))</if><if test="condition.positionID != null" >and  UPPER(u.positionID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.positionID}),'%'))</if><if test="condition.createTime != null" >and  UPPER(u.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.createBy != null" >and  UPPER(u.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(u.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(u.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if><if test="condition.version != null" >and  UPPER(u.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(u.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if><if test="condition.type != null" >and  UPPER(u.type) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.type}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into usershare (id,userID,positionID,createTime,createBy,updateTime,updateBy,version,isDeleted,type)  values(#{id,jdbcType=VARCHAR},#{userID},#{positionID},#{createTime},#{createBy},#{updateTime},#{updateBy},#{version},#{isDeleted},#{type})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update usershare set	<trim  suffixOverrides="," >	<if test="userID != null ">userID=#{userID},</if><if test="positionID != null ">positionID=#{positionID},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="updateBy != null ">updateBy=#{updateBy},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if><if test="type != null ">type=#{type},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from usershare where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="UserShare"  parameterType="String">	select <include refid="columnList" /> 	from usershare  u	where  u.id = #{id}  and u.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from usershare  u	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="UserShare" >	select 	<include refid="columnList"/>	from usershare u	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="UserShare" >	select 	<include refid="columnList"/>	from usershare u	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="UserShare" >	select	<include refid="columnList"/>	from usershare u	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="UserShare" >	select	<include refid="columnList"/>	from usershare u	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select u.${idsColumn}	from usershare u    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select u.${idsColumn}	from usershare u    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="UserShare" >     select    <include refid="columnList"/>     from usershare u    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select></mapper>