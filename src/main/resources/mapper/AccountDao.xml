<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.AccountDao" >	<!-- 查询字段 -->	<sql id="columnList" >		a.id,a.isCheck,a.errmsg,a.md5,a.extract,a.accID,		a.userID, a.money, a.type, a.isIn, a.createBy, a.createTime, a.updateBy, a.updateTime, a.version, a.isDeleted, a.isPass, a.orderNo,a.mark	</sql>	<!--通过id集合in查询-->	<sql id="inClause">		<if test="column!=null">			<if test="ids==null">				and 1=0			</if>			<if test="ids!=null">				<if test="ids.size>0">					and  a.${column} in					<foreach item="items" index="index" collection="ids" open="(" separator="," close=")">						#{items}					</foreach>				</if>				<if test="ids.size==0">					and 1=0				</if>			</if>		</if>	</sql>	<!-- 查询条件 -->	<sql id="whereClause">		where 1=1		<trim  suffixOverrides="," >			<if test="condition.id != null" >				and a.id = #{condition.id}			</if>			<if test="condition.userID != null" >and  a.userID = #{condition.userID}</if>			<if test="condition.money != null" >and  a.money = #{condition.money}</if>			<if test="condition.type != null" >and  a.type = #{condition.type}</if>			<if test="condition.isIn != null" >and  a.isIn = #{condition.isIn}</if>			<if test="condition.createBy != null" >and  a.createBy = #{condition.createBy}</if>			<if test="condition.createTime != null" >and  a.createTime = #{condition.createTime}</if>			<if test="condition.updateBy != null" >and  a.updateBy = #{condition.updateBy}</if>			<if test="condition.updateTime != null" >and  a.updateTime = #{condition.updateTime}</if>			<if test="condition.version != null" >and  a.version = #{condition.version}</if>			<if test="condition.isDeleted != null" >and  a.isDeleted = #{condition.isDeleted}</if>			<if test="condition.isPass != null" >and  a.isPass = #{condition.isPass}</if>			<if test="condition.orderNo != null" >and  a.orderNo = #{condition.orderNo}</if>			<if test="condition.mark != null" >and  a.mark = #{condition.mark}</if>			<if test="condition.nocheck != null" >and  a.isCheck is null </if>		</trim>		<include refid="inClause"/>	</sql>	<!-- 模糊查询条件 -->	<sql id="whereLikeClause">		where 1=1		<trim  suffixOverrides="," >			<if test="condition.id != null" >				and a.id = #{condition.id}			</if>			<if test="condition.userID != null" >and  UPPER(a.userID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.userID}),'%'))</if>			<if test="condition.money != null" >and  UPPER(a.money) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.money}),'%'))</if>			<if test="condition.type != null" >and  UPPER(a.type) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.type}),'%'))</if>			<if test="condition.isIn != null" >and  UPPER(a.isIn) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isIn}),'%'))</if>			<if test="condition.createBy != null" >and  UPPER(a.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if>			<if test="condition.createTime != null" >and  UPPER(a.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if>			<if test="condition.updateBy != null" >and  UPPER(a.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if>			<if test="condition.updateTime != null" >and  UPPER(a.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if>			<if test="condition.version != null" >and  UPPER(a.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if>			<if test="condition.isDeleted != null" >and  UPPER(a.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if>			<if test="condition.isPass != null" >and  UPPER(a.isPass) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isPass}),'%'))</if>			<if test="condition.orderNo != null" >and  UPPER(a.orderNo) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.orderNo}),'%'))</if>		</trim>		<include refid="inClause"/>	</sql>	<!-- 插入记录 -->	<insert id="add"  >		insert into account (id,userID,money,type,isIn,createBy,createTime,updateBy,updateTime,version,isDeleted,isPass,orderNo,mark)		values(#{id,jdbcType=VARCHAR},#{userID},#{money},#{type},#{isIn},#{createBy},#{createTime},#{updateBy},#{updateTime},#{version},#{isDeleted},#{isPass},#{orderNo},#{mark})	</insert>	<!-- 修改记录，只修改只不为空的字段 -->	<update id="update" >		update account set		<trim  suffixOverrides="," >			<if test="userID != null ">userID=#{userID},</if>			<if test="money != null ">money=#{money},</if>			<if test="type != null ">type=#{type},</if>			<if test="isIn != null ">isIn=#{isIn},</if>			<if test="createBy != null ">createBy=#{createBy},</if>			<if test="createTime != null ">createTime=#{createTime},</if>			<if test="updateBy != null ">updateBy=#{updateBy},</if>			<if test="updateTime != null ">updateTime=#{updateTime},</if>			<if test="version != null ">version=#{version},</if>			<if test="isDeleted != null ">isDeleted=#{isDeleted},</if>			<if test="isPass != null ">isPass=#{isPass},</if>			<if test="orderNo != null ">orderNo=#{orderNo},</if>			<if test="mark != null ">mark=#{mark},</if>			<if test="isCheck != null ">isCheck=#{isCheck},</if>			<if test="errmsg != null ">errmsg=#{errmsg},</if>			<if test="md5 != null ">md5=#{md5},</if>			<if test="extract != null ">extract=#{extract},</if>			<if test="accID != null ">accID=#{accID},</if>		</trim> where id=#{id} and version = #{version}-1	</update><!-- 删除记录 --><delete id="del" >	delete from account where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="Account"  parameterType="String">	select <include refid="columnList" /> 	from account  a	where  a.id = #{id}  and a.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from account  a	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="Account" >	select 	<include refid="columnList"/>	from account a	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="Account" >	select 	<include refid="columnList"/>	from account a	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="Account" >	select	<include refid="columnList"/>	from account a	<include refid="whereClause"/>	<if test="condition.hasExtract!=null">		and ( a.extract is null or a.money != a.extract)	</if>	<if test="condition.withAble!=null">		and a.type not in (29,30)	</if>	<if test="condition.notExtract!=null">		and a.accID is null	</if>	<if test="condition.interval!=null">		AND  DATE_SUB(CURDATE(), INTERVAL #{condition.interval} DAY)          &lt;= date(a.updateTime)	</if>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="Account" >	select	<include refid="columnList"/>	from account a	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select a.${idsColumn}	from account a    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select a.${idsColumn}	from account a    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="Account" >     select    <include refid="columnList"/>     from account a    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select><select id="getTotalSalary" resultType="java.util.HashMap" >	SELECT		IFNULL(			sum(				IF (					a.isIn = TRUE,					a.money,					- 1 * a.money				)			),			0		) AS money,		IFNULL(sum(if(a.type in (29,30),a.money-ifnull(a.extract,0),0)),0)as recharge	FROM		account a	WHERE		a.userID = #{condition.userID}	AND a.isDeleted = FALSE</select>	<select id="getTotalBond" resultType="java.util.HashMap" >		SELECT		IFNULL(sum(b.premiumMoney), 0) AS bond		FROM			bondtransaction b		WHERE			b.userID = #{condition.userID}		AND b.isDeleted = FALSE		AND b.isReturn = FALSE		<if test="condition.payerType!=null">            AND b.payerType = #{condition.payerType}        </if>	</select>	<select id="billPage"  resultType="java.util.HashMap"  >		   select * from (		   SELECT				a.type AS 'btype',				if(a.isIn=0,'-','+') AS 'isin',				a.orderNo AS 'orderNo',				a.userID AS 'userID',				case when a.isin=1 then a.createTime else  a.updateTime end  AS 'time',				a.money as 'money',				a.isPass as 'status',				'' as 'mark',				false as 'virtual'			FROM				account a				where a.userID = #{condition.userID} and a.type not in (16,1,3)			UNION ALL			SELECT			t.type AS 'btype',-- 		    if(left(t.prepayID, 1)='Y','0','-1') AS 'isin',		    if(t.status=6,'+','-') as 'isin',			t.code AS 'orderNo',			t.userID AS 'userID',			t.updateTime AS 'time',		    ROUND(t.fee/100,2) as 'money',			t.status as 'status',			'' as 'mark',			if(left(t.prepayID, 1)='Y',true,false) as 'virtual'			FROM			wxorder t			where t.status in(4,6,7) and  t.userID = #{condition.userID}			<!--SELECT				t.type AS 'btype',				'-1' AS 'isin',				t.settlementOrderNumber AS 'orderNo',				t.userID AS 'userID',				t.updateTime AS 'time',				t.money as 'money',				t.settlementState as 'status',				t.remarks as 'mark',				if(t.isVirtual=true,true,false) as 'virtual'			FROM				settlement t				where t.settlementState = 2 and  t.userID = #{condition.userID}-->		  )as temp			where 1=1		  <if test="condition.btype!=null">              and temp.btype in (${condition.btype})		  </if>          <if test="condition.virtual!=null">			  and temp.virtual = true          </if>			<if test="condition.status!=null">			and temp.status = #{condition.status}			</if>		  order by time desc	</select>	<select id="billList"  resultType="java.util.HashMap" >		SELECT		a.type AS 'btype',		a.isIn AS 'isin',		a.orderNo AS 'orderNo',		a.updateTime AS 'time',		a.money as 'money',		a.isPass as 'status'		FROM		account a		where a.userID = #{condition.userID}		<if test="condition.btype!=null">			where a.type in (${condition.btype})		</if>		order by updateTime desc	</select>    <select id="weeklyReportForA" resultType="com.yskj.models.excel.WeeklyIn">        SELECT        IFNULL(IFNULL(p.realName,su.realName),su.nickName) as name,        IFNULL(p.personPhoneNumber,su.phoneNumber) AS phone,        t. CODE as code,        t.fee / 100 AS money,        (        CASE t.type        WHEN '01' THEN        '保证金'        WHEN '02' THEN        '薪资发放'        WHEN '03' THEN        '合伙人会费'        WHEN '04' THEN        '红包发放'        WHEN '05' THEN        '扫码结算'        WHEN '06' THEN        '违约金赔付'        ELSE        '其他'        END        ) AS type,        t.description as mark,        t.createTime as time        FROM        wxorder t        LEFT JOIN personalauthen p ON p.userID = t.userID        LEFT JOIN shiro_user su on su.id = t.userID        WHERE        t.`status` IN (3, 4, 6, 7) and (t.payType is null or t.payType = 1)        AND  DATE_SUB(CURDATE(), INTERVAL #{condition.interval}  DAY)          &lt;= date(t.createTime)        order by t.userID    </select>	<select id="weeklyReportForB" resultType="com.yskj.models.excel.WeeklyIn">		SELECT			IFNULL(IFNULL(p.realName,su.realName),su.nickName) as name,			IFNULL(p.personPhoneNumber,su.phoneNumber) AS phone,			t.orderNo  as code,		    t.extract as money ,		    t.accID as accID,			(case t.type when 1  then '求职者保证金退回'  when 3  then '招聘者保证金退回'  when 2 then '薪资收入' when 6 then '保证金赔付' when 8 then '合伙人奖励'  when 5  then '提现'  when 9  then '提现手续费' when 10  then '悬赏金' when 11  then '红包领取' when 12  then '红包退回'  when 13  then '税收' when 14 then '扫码结算'   else  '其他' end )as type,			t.mark as mark,			t.updateTime as time		from account t		LEFT JOIN personalauthen p ON p.userID = t.userID		LEFT JOIN shiro_user su on su.id = t.userID<!--		WHERE t.extract is not null 		AND  DATE_SUB(CURDATE(), INTERVAL #{condition.interval} DAY)          &lt;= date(t.updateTime)-->		WHERE t.id in (${condition.accIds})		order by t.userID	</select>	<select id="getNoSureRedPacket" resultType="java.util.Map">		SELECT COUNT(1) AS 'count',SUM(a.money) AS 'sumMoney' FROM account a WHERE #{condition.time} &lt; a.createTime AND a.userID = #{condition.userID} AND a.type = 11	</select>	<select id="getSalaryByThisMonth"  resultType="java.math.BigDecimal">		SELECT ifnull(sum(money),0) FROM account a		<include refid="whereClause"/>		AND DATE_FORMAT( a.createTime, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' ) ;	</select>	<select id="accountInfo"  resultType="java.util.Map">		SELECT		IFNULL(sum(t.money),0) as salary,		IFNULL((SELECT			sum(a.money)		FROM			account a		WHERE			a.userID = #{condition.userID}		AND DATE_FORMAT(a.createTime, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')		AND a.type = 13),0) as tax		FROM			account t		WHERE			t.userID = #{condition.userID}		AND t.type IN (${condition.type})	</select>	<select id="getTotalByOrderNo"  resultType="java.math.BigDecimal">		select IFNULL(sum(t.money),0) as total from account t where t.isPass = 1 and t.isin  = 1 and t.orderNo = #{condition.orderNo}	</select>		<select id="getRechargeSum" resultType="java.math.BigDecimal">		SELECT SUM(account.`money`-IFNULL(account.`extract`,0)) AS 'recharge' FROM account WHERE account.`userID` = #{userID} AND account.`type` IN (29,30)	</select>	<select id="getMySettle" resultType="java.math.BigDecimal">		SELECT SUM(account.`money`) AS 'recharge' FROM account WHERE account.`userID` = #{userID} AND account.`type` = 17 AND DATE(account.createTime) = DATE(now())	</select></mapper>