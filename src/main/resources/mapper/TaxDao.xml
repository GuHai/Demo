<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.TaxDao" ><!-- 查询字段 --><sql id="columnList" >	t.id,	 t.level, t.start, t.end, t.description, t.tax, t.createBy, t.createTime, t.updateBy, t.updateTime, t.version, t.isDeleted</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  t.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and t.id = #{condition.id}	</if>	<if test="condition.level != null" >and  t.level = #{condition.level}</if><if test="condition.start != null" >and  t.start = #{condition.start}</if><if test="condition.end != null" >and  t.end = #{condition.end}</if><if test="condition.description != null" >and  t.description = #{condition.description}</if><if test="condition.tax != null" >and  t.tax = #{condition.tax}</if><if test="condition.createBy != null" >and  t.createBy = #{condition.createBy}</if><if test="condition.createTime != null" >and  t.createTime = #{condition.createTime}</if><if test="condition.updateBy != null" >and  t.updateBy = #{condition.updateBy}</if><if test="condition.updateTime != null" >and  t.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  t.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  t.isDeleted = #{condition.isDeleted}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and t.id = #{condition.id}	</if>													 			<if test="condition.level != null" >and  UPPER(t.level) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.level}),'%'))</if><if test="condition.start != null" >and  UPPER(t.start) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.start}),'%'))</if><if test="condition.end != null" >and  UPPER(t.end) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.end}),'%'))</if><if test="condition.description != null" >and  UPPER(t.description) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.description}),'%'))</if><if test="condition.tax != null" >and  UPPER(t.tax) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.tax}),'%'))</if><if test="condition.createBy != null" >and  UPPER(t.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.createTime != null" >and  UPPER(t.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(t.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(t.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(t.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(t.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into tax (id,level,start,end,description,tax,createBy,createTime,updateBy,updateTime,version,isDeleted)  values(#{id,jdbcType=VARCHAR},#{level},#{start},#{end},#{description},#{tax},#{createBy},#{createTime},#{updateBy},#{updateTime},#{version},#{isDeleted})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update tax set	<trim  suffixOverrides="," >	<if test="level != null ">level=#{level},</if><if test="start != null ">start=#{start},</if><if test="end != null ">end=#{end},</if><if test="description != null ">description=#{description},</if><if test="tax != null ">tax=#{tax},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateBy != null ">updateBy=#{updateBy},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from tax where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="Tax"  parameterType="String">	select <include refid="columnList" /> 	from tax  t	where  t.id = #{id}  and t.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from tax  t	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="Tax" >	select 	<include refid="columnList"/>	from tax t	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="Tax" >	select 	<include refid="columnList"/>	from tax t	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="Tax" >	select	<include refid="columnList"/>	from tax t	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="Tax" >	select	<include refid="columnList"/>	from tax t	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select t.${idsColumn}	from tax t    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select t.${idsColumn}	from tax t    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="Tax" >     select    <include refid="columnList"/>     from tax t    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select></mapper>