<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.yskj.dao.PositionDao" ><!-- 查询字段 --><sql id="columnList" >	p.id,p.publishTime,p.personNumDay,p.isPush,	 p.title, p.salaryType, p.recruitStartTime, p.recruitEndTime, p.salary, p.dailySalary, p.liquidatedDamages, p.recruitsSum, p.sexRequirements, p.workPalce, p.workDate, p.aggregate, p.setDate, p.contacts, p.contactNumber, p.settlement, p.matters, p.includeBoard, p.controlSleep, p.interview, p.baseTask, p.commission, p.train, p.beenRecruitedSum, p.workTypeID, p.userID, p.open, p.type, p.createTime, p.updateTime, p.version, p.isDeleted, p.createBy, p.updateBy,p.startTime,p.endTime,p.jobRequirements,p.jobContent</sql><sql id="columnList1" >    p.id,p.publishTime,p.personNumDay,    p.title, p.salaryType, p.recruitStartTime, p.recruitEndTime, p.salary, p.dailySalary, p.liquidatedDamages, p.recruitsSum, p.sexRequirements, p.workPalce, p.workDate, p.aggregate, p.setDate, p.contacts, p.contactNumber, p.settlement, p.matters, p.includeBoard, p.controlSleep, p.interview, p.baseTask, p.commission, p.train, p.beenRecruitedSum, p.workTypeID, p.userID, p.open, p.type, p.createTime, p.updateTime, p.version, p.isDeleted, p.createBy, p.updateBy,p.startTime,p.endTime,p.jobRequirements,p.jobContent,b.version as 'browseNum'</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="condition.notin == 'notin' ">                <if test="ids.size>0">                    and  p.${column}  not in                    <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                        #{items}                    </foreach>                </if>            </if>            <if test="condition.notin == 'in' ">                <if test="ids.size>0">                    and  p.${column}  in                    <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                        #{items}                    </foreach>                </if>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and p.id = #{condition.id}	</if>	<if test="condition.title != null" >and  p.title = #{condition.title}</if><if test="condition.salaryType != null" >and  p.salaryType = #{condition.salaryType}</if><if test="condition.recruitStartTime != null" >and  p.recruitStartTime = #{condition.recruitStartTime}</if><if test="condition.recruitEndTime != null" >and  p.recruitEndTime = #{condition.recruitEndTime}</if><if test="condition.salary != null" >and  p.salary = #{condition.salary}</if><if test="condition.dailySalary != null" >and  p.dailySalary = #{condition.dailySalary}</if><if test="condition.liquidatedDamages != null" >and  p.liquidatedDamages = #{condition.liquidatedDamages}</if><if test="condition.recruitsSum != null" >and  p.recruitsSum = #{condition.recruitsSum}</if><if test="condition.sexRequirements != null" >and  p.sexRequirements = #{condition.sexRequirements}</if><if test="condition.workPalce != null" >and  p.workPalce = #{condition.workPalce}</if><if test="condition.workDate != null" >and  p.workDate = #{condition.workDate}</if><if test="condition.aggregate != null" >and  p.aggregate = #{condition.aggregate}</if><if test="condition.setDate != null" >and  p.setDate = #{condition.setDate}</if><if test="condition.contacts != null" >and  p.contacts = #{condition.contacts}</if><if test="condition.contactNumber != null" >and  p.contactNumber = #{condition.contactNumber}</if><if test="condition.settlement != null" >and  p.settlement = #{condition.settlement}</if><if test="condition.matters != null" >and  p.matters = #{condition.matters}</if><if test="condition.includeBoard != null" >and  p.includeBoard = #{condition.includeBoard}</if><if test="condition.controlSleep != null" >and  p.controlSleep = #{condition.controlSleep}</if><if test="condition.interview != null" >and  p.interview = #{condition.interview}</if><if test="condition.baseTask != null" >and  p.baseTask = #{condition.baseTask}</if><if test="condition.commission != null" >and  p.commission = #{condition.commission}</if><if test="condition.train != null" >and  p.train = #{condition.train}</if><if test="condition.beenRecruitedSum != null" >and  p.beenRecruitedSum = #{condition.beenRecruitedSum}</if><if test="condition.workTypeID != null" >and  p.workTypeID = #{condition.workTypeID}</if><if test="condition.userID != null" >and  p.userID = #{condition.userID}</if><if test="condition.open != null" >and  p.open = #{condition.open}</if><if test="condition.type != null" >and  p.type = #{condition.type}</if><if test="condition.createTime != null" >and  p.createTime = #{condition.createTime}</if><if test="condition.updateTime != null" >and  p.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  p.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  p.isDeleted = #{condition.isDeleted}</if><if test="condition.createBy != null" >and  p.createBy = #{condition.createBy}</if><if test="condition.updateBy != null" >and  p.updateBy = #{condition.updateBy}</if><if test="condition.isInterview!=null">and  p.interview is not null </if><if test="condition.salaryOpen!=null and condition.salaryClose!=null" >and p.dailySalary   BETWEEN #{condition.salaryOpen} AND #{condition.salaryClose} </if><if test="condition.startTime!=null">and  p.startTime <![CDATA[ <= ]]> #{condition.startTime} </if><if test="condition.endTime!=null">and  p.endTime  <![CDATA[ >= ]]> #{condition.endTime} </if><if test="condition.jobRequirements!=null">and  p.jobRequirements = #{condition.jobRequirements} </if><if test="condition.jobContent!=null">and  p.jobContent = #{condition.jobContent} </if>    <if test="condition.personNumDay!=null">and  p.personNumDay = #{condition.personNumDay} </if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and p.id = #{condition.id}	</if>													 		<if test="condition.title != null" >and  UPPER(p.title) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.title}),'%'))</if><if test="condition.salaryType != null" >and  UPPER(p.salaryType) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.salaryType}),'%'))</if><if test="condition.recruitStartTime != null" >and  UPPER(p.recruitStartTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.recruitStartTime}),'%'))</if><if test="condition.recruitEndTime != null" >and  UPPER(p.recruitEndTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.recruitEndTime}),'%'))</if><if test="condition.salary != null" >and  UPPER(p.salary) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.salary}),'%'))</if><if test="condition.dailySalary != null" >and  UPPER(p.dailySalary) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.dailySalary}),'%'))</if><if test="condition.liquidatedDamages != null" >and  UPPER(p.liquidatedDamages) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.liquidatedDamages}),'%'))</if><if test="condition.recruitsSum != null" >and  UPPER(p.recruitsSum) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.recruitsSum}),'%'))</if><if test="condition.sexRequirements != null" >and  UPPER(p.sexRequirements) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.sexRequirements}),'%'))</if><if test="condition.workPalce != null" >and  UPPER(p.workPalce) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.workPalce}),'%'))</if><if test="condition.workDate != null" >and  UPPER(p.workDate) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.workDate}),'%'))</if><if test="condition.aggregate != null" >and  UPPER(p.aggregate) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.aggregate}),'%'))</if><if test="condition.setDate != null" >and  UPPER(p.setDate) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.setDate}),'%'))</if><if test="condition.contacts != null" >and  UPPER(p.contacts) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.contacts}),'%'))</if><if test="condition.contactNumber != null" >and  UPPER(p.contactNumber) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.contactNumber}),'%'))</if><if test="condition.settlement != null" >and  UPPER(p.settlement) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.settlement}),'%'))</if><if test="condition.matters != null" >and  UPPER(p.matters) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.matters}),'%'))</if><if test="condition.includeBoard != null" >and  UPPER(p.includeBoard) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.includeBoard}),'%'))</if><if test="condition.controlSleep != null" >and  UPPER(p.controlSleep) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.controlSleep}),'%'))</if><if test="condition.interview != null" >and  UPPER(p.interview) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.interview}),'%'))</if><if test="condition.baseTask != null" >and  UPPER(p.baseTask) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.baseTask}),'%'))</if><if test="condition.commission != null" >and  UPPER(p.commission) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.commission}),'%'))</if><if test="condition.train != null" >and  UPPER(p.train) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.train}),'%'))</if><if test="condition.beenRecruitedSum != null" >and  UPPER(p.beenRecruitedSum) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.beenRecruitedSum}),'%'))</if><if test="condition.workTypeID != null" >and  UPPER(p.workTypeID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.workTypeID}),'%'))</if><if test="condition.userID != null" >and  UPPER(p.userID) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.userID}),'%'))</if><if test="condition.open != null" >and  UPPER(p.open) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.open}),'%'))</if><if test="condition.type != null" >and  UPPER(p.type) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.type}),'%'))</if><if test="condition.createTime != null" >and  UPPER(p.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(p.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(p.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(p.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if><if test="condition.createBy != null" >and  UPPER(p.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(p.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if><if test="condition.isInterview!=null">and  p.interview is not null </if><if test="condition.salaryOpen!=null and condition.salaryClose!=null" >and p.dailySalary   BETWEEN #{condition.salaryOpen} AND #{condition.salaryClose} </if><if test="condition.startTime!=null">and  p.startTime <![CDATA[ <= ]]> #{condition.startTime} </if><if test="condition.endTime!=null">and  p.endTime  <![CDATA[ >= ]]> #{condition.endTime} </if><if test="condition.jobRequirements!=null">and  UPPER(p.jobRequirements)  LIKE  UPPER(CONCAT(CONCAT('%',#{condition.jobRequirements}),'%'))  </if><if test="condition.jobContent!=null">and  UPPER(p.jobContent)  LIKE  UPPER(CONCAT(CONCAT('%',#{condition.jobContent}),'%')) </if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into position (id,personNumDay,title,salaryType,recruitStartTime,recruitEndTime,salary,dailySalary,liquidatedDamages,recruitsSum,sexRequirements,workPalce,workDate,aggregate,setDate,contacts,contactNumber,settlement,matters,includeBoard,controlSleep,interview,baseTask,commission,train,beenRecruitedSum,workTypeID,userID,open,type,createTime,updateTime,version,isDeleted,createBy,updateBy,startTime,endTime,jobRequirements,jobContent,publishTime)  values(#{id,jdbcType=VARCHAR},#{personNumDay},#{title},#{salaryType},#{recruitStartTime},#{recruitEndTime},#{salary},#{dailySalary},#{liquidatedDamages},#{recruitsSum},#{sexRequirements},#{workPalce},#{workDate},#{aggregate},#{setDate},#{contacts},#{contactNumber},#{settlement},#{matters},#{includeBoard},#{controlSleep},#{interview},#{baseTask},#{commission},#{train},#{beenRecruitedSum},#{workTypeID},#{userID},#{open},#{type},#{createTime},#{updateTime},#{version},#{isDeleted},#{createBy},#{updateBy},#{startTime},#{endTime},#{jobRequirements},#{jobContent},#{publishTime})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update position set	<trim  suffixOverrides="," ><if test="title != null ">title=#{title},</if><if test="salaryType != null ">salaryType=#{salaryType},</if><if test="recruitStartTime != null ">recruitStartTime=#{recruitStartTime},</if><if test="recruitEndTime != null ">recruitEndTime=#{recruitEndTime},</if><if test="salary != null ">salary=#{salary},</if><if test="dailySalary != null ">dailySalary=#{dailySalary},</if><if test="liquidatedDamages != null ">liquidatedDamages=#{liquidatedDamages},</if><if test="recruitsSum != null ">recruitsSum=#{recruitsSum},</if><if test="sexRequirements != null ">sexRequirements=#{sexRequirements},</if><if test="workPalce != null ">workPalce=#{workPalce},</if><if test="workDate != null ">workDate=#{workDate},</if><if test="aggregate != null ">aggregate=#{aggregate},</if><if test="setDate != null ">setDate=#{setDate},</if><if test="contacts != null ">contacts=#{contacts},</if><if test="contactNumber != null ">contactNumber=#{contactNumber},</if><if test="settlement != null ">settlement=#{settlement},</if><if test="matters != null ">matters=#{matters},</if><if test="includeBoard != null ">includeBoard=#{includeBoard},</if><if test="controlSleep != null ">controlSleep=#{controlSleep},</if><if test="interview != null ">interview=#{interview},</if><if test="baseTask != null ">baseTask=#{baseTask},</if><if test="commission != null ">commission=#{commission},</if><if test="train != null ">train=#{train},</if><if test="beenRecruitedSum != null ">beenRecruitedSum=#{beenRecruitedSum},</if><if test="workTypeID != null ">workTypeID=#{workTypeID},</if><if test="userID != null ">userID=#{userID},</if><if test="open != null ">open=#{open},</if><if test="type != null ">type=#{type},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="updateBy != null ">updateBy=#{updateBy},</if><if test="startTime != null ">startTime=#{startTime},</if><if test="endTime != null ">endTime=#{endTime},</if><if test="jobRequirements != null ">jobRequirements=#{jobRequirements},</if><if test="jobContent != null ">jobContent=#{jobContent},</if><if test="publishTime != null ">publishTime=#{publishTime},</if>        <if test="personNumDay != null ">personNumDay=#{personNumDay},</if>        <if test="isPush != null ">isPush=#{isPush},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from position where id = #{id}</delete>    <!-- 根据id查询  --><select id="get"   resultType="Position"  parameterType="String">    select <include refid="positionTemplateList"/>    from  position p    left join huntingtype huntingtype on p.workTypeID = huntingtype.id    where  p.id = #{id}  and p.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from position  p	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="Position" >	select	<include refid="columnList1"/>	from position p left join shiro_user su on p.userId = su.id	left join information i on i.userId = su.id    left join browserecord b on b.browseID = p.id	<include refid="whereClause"/>    and p.open=2 and p.type=0 and p.isDeleted = false	<if test="condition.search!=null">		and (  UPPER(p.title) LIKE UPPER(CONCAT(CONCAT('%',#{condition.search}),'%'))		or     UPPER(i.workNumber) LIKE UPPER(CONCAT(CONCAT('%',#{condition.search}),'%'))   )	</if>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="Position" >	select 	<include refid="columnList"/>	from position p	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="Position" >	select	<include refid="columnList"/>	from position p	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="Position" >	select	<include refid="columnList"/>	from position p	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select p.${idsColumn}	from position p    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select p.${idsColumn}	from position p    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="Position" >     select    <include refid="columnList"/>     from position p    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select>	<select id="findMyPositionList" resultType="Position">		SELECT		<include refid="columnList"/>,        IFNULl(sum(b.version),0) as 'browser'		FROM position p left join browserecord b on p.id = b.browseID and b.browseType = 1        <include refid="whereClause"/>        group by p.id        ORDER BY p.createTime DESC	</select>    <!--级联查询-->    <sql id="detailList">        p.id as 'id',p.publishTime,p.personNumDay as 'personNumDay',        p.version as 'version',p.title as 'title',p.salaryType as 'salaryType',p.recruitStartTime as 'recruitStartTime',p.recruitEndTime as 'recruitEndTime',p.salary as 'salary',p.dailySalary as 'dailySalary',p.liquidatedDamages as 'liquidatedDamages',p.recruitsSum as 'recruitsSum',p.sexRequirements as 'sexRequirements',p.workPalce as 'workPalce',p.workDate as 'workDate',p.aggregate as 'aggregate',p.setDate as 'setDate',p.contacts as 'contacts',p.contactNumber as 'contactNumber',p.settlement as 'settlement',p.matters as 'matters',p.jobRequirements as 'jobRequirements',p.jobContent as 'jobContent',p.includeBoard as 'includeBoard',p.controlSleep as 'controlSleep',p.interview as 'interview',p.baseTask as 'baseTask',p.commission as 'commission',p.train as 'train',p.beenRecruitedSum as 'beenRecruitedSum',p.workTypeID as 'workTypeID',p.userID as 'userID',p.open as 'open',p.type as 'type',p.startTime as 'startTime',p.endTime as 'endTime',        workPlace.id as 'workPlace.id',        workPlace.version as 'workPlace.version',workPlace.cityID as 'workPlace.cityID',workPlace.detailedAddress as 'workPlace.detailedAddress',workPlace.longitude as 'workPlace.longitude',workPlace.latitude as 'workPlace.latitude',        city.id as 'workPlace.city.id',        city.version as 'workPlace.city.version',city.pinyin as 'workPlace.city.pinyin',city.cityName as 'workPlace.city.cityName',city.zipCode as 'workPlace.city.zipCode',city.openState as 'workPlace.city.openState',city.cityType as 'workPlace.city.cityType',city.isHot as 'workPlace.city.isHot',        publish.id as 'publish.id',        publish.version as 'publish.version',publish.qRCode as 'publish.qRCode',publish.userID as 'publish.userID',publish.workNumber as 'publish.workNumber',publish.brief as 'publish.brief',publish.identityType as 'publish.identityType',publish.authentication as 'publish.authentication',publish.payPassword as 'publish.payPassword',        huntingtype.id as 'huntingtype.id',        huntingtype.version as 'huntingtype.version',huntingtype.name as 'huntingtype.name',huntingtype.HTFatCode as 'huntingtype.HTFatCode',huntingtype.state as 'huntingtype.state',huntingtype.codeGrade as 'huntingtype.codeGrade'    </sql>    <!--级联查询-->    <sql id="attentiondetailList">        p.id as 'id',p.createTime as 'createTime',p.personNumDay as 'personNumDay',        temp4.createTime as 'publishTime',        p.version as 'version',p.title as 'title',p.salaryType as 'salaryType',p.recruitStartTime as 'recruitStartTime',p.recruitEndTime as 'recruitEndTime',p.salary as 'salary',p.dailySalary as 'dailySalary',p.liquidatedDamages as 'liquidatedDamages',p.recruitsSum as 'recruitsSum',p.sexRequirements as 'sexRequirements',p.workPalce as 'workPalce',p.workDate as 'workDate',p.aggregate as 'aggregate',p.setDate as 'setDate',p.contacts as 'contacts',p.contactNumber as 'contactNumber',p.settlement as 'settlement',p.matters as 'matters',p.jobRequirements as 'jobRequirements',p.jobContent as 'jobContent',p.includeBoard as 'includeBoard',p.controlSleep as 'controlSleep',p.interview as 'interview',p.baseTask as 'baseTask',p.commission as 'commission',p.train as 'train',p.beenRecruitedSum as 'beenRecruitedSum',p.workTypeID as 'workTypeID',p.userID as 'userID',p.open as 'open',p.type as 'type',p.startTime as 'startTime',p.endTime as 'endTime',        workPlace.id as 'workPlace.id',        workPlace.version as 'workPlace.version',workPlace.cityID as 'workPlace.cityID',workPlace.detailedAddress as 'workPlace.detailedAddress',workPlace.longitude as 'workPlace.longitude',workPlace.latitude as 'workPlace.latitude',        city.id as 'workPlace.city.id',        city.version as 'workPlace.city.version',city.pinyin as 'workPlace.city.pinyin',city.cityName as 'workPlace.city.cityName',city.zipCode as 'workPlace.city.zipCode',city.openState as 'workPlace.city.openState',city.cityType as 'workPlace.city.cityType',city.isHot as 'workPlace.city.isHot',        publish.id as 'publish.id',        publish.version as 'publish.version',publish.qRCode as 'publish.qRCode',publish.userID as 'publish.userID',publish.workNumber as 'publish.workNumber',publish.brief as 'publish.brief',publish.identityType as 'publish.identityType',publish.authentication as 'publish.authentication',publish.payPassword as 'publish.payPassword',        huntingtype.id as 'huntingtype.id',        huntingtype.version as 'huntingtype.version',huntingtype.name as 'huntingtype.name',huntingtype.HTFatCode as 'huntingtype.HTFatCode',huntingtype.state as 'huntingtype.state',huntingtype.codeGrade as 'huntingtype.codeGrade',        user.nickName as 'weixin.nickname' ,weixin.headimgurl as 'weixin.headimgurl',user.id as 'weixin.userID'</sql>    <!--级联查询-->    <sql id="attentiondetailList1">        p.id as 'id',p.createTime as 'createTime',p.publishTime as 'publishTime',        p.version as 'version',p.title as 'title',p.salaryType as 'salaryType',p.recruitStartTime as 'recruitStartTime',p.recruitEndTime as 'recruitEndTime',p.salary as 'salary',p.dailySalary as 'dailySalary',p.liquidatedDamages as 'liquidatedDamages',p.recruitsSum as 'recruitsSum',p.sexRequirements as 'sexRequirements',p.workPalce as 'workPalce',p.workDate as 'workDate',p.aggregate as 'aggregate',p.setDate as 'setDate',p.contacts as 'contacts',p.contactNumber as 'contactNumber',p.settlement as 'settlement',p.matters as 'matters',p.jobRequirements as 'jobRequirements',p.jobContent as 'jobContent',p.includeBoard as 'includeBoard',p.controlSleep as 'controlSleep',p.interview as 'interview',p.baseTask as 'baseTask',p.commission as 'commission',p.train as 'train',p.beenRecruitedSum as 'beenRecruitedSum',p.workTypeID as 'workTypeID',p.userID as 'userID',p.open as 'open',p.type as 'type',p.startTime as 'startTime',p.endTime as 'endTime',        workPlace.id as 'workPlace.id',        workPlace.version as 'workPlace.version',workPlace.cityID as 'workPlace.cityID',workPlace.detailedAddress as 'workPlace.detailedAddress',workPlace.longitude as 'workPlace.longitude',workPlace.latitude as 'workPlace.latitude',        city.id as 'workPlace.city.id',        city.version as 'workPlace.city.version',city.pinyin as 'workPlace.city.pinyin',city.cityName as 'workPlace.city.cityName',city.zipCode as 'workPlace.city.zipCode',city.openState as 'workPlace.city.openState',city.cityType as 'workPlace.city.cityType',city.isHot as 'workPlace.city.isHot',        publish.id as 'publish.id',        publish.version as 'publish.version',publish.qRCode as 'publish.qRCode',publish.userID as 'publish.userID',publish.workNumber as 'publish.workNumber',publish.brief as 'publish.brief',publish.identityType as 'publish.identityType',publish.authentication as 'publish.authentication',publish.payPassword as 'publish.payPassword',        huntingtype.id as 'huntingtype.id',        huntingtype.version as 'huntingtype.version',huntingtype.name as 'huntingtype.name',huntingtype.HTFatCode as 'huntingtype.HTFatCode',huntingtype.state as 'huntingtype.state',huntingtype.codeGrade as 'huntingtype.codeGrade',        user.nickName as 'weixin.nickname' ,weixin.headimgurl as 'weixin.headimgurl',user.id as 'weixin.userID'    </sql>    <!--City映射-->    <resultMap id="CityMap" type="City">        <id property="id" column="workPlace.city.id" />        <result property="version" column="workPlace.city.version" />        <result property="pinyin" column="workPlace.city.pinyin" />        <result property="cityName" column="workPlace.city.cityName" />        <result property="zipCode" column="workPlace.city.zipCode" />        <result property="openState" column="workPlace.city.openState" />        <result property="cityType" column="workPlace.city.cityType" />        <result property="isHot" column="workPlace.city.isHot" />    </resultMap>    <!--Localtioninfo映射-->    <resultMap id="LocaltioninfoMap" type="Localtioninfo">        <id property="id" column="workPlace.id" />        <result property="version" column="workPlace.version" />        <result property="cityID" column="workPlace.cityID" />        <result property="detailedAddress" column="workPlace.detailedAddress" />        <result property="longitude" column="workPlace.longitude" />        <result property="latitude" column="workPlace.latitude" />        <association property="city"  javaType="City" resultMap="CityMap"/>    </resultMap>    <!--Information映射-->    <resultMap id="InformationMap" type="Information">        <id property="id" column="publish.id" />        <result property="version" column="publish.version" />        <result property="qRCode" column="publish.qRCode" />        <result property="userID" column="publish.userID" />        <result property="workNumber" column="publish.workNumber" />        <result property="brief" column="publish.brief" />        <result property="identityType" column="publish.identityType" />        <result property="authentication" column="publish.authentication" />        <result property="payPassword" column="publish.payPassword" />    </resultMap>    <!--Huntingtype映射-->    <resultMap id="HuntingtypeMap" type="Huntingtype">        <id property="id" column="huntingtype.id" />        <result property="version" column="huntingtype.version" />        <result property="name" column="huntingtype.name" />        <result property="HTFatCode" column="huntingtype.HTFatCode" />        <result property="state" column="huntingtype.state" />        <result property="codeGrade" column="huntingtype.codeGrade" />    </resultMap>    <!--Position映射-->    <resultMap id="PositionMap" type="Position">        <id property="id" column="id" />        <result property="version" column="version" />        <result property="title" column="title" />        <result property="salaryType" column="salaryType" />        <result property="recruitStartTime" column="recruitStartTime" />        <result property="recruitEndTime" column="recruitEndTime" />        <result property="salary" column="salary" />        <result property="dailySalary" column="dailySalary" />        <result property="liquidatedDamages" column="liquidatedDamages" />        <result property="recruitsSum" column="recruitsSum" />        <result property="sexRequirements" column="sexRequirements" />        <result property="workPalce" column="workPalce" />        <result property="workDate" column="workDate" />        <result property="aggregate" column="aggregate" />        <result property="setDate" column="setDate" />        <result property="contacts" column="contacts" />        <result property="contactNumber" column="contactNumber" />        <result property="settlement" column="settlement" />        <result property="matters" column="matters" />        <result property="jobRequirements" column="jobRequirements" />        <result property="jobContent" column="jobContent" />        <result property="includeBoard" column="includeBoard" />        <result property="controlSleep" column="controlSleep" />        <result property="interview" column="interview" />        <result property="baseTask" column="baseTask" />        <result property="commission" column="commission" />        <result property="train" column="train" />        <result property="beenRecruitedSum" column="beenRecruitedSum" />        <result property="workTypeID" column="workTypeID" />        <result property="userID" column="userID" />        <result property="open" column="open" />        <result property="type" column="type" />        <result property="startTime" column="startTime" />        <result property="endTime" column="endTime" />        <result property="createTime" column="createTime" />        <result property="attention" column="attention" />        <result property="browseNum" column="browseNum" />        <result property="publishTime" column="publishTime" />        <result property="personNumDay" column="personNumDay" />        <result property="realName" column="realName" />        <result property="hasRedPacketForward" column="hasRedPacketForward" />        <result property="hasRedPacket" column="hasRedPacket" />        <result property="forwardID" column="forwardID" />        <association property="workPlace"  javaType="Localtioninfo" resultMap="LocaltioninfoMap"/>        <association property="publish"  javaType="Information" resultMap="InformationMap"/>        <association property="huntingtype"  javaType="Huntingtype" resultMap="HuntingtypeMap"/>        <association property="weixin"  javaType="Weixin" resultMap="WeixinMap"/>    </resultMap>    <resultMap id="WeixinMap" type="Weixin">        <result property="headimgurl" column="weixin.headimgurl" />        <result property="nickname" column="weixin.nickname" />        <result property="userID" column="weixin.userID" />    </resultMap>    <!--对象的多级映射 mapList mapPage mapOne-->    <select id="mapPage" resultMap="PositionMap" >        select        <include refid="detailList"/>        ,b.version as 'browseNum'        from  position p        left join information i on i.userId = p.userId        left join localtioninfo workPlace on p.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join information publish on p.userID = publish.userID        left join huntingtype huntingtype on p.workTypeID = huntingtype.id        left join view_browserecord b on b.browseID = p.id        <include refid="whereClause"/>        <if test="condition.cityIDs!=null">            AND  city.id in (${condition.cityIDs})        </if>        <if test="condition.searchkey!=null">            and (  UPPER(p.title) LIKE UPPER(CONCAT(CONCAT('%',#{condition.searchkey}),'%'))            or     UPPER(i.workNumber) LIKE UPPER(CONCAT(CONCAT('%',#{condition.searchkey}),'%'))            or     UPPER(huntingtype.name) LIKE UPPER(CONCAT(CONCAT('%',#{condition.searchkey}),'%')) )        </if>        <if test="condition.between==null">            and now() &lt; p.recruitEndTime        </if>        <if test="condition.between=='all'">            and now() &gt; p.recruitEndTime        </if>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!--对象的多级映射 mapList mapPage mapOne-->    <select id="simpleMapPage" resultType="java.util.Map">        select        p.title,p.id,huntingtype.codeGrade,p.recruitStartTime,p.recruitEndTime,p.dailySalary,p.sexRequirements,p.personNumDay,        p.settlement,city.cityName,workPlace.longitude,workPlace.latitude,publish.workNumber,huntingtype.name,p.publishTime        from  position p        left join information i on i.userId = p.userId        left join localtioninfo workPlace on p.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join information publish on p.userID = publish.userID        left join huntingtype huntingtype on p.workTypeID = huntingtype.id        left join view_browserecord b on b.browseID = p.id        <include refid="whereClause"/>        <if test="condition.cityIDs!=null">            AND  city.id in (${condition.cityIDs})        </if>        <if test="condition.searchkey!=null">            and (  UPPER(p.title) LIKE UPPER(CONCAT(CONCAT('%',#{condition.searchkey}),'%'))            or     UPPER(i.workNumber) LIKE UPPER(CONCAT(CONCAT('%',#{condition.searchkey}),'%'))            or     UPPER(huntingtype.name) LIKE UPPER(CONCAT(CONCAT('%',#{condition.searchkey}),'%')) )        </if>        <if test="condition.between==null">            and now() &lt; p.recruitEndTime        </if>        <if test="condition.between=='all'">            and now() &gt; p.recruitEndTime        </if>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!--对象的多级映射 mapList mapPage mapOne-->    <select id="mapByDistinct" resultMap="PositionMap" >        select        <include refid="detailList"/>        ,b.version as 'browseNum'        from  position p        left join localtioninfo workPlace on p.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join information publish on p.userID = publish.userID        left join huntingtype huntingtype on p.workTypeID = huntingtype.id        left join view_browserecord b on b.browseID = p.id        <include refid="whereClause"/>        <if test="condition.minLng!=null">            and workPlace.longitude BETWEEN #{condition.minLng} AND #{condition.maxLng}            and workPlace.latitude BETWEEN #{condition.minLat} AND #{condition.maxLat}        </if>        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!--对象的多级映射 mapList mapPage mapOne-->    <select id="attentionPage" resultMap="PositionMap" >        select        <include refid="attentiondetailList"/>,        <if test="condition.Recommend!=null">            0 as 'attention'        </if>        <if test="condition.Recommend==null">            1 as 'attention'        </if>        ,b.version as 'browseNum'        ,user.realName as 'realName',        (SELECT        red_packet.`id`        FROM        red_packet        LEFT JOIN forward        ON red_packet.`forwardId` = forward.`id`        WHERE forward.`positionId` = temp4.id        AND forward.`userId` = temp4.userID        AND forward.isDeleted = FALSE        AND red_packet.`isDeleted` = FALSE        AND red_packet.`state` = TRUE        )AS 'hasRedPacketForward',        (SELECT        positionID        FROM        red_packet red_packet        WHERE red_packet.positionID = temp4.id        AND red_packet.isDeleted = FALSE AND red_packet.`state` = TRUE )AS 'hasRedPacket',        (SELECT        forward.`id`        FROM        forward        WHERE forward.`positionId` = temp4.id        AND forward.`userId` = temp4.userID        AND forward.isDeleted = FALSE ) as 'forwardID'        from(            SELECT              *            FROM            (                SELECT                  *                FROM                (                    SELECT                    p.id,                    temp.createTime,                    temp.userId as 'userID'                    FROM                    position p                    INNER JOIN (                    SELECT                    f.positionId,                    f.createTime,                    f.userId                    FROM                    forward f                    WHERE                    f.userId IN (                    SELECT                    t.userID                    FROM                    attention t                    WHERE                    t.concernID = #{condition.userID} and t.isDeleted = false                    ) AND f.isDeleted = FALSE                    GROUP BY                    f.positionID                    ) temp ON p.id = temp.positionId                    where p.open = 2                    UNION                    SELECT                    p.id,                    p.createTime,                    p.userID as 'userID'                    FROM                    position p                    WHERE                    p.userID IN (                    SELECT                    t.userID                    FROM                    attention t                    WHERE                    t.concernID = #{condition.userID} and t.isDeleted = false                    )                    and p.open = 2                    ) temp2                    ORDER BY                    createTime DESC                ) temp3        ) temp4        left join position p on temp4.id = p.id        left join localtioninfo workPlace on p.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join information publish on p.userID = publish.userID        left join huntingtype huntingtype on p.workTypeID = huntingtype.id        left join shiro_user user on user.id = temp4.userID        left join weixin weixin on weixin.userID = temp4.userID        left join view_browserecord b on b.browseID = p.id        order by temp4.createTime DESC    </select>    <!--对象的多级映射 mapList mapPage mapOne-->    <select id="attentionPage1" resultMap="PositionMap" >        select        <include refid="attentiondetailList1"/>,        <if test="condition.Recommend!=null">            0 as 'attention'        </if>        <if test="condition.Recommend==null">            1 as 'attention'        </if>        ,b.version as 'browseNum'        from  position p        left join personalauthen personalauthen        ON personalauthen.`userID` = p.userID        left join localtioninfo workPlace on p.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join information publish on p.userID = publish.userID        left join huntingtype huntingtype on p.workTypeID = huntingtype.id        left join shiro_user user on user.id = p.userID        left join weixin weixin on weixin.userID = p.userID        left join view_browserecord b on b.browseID = p.id        <include refid="whereClause"/>        <!--<if test="condition.cityID!=null">            AND  city.id in ( select cc.id from city cc  where cc.parentID = #{condition.cityID})        </if>-->        <if test="orderByClause!=null">${orderByClause}</if>    </select>    <!--对象的多级映射 mapList mapPage mapOne-->    <select id="mapList" resultMap="PositionMap" >        select        <include refid="detailList"/>        ,(SELECT        red_packet.`id`        FROM        red_packet        LEFT JOIN forward        ON red_packet.`forwardId` = forward.`id`        WHERE forward.`positionId` = p.id        AND forward.`userId` = #{condition.userID}        AND forward.isDeleted = FALSE        AND red_packet.`isDeleted` = FALSE        AND red_packet.`state` = TRUE        )AS 'hasRedPacketForward',        (SELECT        positionID        FROM        red_packet red_packet        WHERE red_packet.positionID = p.id        AND red_packet.isDeleted = FALSE AND red_packet.`state` = TRUE )AS 'hasRedPacket',        (SELECT        forward.`id`        FROM        forward        WHERE forward.`positionId` = p.id        AND forward.`userId` = #{condition.userID}        AND forward.isDeleted = FALSE ) as 'forwardID'        from  position p        left join localtioninfo workPlace on p.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join information publish on p.userID = publish.userID        left join huntingtype huntingtype on p.workTypeID = huntingtype.id        <include refid="whereClause"/>        OR p.id IN (SELECT positionId FROM forward forward LEFT JOIN POSITION p ON p.id = forward.`positionId` WHERE forward.userId = #{condition.userID} and p.open = 2 and p.isDeleted = FALSE AND forward.isDeleted = FALSE )        ORDER BY p.createTime DESC    </select>    <!--对象的多级映射 mapList mapPage mapOne-->    <select id="workNumberPosition" resultMap="PositionMap" >        select        <include refid="detailList"/>        from  position p        left join workposition workposition ON workposition.`positionID` = p.id        left join localtioninfo workPlace on p.workPalce = workPlace.id        left join city city on workPlace.cityID = city.id        left join information publish on p.userID = publish.userID        left join huntingtype huntingtype on p.workTypeID = huntingtype.id        <include refid="whereClause"/>        AND workposition.`workID` = #{condition.workNumberID}        AND workposition.`status` = 2        ORDER BY p.createTime DESC    </select>    <!--对象的多级映射 mapList mapPage mapOne-->    <select id="workNumberDSHPositionCount" resultType="java.lang.Long" >        select        count(1)        from workposition workposition		left join position positionSH on workposition.positionID = positionSH.id        where workposition.`workID` = #{workNumberID}        AND workposition.`status` = 1		AND positionSH.open in ('2')		AND positionSH.type = 0		AND positionSH.isDeleted = 0    </select>    <!--Position映射-->    <resultMap id="PositionOfZPMap" type="Position">        <id property="id" column="id" />        <result property="version" column="version" />        <result property="title" column="title" />        <result property="salaryType" column="salaryType" />        <result property="recruitStartTime" column="recruitStartTime" />        <result property="recruitEndTime" column="recruitEndTime" />        <result property="salary" column="salary" />        <result property="dailySalary" column="dailySalary" />        <result property="liquidatedDamages" column="liquidatedDamages" />        <result property="recruitsSum" column="recruitsSum" />        <result property="sexRequirements" column="sexRequirements" />        <result property="workPalce" column="workPalce" />        <result property="workDate" column="workDate" />        <result property="aggregate" column="aggregate" />        <result property="setDate" column="setDate" />        <result property="contacts" column="contacts" />        <result property="contactNumber" column="contactNumber" />        <result property="settlement" column="settlement" />        <result property="settlementCount" column="settlementCount" />        <result property="matters" column="matters" />        <result property="jobRequirements" column="jobRequirements" />        <result property="jobContent" column="jobContent" />        <result property="includeBoard" column="includeBoard" />        <result property="controlSleep" column="controlSleep" />        <result property="interview" column="interview" />        <result property="baseTask" column="baseTask" />        <result property="commission" column="commission" />        <result property="train" column="train" />        <result property="beenRecruitedSum" column="beenRecruitedSum" />        <result property="noSure" column="noSure" />        <result property="waitInterview" column="waitInterview" />        <result property="admissioned" column="admissioned" />        <result property="waitToPosition" column="waitToPosition" />        <result property="working" column="working" />        <result property="waitSettlement" column="waitSettlement" />        <result property="settlements" column="settlements" />        <result property="waitEvaluate" column="waitEvaluate" />        <result property="evaluateed" column="evaluateed" />        <result property="appeal" column="appeal" />        <result property="workTypeID" column="workTypeID" />        <result property="userID" column="userID" />        <result property="open" column="open" />        <result property="type" column="type" />        <result property="startTime" column="startTime" />        <result property="endTime" column="endTime" />        <result property="personNumDay" column="personNumDay" />        <association property="workPlace"  javaType="Localtioninfo" resultMap="LocaltioninfoMap"/>        <association property="huntingtype"  javaType="Huntingtype" resultMap="HuntingtypeMap"/>    </resultMap>    <!--级联查询-->    <sql id="positionOfZPList">        p.id as 'id',p.personNumDay as 'personNumDay',        p.version as 'version',p.title as 'title',p.salaryType as 'salaryType',p.recruitStartTime as 'recruitStartTime',p.recruitEndTime as 'recruitEndTime',p.salary as 'salary',p.dailySalary as 'dailySalary',p.liquidatedDamages as 'liquidatedDamages',p.recruitsSum as 'recruitsSum',p.sexRequirements as 'sexRequirements',p.workPalce as 'workPalce',p.workDate as 'workDate',p.aggregate as 'aggregate',p.setDate as 'setDate',p.contacts as 'contacts',p.contactNumber as 'contactNumber',p.settlement as 'settlement',p.matters as 'matters',p.jobRequirements as 'jobRequirements',p.jobContent as 'jobContent',p.includeBoard as 'includeBoard',p.controlSleep as 'controlSleep',p.interview as 'interview',p.baseTask as 'baseTask',p.commission as 'commission',p.train as 'train',p.beenRecruitedSum as 'beenRecruitedSum',p.workTypeID as 'workTypeID',p.userID as 'userID',p.open as 'open',p.type as 'type',p.startTime as 'startTime',p.endTime as 'endTime',        workPlace.id as 'workPlace.id',        workPlace.version as 'workPlace.version',workPlace.cityID as 'workPlace.cityID',workPlace.detailedAddress as 'workPlace.detailedAddress',workPlace.longitude as 'workPlace.longitude',workPlace.latitude as 'workPlace.latitude',        city.id as 'workPlace.city.id',        city.version as 'workPlace.city.version',city.pinyin as 'workPlace.city.pinyin',city.cityName as 'workPlace.city.cityName',city.zipCode as 'workPlace.city.zipCode',city.openState as 'workPlace.city.openState',city.cityType as 'workPlace.city.cityType',city.isHot as 'workPlace.city.isHot',        huntingtype.id as 'huntingtype.id',        huntingtype.version as 'huntingtype.version',huntingtype.name as 'huntingtype.name',huntingtype.HTFatCode as 'huntingtype.HTFatCode',huntingtype.state as 'huntingtype.state',huntingtype.codeGrade as 'huntingtype.codeGrade'    </sql>    <!--对象的多级映射 getMyPositionForMeOfZP-->    <select id="getMyPositionForMeOfZPPage" resultMap="PositionOfZPMap" >        select        <include refid="positionOfZPList"/>,        (SELECT COUNT(*) FROM beenrecruited b WHERE p.id = b.`positionID` AND b.state = 1 AND b.dismiss IS NULL GROUP BY b.`positionID` ) AS noSure,        (SELECT COUNT(*) FROM beenrecruited b WHERE p.id = b.`positionID` AND b.state = 2 AND b.dismiss IS NULL  GROUP BY b.`positionID` ) AS waitInterview,        <!--                (SELECT COUNT(*) FROM beenrecruited b LEFT JOIN resume beenrecruitedResume ON beenrecruitedResume.`id` = b.resumeID WHERE p.id = b.`positionID` AND b.state = 4 AND b.dismiss != TRUE ) AS waitToPosition,         -->                ( (select count(*) from beenrecruited b where b.positionID = p.id and b.state in (3,4))-( select count(*) from signin s where s.positionID = p.id and DATE(s.createTime) = DATE(now())) ) as waitToPosition,                (SELECT COUNT(*) FROM beenrecruited b WHERE b.positionID = p.id AND b.state = 4 AND b.dismiss IS NULL) AS working,                (SELECT COUNT(a.userID ) FROM applysettlement a WHERE p.id = a.`positionID` AND a.state = FALSE GROUP BY a.`positionID` ) AS waitSettlement,                (SELECT COUNT(*) FROM settlementperson s WHERE p.id = s.`positionID` GROUP BY s.`positionID` ) AS settlementCount,            <!--(SELECT COUNT(*) FROM beenrecruited b  WHERE p.id = b.`positionID` AND b.dismiss  = 0 AND b.state = 6 GROUP BY b.`positionID` ) AS waitEvaluate,             (SELECT COUNT(*) FROM evaluate evaluate WHERE p.id = evaluate.`positionID` AND evaluate.state = 0 AND evaluate.`isDeleted` = FALSE GROUP BY  evaluate.`positionID`) AS evaluateed             -->     (select count(*) from evaluate e where p.id = e.positionID and  e.reply is null ) as waitEvaluate,     (select count(*) from evaluate e where p.id = e.positionID and  e.reply is not null ) as evaluateed     from  position p     left join localtioninfo workPlace on p.workPalce = workPlace.id     left join city city on workPlace.cityID = city.id     left join huntingtype huntingtype on p.workTypeID = huntingtype.id     WHERE p.userID = #{condition.userID} AND p.open = #{condition.open} AND p.type = #{condition.type} AND p.isDeleted = #{condition.isDeleted} </select> <select id="getMyPositionTemplateList" resultType="Position">     select     <include refid="columnList"/>     from position p     <include refid="whereClause"/>     <if test="orderByClause!=null">${orderByClause}</if> </select> <!--级联查询-->    <sql id="positionTemplateList">        p.id as 'id',p.isPush,p.personNumDay as 'personNumDay',        p.version as 'version',p.title as 'title',p.salaryType as 'salaryType',p.recruitStartTime as 'recruitStartTime',p.recruitEndTime as 'recruitEndTime',p.salary as 'salary',p.dailySalary as 'dailySalary',p.liquidatedDamages as 'liquidatedDamages',p.recruitsSum as 'recruitsSum',p.sexRequirements as 'sexRequirements',p.workPalce as 'workPalce',p.workDate as 'workDate',p.aggregate as 'aggregate',p.setDate as 'setDate',p.contacts as 'contacts',p.contactNumber as 'contactNumber',p.settlement as 'settlement',p.matters as 'matters',p.jobRequirements as 'jobRequirements',p.jobContent as 'jobContent',p.includeBoard as 'includeBoard',p.controlSleep as 'controlSleep',p.interview as 'interview',p.baseTask as 'baseTask',p.commission as 'commission',p.train as 'train',p.beenRecruitedSum as 'beenRecruitedSum',p.workTypeID as 'workTypeID',p.userID as 'userID',p.open as 'open',p.type as 'type',p.startTime as 'startTime',p.endTime as 'endTime',        huntingtype.id as 'huntingtype.id',        huntingtype.version as 'huntingtype.version',huntingtype.name as 'huntingtype.name',huntingtype.HTFatCode as 'huntingtype.HTFatCode',huntingtype.state as 'huntingtype.state',huntingtype.codeGrade as 'huntingtype.codeGrade'    </sql>    <!--Position映射-->    <resultMap id="PositionTemplateMap" type="Position">        <id property="id" column="id" />        <result property="version" column="version" />        <result property="title" column="title" />        <result property="salaryType" column="salaryType" />        <result property="recruitStartTime" column="recruitStartTime" />        <result property="recruitEndTime" column="recruitEndTime" />        <result property="salary" column="salary" />        <result property="dailySalary" column="dailySalary" />        <result property="liquidatedDamages" column="liquidatedDamages" />        <result property="recruitsSum" column="recruitsSum" />        <result property="sexRequirements" column="sexRequirements" />        <result property="workPalce" column="workPalce" />        <result property="workDate" column="workDate" />        <result property="aggregate" column="aggregate" />        <result property="setDate" column="setDate" />        <result property="contacts" column="contacts" />        <result property="contactNumber" column="contactNumber" />        <result property="settlement" column="settlement" />        <result property="matters" column="matters" />        <result property="jobRequirements" column="jobRequirements" />        <result property="jobContent" column="jobContent" />        <result property="includeBoard" column="includeBoard" />        <result property="controlSleep" column="controlSleep" />        <result property="interview" column="interview" />        <result property="baseTask" column="baseTask" />        <result property="commission" column="commission" />        <result property="train" column="train" />        <result property="beenRecruitedSum" column="beenRecruitedSum" />        <result property="workTypeID" column="workTypeID" />        <result property="userID" column="userID" />        <result property="open" column="open" />        <result property="type" column="type" />        <result property="startTime" column="startTime" />        <result property="endTime" column="endTime" />        <result property="personNumDay" column="personNumDay" />        <association property="huntingtype" javaType="Huntingtype" resultMap="HuntingtypeMap"/>    </resultMap>    <!--对象的多级映射 mapList mapPage mapOne-->    <select id="getOnePositionTemplate" resultMap="PositionTemplateMap" >        select        <include refid="positionTemplateList"/>        from  position p        left join huntingtype huntingtype on p.workTypeID = huntingtype.id        <include refid="whereClause"/>        limit 0,1;    </select>        <delete id="deletePositionTemplateOfTitleIsNull">      DELETE FROM `position` WHERE title = "";    </delete>    <!-- -->    <!--级联查询-->    <sql id="getColumnList">        p.id as 'id',p.personNumDay as 'personNumDay',        p.version as 'version',p.title as 'title',p.salaryType as 'salaryType',p.recruitStartTime as 'recruitStartTime',p.recruitEndTime as 'recruitEndTime',p.salary as 'salary',p.dailySalary as 'dailySalary',p.liquidatedDamages as 'liquidatedDamages',p.recruitsSum as 'recruitsSum',p.sexRequirements as 'sexRequirements',p.workPalce as 'workPalce',p.workDate as 'workDate',p.aggregate as 'aggregate',p.setDate as 'setDate',p.contacts as 'contacts',p.contactNumber as 'contactNumber',p.settlement as 'settlement',p.matters as 'matters',p.jobRequirements as 'jobRequirements',p.jobContent as 'jobContent',p.includeBoard as 'includeBoard',p.controlSleep as 'controlSleep',p.interview as 'interview',p.baseTask as 'baseTask',p.commission as 'commission',p.train as 'train',p.beenRecruitedSum as 'beenRecruitedSum',p.workTypeID as 'workTypeID',p.userID as 'userID',p.open as 'open',p.type as 'type',p.startTime as 'startTime',p.endTime as 'endTime',        labelList.id as 'labelList.id',        labelList.version as 'labelList.version',labelList.name as 'labelList.name',labelList.positionID as 'labelList.positionID',labelList.type as 'labelList.type',        workPlace.id as 'workPlace.id',        workPlace.version as 'workPlace.version',workPlace.cityID as 'workPlace.cityID',workPlace.detailedAddress as 'workPlace.detailedAddress',workPlace.longitude as 'workPlace.longitude',workPlace.latitude as 'workPlace.latitude',        city.id as 'workPlace.city.id',        city.version as 'workPlace.city.version',city.pinyin as 'workPlace.city.pinyin',city.cityName as 'workPlace.city.cityName',city.zipCode as 'workPlace.city.zipCode',city.openState as 'workPlace.city.openState',city.cityType as 'workPlace.city.cityType',city.isHot as 'workPlace.city.isHot',city.parentID as 'workPlace.city.parentID',city.mergerName as 'workPlace.city.mergerName',city.cityCode as 'workPlace.city.cityCode',city.lng as 'workPlace.city.lng',city.lat as 'workPlace.city.lat',        huntingtype.id as 'huntingtype.id',        huntingtype.version as 'huntingtype.version',huntingtype.name as 'huntingtype.name',huntingtype.HTFatCode as 'huntingtype.HTFatCode',huntingtype.state as 'huntingtype.state',huntingtype.codeGrade as 'huntingtype.codeGrade',        gather.id as 'gather.id',        gather.version as 'gather.version',gather.cityID as 'gather.cityID',gather.detailedAddress as 'gather.detailedAddress',gather.longitude as 'gather.longitude',gather.latitude as 'gather.latitude',        gatherCity.id as 'gather.city.id',        gatherCity.version as 'gather.city.version',gatherCity.pinyin as 'gather.city.pinyin',gatherCity.cityName as 'gather.city.cityName',gatherCity.zipCode as 'gather.city.zipCode',gatherCity.openState as 'gather.city.openState',gatherCity.cityType as 'gather.city.cityType',gatherCity.isHot as 'gather.city.isHot',gatherCity.parentID as 'gather.city.parentID',gatherCity.mergerName as 'gather.city.mergerName',gatherCity.cityCode as 'gather.city.cityCode',gatherCity.lng as 'gather.city.lng',gatherCity.lat as 'gather.city.lat',        interviewAddr.id as 'interviewAddr.id',        interviewAddr.version as 'interviewAddr.version',interviewAddr.interviewAddress as 'interviewAddr.interviewAddress',interviewAddr.instructions as 'interviewAddr.instructions',interviewAddr.interTime as 'interviewAddr.interTime',interviewAddr.positionID as 'interviewAddr.positionID',interviewAddr.isCultivate as 'interviewAddr.isCultivate',        trainAddr.id as 'trainAddr.id',        trainAddr.version as 'trainAddr.version',trainAddr.interviewAddress as 'trainAddr.interviewAddress',trainAddr.instructions as 'trainAddr.instructions',trainAddr.interTime as 'trainAddr.interTime',trainAddr.positionID as 'trainAddr.positionID',trainAddr.isCultivate as 'trainAddr.isCultivate'    </sql>    <!--City映射-->    <resultMap id="gatherCityMap" type="City">        <id property="id" column="gather.city.id" />        <result property="version" column="gather.city.version" />        <result property="pinyin" column="gather.city.pinyin" />        <result property="cityName" column="gather.city.cityName" />        <result property="zipCode" column="gather.city.zipCode" />        <result property="openState" column="gather.city.openState" />        <result property="cityType" column="gather.city.cityType" />        <result property="isHot" column="gather.city.isHot" />        <result property="parentID" column="gather.city.parentID" />        <result property="mergerName" column="gather.city.mergerName" />        <result property="cityCode" column="gather.city.cityCode" />        <result property="lng" column="gather.city.lng" />        <result property="lat" column="gather.city.lat" />    </resultMap>    <!--Localtioninfo映射-->    <resultMap id="gatherLocaltioninfoMap" type="Localtioninfo">        <id property="id" column="gather.id" />        <result property="version" column="gather.version" />        <result property="cityID" column="gather.cityID" />        <result property="detailedAddress" column="gather.detailedAddress" />        <result property="longitude" column="gather.longitude" />        <result property="latitude" column="gather.latitude" />        <association property="city"  javaType="City" resultMap="gatherCityMap"/>    </resultMap>    <!--Interview映射-->    <resultMap id="InterviewMap" type="Interview">        <id property="id" column="interviewAddr.id" />        <result property="version" column="interviewAddr.version" />        <result property="interviewAddress" column="interviewAddr.interviewAddress" />        <result property="instructions" column="interviewAddr.instructions" />        <result property="interTime" column="interviewAddr.interTime" />        <result property="positionID" column="interviewAddr.positionID" />        <result property="isCultivate" column="interviewAddr.isCultivate" />    </resultMap>    <!--Interview映射-->    <resultMap id="trainInterviewMap" type="Interview">        <id property="id" column="trainAddr.id" />        <result property="version" column="trainAddr.version" />        <result property="interviewAddress" column="trainAddr.interviewAddress" />        <result property="instructions" column="trainAddr.instructions" />        <result property="interTime" column="trainAddr.interTime" />        <result property="positionID" column="trainAddr.positionID" />        <result property="isCultivate" column="trainAddr.isCultivate" />    </resultMap>    <!--signLabel映射-->    <resultMap id="signLabelMap" type="Label">        <id property="id" column="labelList.id" />        <result property="version" column="labelList.version" />        <result property="name" column="labelList.name" />        <result property="type" column="labelList.type" />        <result property="positionID" column="labelList.positionID" />    </resultMap>    <!--Position映射-->    <resultMap id="getPositionMap" type="Position">        <id property="id" column="id" />        <result property="version" column="version" />        <result property="title" column="title" />        <result property="salaryType" column="salaryType" />        <result property="recruitStartTime" column="recruitStartTime" />        <result property="recruitEndTime" column="recruitEndTime" />        <result property="salary" column="salary" />        <result property="dailySalary" column="dailySalary" />        <result property="liquidatedDamages" column="liquidatedDamages" />        <result property="recruitsSum" column="recruitsSum" />        <result property="sexRequirements" column="sexRequirements" />        <result property="workPalce" column="workPalce" />        <result property="workDate" column="workDate" />        <result property="aggregate" column="aggregate" />        <result property="setDate" column="setDate" />        <result property="contacts" column="contacts" />        <result property="contactNumber" column="contactNumber" />        <result property="settlement" column="settlement" />        <result property="matters" column="matters" />        <result property="jobRequirements" column="jobRequirements" />        <result property="jobContent" column="jobContent" />        <result property="includeBoard" column="includeBoard" />        <result property="controlSleep" column="controlSleep" />        <result property="interview" column="interview" />        <result property="baseTask" column="baseTask" />        <result property="commission" column="commission" />        <result property="train" column="train" />        <result property="beenRecruitedSum" column="beenRecruitedSum" />        <result property="workTypeID" column="workTypeID" />        <result property="userID" column="userID" />        <result property="open" column="open" />        <result property="type" column="type" />        <result property="startTime" column="startTime" />        <result property="endTime" column="endTime" />        <result property="personNumDay" column="personNumDay" />        <association property="workPlace"  javaType="Localtioninfo" resultMap="LocaltioninfoMap"/>        <association property="huntingtype"  javaType="Huntingtype" resultMap="HuntingtypeMap"/>        <association property="gather"  javaType="Localtioninfo" resultMap="gatherLocaltioninfoMap"/>        <association property="interviewAddr"  javaType="Interview" resultMap="InterviewMap"/>        <association property="trainAddr"  javaType="Interview" resultMap="trainInterviewMap"/>        <collection property="labelList" resultMap="signLabelMap" />    </resultMap>    <select id="getInitPosition" resultMap="getPositionMap"  parameterType="String">        select <include refid="getColumnList"/>        from  position p        left join localtioninfo workPlace on p.workPalce = workPlace.id        left join label labelList on p.id = labelList.positionID        left join city city on workPlace.cityID = city.id        left join huntingtype huntingtype on p.workTypeID = huntingtype.id        left join localtioninfo gather on p.aggregate = gather.id        left join city gatherCity on gather.cityID = gatherCity.id        left join interview interviewAddr on p.interview = interviewAddr.id        left join interview trainAddr on p.train = trainAddr.id        where  p.id = #{id}  and p.isDeleted = false    </select>    <select id="getInPositionCount"  resultType="java.lang.Long" >        select sum(num) from (        select count(b.id) as num from position p	    left join beenrecruited b on p.id = b.positionID        where b.positionID = #{condition.positionID}        and b.state in( 1,4)        and b.dismiss is null        and b.`work` is null        and now() BETWEEN p.recruitStartTime and p.recruitEndTime        union        select count(s.id)  as num from signin s        where s.positionID = #{condition.positionID}        and s.state  not in(4,9)        )temp;    </select>    <select id="selectPositionForChat" parameterType="java.lang.String" resultType="java.util.Map">        SELECT            p.`title`,            p.`startTime`,            p.`endTime`,            p.`dailySalary`,            p.`sexRequirements`,            p.`recruitsSum`,            p.`beenRecruitedSum`,            h.name        FROM            position p            LEFT JOIN huntingtype h                ON h.id = p.`workTypeID`        WHERE p.id = #{positionID}    </select>    <update id="updatePositionTempDefault" parameterType="java.lang.String">        update position set open = 12 where userID = #{userID} and type = TRUE    </update>    <select id="getPositionList" parameterType="java.lang.String" resultType="java.util.Map" >        SELECT            position.`ID` as 'value' ,            position.`title` as 'text'        FROM          beenrecruited b        LEFT JOIN position position          ON position.`ID` = b.`positionID`        WHERE b.`createBy` = #{userID}        AND DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= b.`updateTime`    </select>    <select id="chatPosition" parameterType="java.lang.String" resultType="java.util.Map" >       select p.title,p.startTime,p.endTime,p.dailySalary,p.personNumDay,p.sexRequirements,h.name from       position p left join huntingtype h on p.workTypeID = h.id       where p.id = #{id}    </select></mapper>